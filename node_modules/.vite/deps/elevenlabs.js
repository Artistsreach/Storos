import {
  require_browser,
  require_browser2,
  require_buffer,
  require_events,
  require_string_decoder
} from "./chunk-6TPBYDQR.js";
import {
  __commonJS
} from "./chunk-2GTGKKMZ.js";

// node_modules/elevenlabs/api/resources/history/types/HistoryGetAllRequestSource.js
var require_HistoryGetAllRequestSource = __commonJS({
  "node_modules/elevenlabs/api/resources/history/types/HistoryGetAllRequestSource.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HistoryGetAllRequestSource = void 0;
    exports.HistoryGetAllRequestSource = {
      Tts: "TTS",
      Sts: "STS"
    };
  }
});

// node_modules/elevenlabs/api/resources/history/types/index.js
var require_types = __commonJS({
  "node_modules/elevenlabs/api/resources/history/types/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_HistoryGetAllRequestSource(), exports);
  }
});

// node_modules/elevenlabs/api/resources/history/client/requests/index.js
var require_requests = __commonJS({
  "node_modules/elevenlabs/api/resources/history/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/history/client/index.js
var require_client = __commonJS({
  "node_modules/elevenlabs/api/resources/history/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests(), exports);
  }
});

// node_modules/elevenlabs/api/resources/history/index.js
var require_history = __commonJS({
  "node_modules/elevenlabs/api/resources/history/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_types(), exports);
    __exportStar(require_client(), exports);
  }
});

// node_modules/elevenlabs/api/resources/textToSoundEffects/types/TextToSoundEffectsConvertRequestOutputFormat.js
var require_TextToSoundEffectsConvertRequestOutputFormat = __commonJS({
  "node_modules/elevenlabs/api/resources/textToSoundEffects/types/TextToSoundEffectsConvertRequestOutputFormat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TextToSoundEffectsConvertRequestOutputFormat = void 0;
    exports.TextToSoundEffectsConvertRequestOutputFormat = {
      Mp32205032: "mp3_22050_32",
      Mp34410032: "mp3_44100_32",
      Mp34410064: "mp3_44100_64",
      Mp34410096: "mp3_44100_96",
      Mp344100128: "mp3_44100_128",
      Mp344100192: "mp3_44100_192",
      Pcm8000: "pcm_8000",
      Pcm16000: "pcm_16000",
      Pcm22050: "pcm_22050",
      Pcm24000: "pcm_24000",
      Pcm44100: "pcm_44100",
      Pcm48000: "pcm_48000",
      Ulaw8000: "ulaw_8000",
      Alaw8000: "alaw_8000",
      Opus4800032: "opus_48000_32",
      Opus4800064: "opus_48000_64",
      Opus4800096: "opus_48000_96",
      Opus48000128: "opus_48000_128",
      Opus48000192: "opus_48000_192"
    };
  }
});

// node_modules/elevenlabs/api/resources/textToSoundEffects/types/index.js
var require_types2 = __commonJS({
  "node_modules/elevenlabs/api/resources/textToSoundEffects/types/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_TextToSoundEffectsConvertRequestOutputFormat(), exports);
  }
});

// node_modules/elevenlabs/api/resources/textToSoundEffects/client/requests/index.js
var require_requests2 = __commonJS({
  "node_modules/elevenlabs/api/resources/textToSoundEffects/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/textToSoundEffects/client/index.js
var require_client2 = __commonJS({
  "node_modules/elevenlabs/api/resources/textToSoundEffects/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests2(), exports);
  }
});

// node_modules/elevenlabs/api/resources/textToSoundEffects/index.js
var require_textToSoundEffects = __commonJS({
  "node_modules/elevenlabs/api/resources/textToSoundEffects/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_types2(), exports);
    __exportStar(require_client2(), exports);
  }
});

// node_modules/elevenlabs/api/resources/audioIsolation/types/AudioIsolationAudioIsolationRequestFileFormat.js
var require_AudioIsolationAudioIsolationRequestFileFormat = __commonJS({
  "node_modules/elevenlabs/api/resources/audioIsolation/types/AudioIsolationAudioIsolationRequestFileFormat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AudioIsolationAudioIsolationRequestFileFormat = void 0;
    exports.AudioIsolationAudioIsolationRequestFileFormat = {
      PcmS16Le16: "pcm_s16le_16",
      Other: "other"
    };
  }
});

// node_modules/elevenlabs/api/resources/audioIsolation/types/AudioIsolationAudioIsolationStreamRequestFileFormat.js
var require_AudioIsolationAudioIsolationStreamRequestFileFormat = __commonJS({
  "node_modules/elevenlabs/api/resources/audioIsolation/types/AudioIsolationAudioIsolationStreamRequestFileFormat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AudioIsolationAudioIsolationStreamRequestFileFormat = void 0;
    exports.AudioIsolationAudioIsolationStreamRequestFileFormat = {
      PcmS16Le16: "pcm_s16le_16",
      Other: "other"
    };
  }
});

// node_modules/elevenlabs/api/resources/audioIsolation/types/index.js
var require_types3 = __commonJS({
  "node_modules/elevenlabs/api/resources/audioIsolation/types/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_AudioIsolationAudioIsolationRequestFileFormat(), exports);
    __exportStar(require_AudioIsolationAudioIsolationStreamRequestFileFormat(), exports);
  }
});

// node_modules/elevenlabs/api/resources/audioIsolation/client/requests/index.js
var require_requests3 = __commonJS({
  "node_modules/elevenlabs/api/resources/audioIsolation/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/audioIsolation/client/index.js
var require_client3 = __commonJS({
  "node_modules/elevenlabs/api/resources/audioIsolation/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests3(), exports);
  }
});

// node_modules/elevenlabs/api/resources/audioIsolation/index.js
var require_audioIsolation = __commonJS({
  "node_modules/elevenlabs/api/resources/audioIsolation/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_types3(), exports);
    __exportStar(require_client3(), exports);
  }
});

// node_modules/elevenlabs/api/resources/textToSpeech/types/TextToSpeechConvertRequestOutputFormat.js
var require_TextToSpeechConvertRequestOutputFormat = __commonJS({
  "node_modules/elevenlabs/api/resources/textToSpeech/types/TextToSpeechConvertRequestOutputFormat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TextToSpeechConvertRequestOutputFormat = void 0;
    exports.TextToSpeechConvertRequestOutputFormat = {
      Mp32205032: "mp3_22050_32",
      Mp34410032: "mp3_44100_32",
      Mp34410064: "mp3_44100_64",
      Mp34410096: "mp3_44100_96",
      Mp344100128: "mp3_44100_128",
      Mp344100192: "mp3_44100_192",
      Pcm8000: "pcm_8000",
      Pcm16000: "pcm_16000",
      Pcm22050: "pcm_22050",
      Pcm24000: "pcm_24000",
      Pcm44100: "pcm_44100",
      Pcm48000: "pcm_48000",
      Ulaw8000: "ulaw_8000",
      Alaw8000: "alaw_8000",
      Opus4800032: "opus_48000_32",
      Opus4800064: "opus_48000_64",
      Opus4800096: "opus_48000_96",
      Opus48000128: "opus_48000_128",
      Opus48000192: "opus_48000_192"
    };
  }
});

// node_modules/elevenlabs/api/resources/textToSpeech/types/BodyTextToSpeechV1TextToSpeechVoiceIdPostApplyTextNormalization.js
var require_BodyTextToSpeechV1TextToSpeechVoiceIdPostApplyTextNormalization = __commonJS({
  "node_modules/elevenlabs/api/resources/textToSpeech/types/BodyTextToSpeechV1TextToSpeechVoiceIdPostApplyTextNormalization.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BodyTextToSpeechV1TextToSpeechVoiceIdPostApplyTextNormalization = void 0;
    exports.BodyTextToSpeechV1TextToSpeechVoiceIdPostApplyTextNormalization = {
      Auto: "auto",
      On: "on",
      Off: "off"
    };
  }
});

// node_modules/elevenlabs/api/resources/textToSpeech/types/TextToSpeechConvertWithTimestampsRequestOutputFormat.js
var require_TextToSpeechConvertWithTimestampsRequestOutputFormat = __commonJS({
  "node_modules/elevenlabs/api/resources/textToSpeech/types/TextToSpeechConvertWithTimestampsRequestOutputFormat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TextToSpeechConvertWithTimestampsRequestOutputFormat = void 0;
    exports.TextToSpeechConvertWithTimestampsRequestOutputFormat = {
      Mp32205032: "mp3_22050_32",
      Mp34410032: "mp3_44100_32",
      Mp34410064: "mp3_44100_64",
      Mp34410096: "mp3_44100_96",
      Mp344100128: "mp3_44100_128",
      Mp344100192: "mp3_44100_192",
      Pcm8000: "pcm_8000",
      Pcm16000: "pcm_16000",
      Pcm22050: "pcm_22050",
      Pcm24000: "pcm_24000",
      Pcm44100: "pcm_44100",
      Pcm48000: "pcm_48000",
      Ulaw8000: "ulaw_8000",
      Alaw8000: "alaw_8000",
      Opus4800032: "opus_48000_32",
      Opus4800064: "opus_48000_64",
      Opus4800096: "opus_48000_96",
      Opus48000128: "opus_48000_128",
      Opus48000192: "opus_48000_192"
    };
  }
});

// node_modules/elevenlabs/api/resources/textToSpeech/types/BodyTextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostApplyTextNormalization.js
var require_BodyTextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostApplyTextNormalization = __commonJS({
  "node_modules/elevenlabs/api/resources/textToSpeech/types/BodyTextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostApplyTextNormalization.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BodyTextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostApplyTextNormalization = void 0;
    exports.BodyTextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostApplyTextNormalization = {
      Auto: "auto",
      On: "on",
      Off: "off"
    };
  }
});

// node_modules/elevenlabs/api/resources/textToSpeech/types/TextToSpeechConvertAsStreamRequestOutputFormat.js
var require_TextToSpeechConvertAsStreamRequestOutputFormat = __commonJS({
  "node_modules/elevenlabs/api/resources/textToSpeech/types/TextToSpeechConvertAsStreamRequestOutputFormat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TextToSpeechConvertAsStreamRequestOutputFormat = void 0;
    exports.TextToSpeechConvertAsStreamRequestOutputFormat = {
      Mp32205032: "mp3_22050_32",
      Mp34410032: "mp3_44100_32",
      Mp34410064: "mp3_44100_64",
      Mp34410096: "mp3_44100_96",
      Mp344100128: "mp3_44100_128",
      Mp344100192: "mp3_44100_192",
      Pcm8000: "pcm_8000",
      Pcm16000: "pcm_16000",
      Pcm22050: "pcm_22050",
      Pcm24000: "pcm_24000",
      Pcm44100: "pcm_44100",
      Pcm48000: "pcm_48000",
      Ulaw8000: "ulaw_8000",
      Alaw8000: "alaw_8000",
      Opus4800032: "opus_48000_32",
      Opus4800064: "opus_48000_64",
      Opus4800096: "opus_48000_96",
      Opus48000128: "opus_48000_128",
      Opus48000192: "opus_48000_192"
    };
  }
});

// node_modules/elevenlabs/api/resources/textToSpeech/types/BodyTextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostApplyTextNormalization.js
var require_BodyTextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostApplyTextNormalization = __commonJS({
  "node_modules/elevenlabs/api/resources/textToSpeech/types/BodyTextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostApplyTextNormalization.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BodyTextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostApplyTextNormalization = void 0;
    exports.BodyTextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostApplyTextNormalization = {
      Auto: "auto",
      On: "on",
      Off: "off"
    };
  }
});

// node_modules/elevenlabs/api/resources/textToSpeech/types/TextToSpeechStreamWithTimestampsRequestOutputFormat.js
var require_TextToSpeechStreamWithTimestampsRequestOutputFormat = __commonJS({
  "node_modules/elevenlabs/api/resources/textToSpeech/types/TextToSpeechStreamWithTimestampsRequestOutputFormat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TextToSpeechStreamWithTimestampsRequestOutputFormat = void 0;
    exports.TextToSpeechStreamWithTimestampsRequestOutputFormat = {
      Mp32205032: "mp3_22050_32",
      Mp34410032: "mp3_44100_32",
      Mp34410064: "mp3_44100_64",
      Mp34410096: "mp3_44100_96",
      Mp344100128: "mp3_44100_128",
      Mp344100192: "mp3_44100_192",
      Pcm8000: "pcm_8000",
      Pcm16000: "pcm_16000",
      Pcm22050: "pcm_22050",
      Pcm24000: "pcm_24000",
      Pcm44100: "pcm_44100",
      Pcm48000: "pcm_48000",
      Ulaw8000: "ulaw_8000",
      Alaw8000: "alaw_8000",
      Opus4800032: "opus_48000_32",
      Opus4800064: "opus_48000_64",
      Opus4800096: "opus_48000_96",
      Opus48000128: "opus_48000_128",
      Opus48000192: "opus_48000_192"
    };
  }
});

// node_modules/elevenlabs/api/resources/textToSpeech/types/BodyTextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostApplyTextNormalization.js
var require_BodyTextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostApplyTextNormalization = __commonJS({
  "node_modules/elevenlabs/api/resources/textToSpeech/types/BodyTextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostApplyTextNormalization.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BodyTextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostApplyTextNormalization = void 0;
    exports.BodyTextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostApplyTextNormalization = {
      Auto: "auto",
      On: "on",
      Off: "off"
    };
  }
});

// node_modules/elevenlabs/api/resources/textToSpeech/types/index.js
var require_types4 = __commonJS({
  "node_modules/elevenlabs/api/resources/textToSpeech/types/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_TextToSpeechConvertRequestOutputFormat(), exports);
    __exportStar(require_BodyTextToSpeechV1TextToSpeechVoiceIdPostApplyTextNormalization(), exports);
    __exportStar(require_TextToSpeechConvertWithTimestampsRequestOutputFormat(), exports);
    __exportStar(require_BodyTextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostApplyTextNormalization(), exports);
    __exportStar(require_TextToSpeechConvertAsStreamRequestOutputFormat(), exports);
    __exportStar(require_BodyTextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostApplyTextNormalization(), exports);
    __exportStar(require_TextToSpeechStreamWithTimestampsRequestOutputFormat(), exports);
    __exportStar(require_BodyTextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostApplyTextNormalization(), exports);
  }
});

// node_modules/elevenlabs/api/resources/textToSpeech/client/requests/index.js
var require_requests4 = __commonJS({
  "node_modules/elevenlabs/api/resources/textToSpeech/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/textToSpeech/client/index.js
var require_client4 = __commonJS({
  "node_modules/elevenlabs/api/resources/textToSpeech/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests4(), exports);
  }
});

// node_modules/elevenlabs/api/resources/textToSpeech/index.js
var require_textToSpeech = __commonJS({
  "node_modules/elevenlabs/api/resources/textToSpeech/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_types4(), exports);
    __exportStar(require_client4(), exports);
  }
});

// node_modules/elevenlabs/api/resources/speechToSpeech/types/SpeechToSpeechConvertRequestOutputFormat.js
var require_SpeechToSpeechConvertRequestOutputFormat = __commonJS({
  "node_modules/elevenlabs/api/resources/speechToSpeech/types/SpeechToSpeechConvertRequestOutputFormat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SpeechToSpeechConvertRequestOutputFormat = void 0;
    exports.SpeechToSpeechConvertRequestOutputFormat = {
      Mp32205032: "mp3_22050_32",
      Mp34410032: "mp3_44100_32",
      Mp34410064: "mp3_44100_64",
      Mp34410096: "mp3_44100_96",
      Mp344100128: "mp3_44100_128",
      Mp344100192: "mp3_44100_192",
      Pcm8000: "pcm_8000",
      Pcm16000: "pcm_16000",
      Pcm22050: "pcm_22050",
      Pcm24000: "pcm_24000",
      Pcm44100: "pcm_44100",
      Pcm48000: "pcm_48000",
      Ulaw8000: "ulaw_8000",
      Alaw8000: "alaw_8000",
      Opus4800032: "opus_48000_32",
      Opus4800064: "opus_48000_64",
      Opus4800096: "opus_48000_96",
      Opus48000128: "opus_48000_128",
      Opus48000192: "opus_48000_192"
    };
  }
});

// node_modules/elevenlabs/api/resources/speechToSpeech/types/SpeechToSpeechConvertRequestFileFormat.js
var require_SpeechToSpeechConvertRequestFileFormat = __commonJS({
  "node_modules/elevenlabs/api/resources/speechToSpeech/types/SpeechToSpeechConvertRequestFileFormat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SpeechToSpeechConvertRequestFileFormat = void 0;
    exports.SpeechToSpeechConvertRequestFileFormat = {
      PcmS16Le16: "pcm_s16le_16",
      Other: "other"
    };
  }
});

// node_modules/elevenlabs/api/resources/speechToSpeech/types/SpeechToSpeechConvertAsStreamRequestOutputFormat.js
var require_SpeechToSpeechConvertAsStreamRequestOutputFormat = __commonJS({
  "node_modules/elevenlabs/api/resources/speechToSpeech/types/SpeechToSpeechConvertAsStreamRequestOutputFormat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SpeechToSpeechConvertAsStreamRequestOutputFormat = void 0;
    exports.SpeechToSpeechConvertAsStreamRequestOutputFormat = {
      Mp32205032: "mp3_22050_32",
      Mp34410032: "mp3_44100_32",
      Mp34410064: "mp3_44100_64",
      Mp34410096: "mp3_44100_96",
      Mp344100128: "mp3_44100_128",
      Mp344100192: "mp3_44100_192",
      Pcm8000: "pcm_8000",
      Pcm16000: "pcm_16000",
      Pcm22050: "pcm_22050",
      Pcm24000: "pcm_24000",
      Pcm44100: "pcm_44100",
      Pcm48000: "pcm_48000",
      Ulaw8000: "ulaw_8000",
      Alaw8000: "alaw_8000",
      Opus4800032: "opus_48000_32",
      Opus4800064: "opus_48000_64",
      Opus4800096: "opus_48000_96",
      Opus48000128: "opus_48000_128",
      Opus48000192: "opus_48000_192"
    };
  }
});

// node_modules/elevenlabs/api/resources/speechToSpeech/types/SpeechToSpeechConvertAsStreamRequestFileFormat.js
var require_SpeechToSpeechConvertAsStreamRequestFileFormat = __commonJS({
  "node_modules/elevenlabs/api/resources/speechToSpeech/types/SpeechToSpeechConvertAsStreamRequestFileFormat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SpeechToSpeechConvertAsStreamRequestFileFormat = void 0;
    exports.SpeechToSpeechConvertAsStreamRequestFileFormat = {
      PcmS16Le16: "pcm_s16le_16",
      Other: "other"
    };
  }
});

// node_modules/elevenlabs/api/resources/speechToSpeech/types/index.js
var require_types5 = __commonJS({
  "node_modules/elevenlabs/api/resources/speechToSpeech/types/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_SpeechToSpeechConvertRequestOutputFormat(), exports);
    __exportStar(require_SpeechToSpeechConvertRequestFileFormat(), exports);
    __exportStar(require_SpeechToSpeechConvertAsStreamRequestOutputFormat(), exports);
    __exportStar(require_SpeechToSpeechConvertAsStreamRequestFileFormat(), exports);
  }
});

// node_modules/elevenlabs/api/resources/speechToSpeech/client/requests/index.js
var require_requests5 = __commonJS({
  "node_modules/elevenlabs/api/resources/speechToSpeech/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/speechToSpeech/client/index.js
var require_client5 = __commonJS({
  "node_modules/elevenlabs/api/resources/speechToSpeech/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests5(), exports);
  }
});

// node_modules/elevenlabs/api/resources/speechToSpeech/index.js
var require_speechToSpeech = __commonJS({
  "node_modules/elevenlabs/api/resources/speechToSpeech/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_types5(), exports);
    __exportStar(require_client5(), exports);
  }
});

// node_modules/elevenlabs/api/resources/textToVoice/types/TextToVoiceCreatePreviewsRequestOutputFormat.js
var require_TextToVoiceCreatePreviewsRequestOutputFormat = __commonJS({
  "node_modules/elevenlabs/api/resources/textToVoice/types/TextToVoiceCreatePreviewsRequestOutputFormat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TextToVoiceCreatePreviewsRequestOutputFormat = void 0;
    exports.TextToVoiceCreatePreviewsRequestOutputFormat = {
      Mp32205032: "mp3_22050_32",
      Mp34410032: "mp3_44100_32",
      Mp34410064: "mp3_44100_64",
      Mp34410096: "mp3_44100_96",
      Mp344100128: "mp3_44100_128",
      Mp344100192: "mp3_44100_192",
      Pcm8000: "pcm_8000",
      Pcm16000: "pcm_16000",
      Pcm22050: "pcm_22050",
      Pcm24000: "pcm_24000",
      Pcm44100: "pcm_44100",
      Pcm48000: "pcm_48000",
      Ulaw8000: "ulaw_8000",
      Alaw8000: "alaw_8000",
      Opus4800032: "opus_48000_32",
      Opus4800064: "opus_48000_64",
      Opus4800096: "opus_48000_96",
      Opus48000128: "opus_48000_128",
      Opus48000192: "opus_48000_192"
    };
  }
});

// node_modules/elevenlabs/api/resources/textToVoice/types/index.js
var require_types6 = __commonJS({
  "node_modules/elevenlabs/api/resources/textToVoice/types/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_TextToVoiceCreatePreviewsRequestOutputFormat(), exports);
  }
});

// node_modules/elevenlabs/api/resources/textToVoice/client/requests/index.js
var require_requests6 = __commonJS({
  "node_modules/elevenlabs/api/resources/textToVoice/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/textToVoice/client/index.js
var require_client6 = __commonJS({
  "node_modules/elevenlabs/api/resources/textToVoice/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests6(), exports);
  }
});

// node_modules/elevenlabs/api/resources/textToVoice/index.js
var require_textToVoice = __commonJS({
  "node_modules/elevenlabs/api/resources/textToVoice/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_types6(), exports);
    __exportStar(require_client6(), exports);
  }
});

// node_modules/elevenlabs/api/resources/voices/types/VoicesGetSharedRequestCategory.js
var require_VoicesGetSharedRequestCategory = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/types/VoicesGetSharedRequestCategory.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.VoicesGetSharedRequestCategory = void 0;
    exports.VoicesGetSharedRequestCategory = {
      Professional: "professional",
      Famous: "famous",
      HighQuality: "high_quality"
    };
  }
});

// node_modules/elevenlabs/api/resources/voices/types/index.js
var require_types7 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/types/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_VoicesGetSharedRequestCategory(), exports);
  }
});

// node_modules/elevenlabs/api/resources/voices/client/requests/index.js
var require_requests7 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/voices/client/index.js
var require_client7 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests7(), exports);
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/client/requests/index.js
var require_requests8 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/client/index.js
var require_client8 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests8(), exports);
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/client/requests/index.js
var require_requests9 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/client/index.js
var require_client9 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests9(), exports);
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/audio/client/index.js
var require_client10 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/audio/client/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/audio/index.js
var require_audio = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/audio/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client10(), exports);
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/waveform/client/index.js
var require_client11 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/waveform/client/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/waveform/index.js
var require_waveform = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/waveform/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client11(), exports);
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/speakers/client/index.js
var require_client12 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/speakers/client/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/speakers/resources/audio/client/index.js
var require_client13 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/speakers/resources/audio/client/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/speakers/resources/audio/index.js
var require_audio2 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/speakers/resources/audio/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client13(), exports);
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/speakers/resources/index.js
var require_resources = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/speakers/resources/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.audio = void 0;
    exports.audio = __importStar(require_audio2());
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/speakers/index.js
var require_speakers = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/speakers/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client12(), exports);
    __exportStar(require_resources(), exports);
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/index.js
var require_resources2 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.speakers = exports.waveform = exports.audio = void 0;
    exports.audio = __importStar(require_audio());
    exports.waveform = __importStar(require_waveform());
    exports.speakers = __importStar(require_speakers());
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/index.js
var require_samples = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client9(), exports);
    __exportStar(require_resources2(), exports);
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/verification/client/requests/index.js
var require_requests10 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/verification/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/verification/client/index.js
var require_client14 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/verification/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests10(), exports);
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/verification/resources/captcha/client/requests/index.js
var require_requests11 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/verification/resources/captcha/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/verification/resources/captcha/client/index.js
var require_client15 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/verification/resources/captcha/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests11(), exports);
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/verification/resources/captcha/index.js
var require_captcha = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/verification/resources/captcha/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client15(), exports);
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/verification/resources/index.js
var require_resources3 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/verification/resources/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.captcha = void 0;
    exports.captcha = __importStar(require_captcha());
    __exportStar(require_requests11(), exports);
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/verification/index.js
var require_verification = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/verification/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client14(), exports);
    __exportStar(require_resources3(), exports);
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/index.js
var require_resources4 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.verification = exports.samples = void 0;
    exports.samples = __importStar(require_samples());
    exports.verification = __importStar(require_verification());
    __exportStar(require_requests9(), exports);
    __exportStar(require_requests10(), exports);
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/index.js
var require_pvc = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client8(), exports);
    __exportStar(require_resources4(), exports);
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/index.js
var require_resources5 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.pvc = void 0;
    exports.pvc = __importStar(require_pvc());
    __exportStar(require_requests8(), exports);
  }
});

// node_modules/elevenlabs/api/resources/voices/index.js
var require_voices = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_types7(), exports);
    __exportStar(require_client7(), exports);
    __exportStar(require_resources5(), exports);
  }
});

// node_modules/elevenlabs/api/resources/studio/types/BodyCreatePodcastV1StudioPodcastsPostMode.js
var require_BodyCreatePodcastV1StudioPodcastsPostMode = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/types/BodyCreatePodcastV1StudioPodcastsPostMode.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/studio/types/BodyCreatePodcastV1StudioPodcastsPostSourceItem.js
var require_BodyCreatePodcastV1StudioPodcastsPostSourceItem = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/types/BodyCreatePodcastV1StudioPodcastsPostSourceItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/studio/types/BodyCreatePodcastV1StudioPodcastsPostSource.js
var require_BodyCreatePodcastV1StudioPodcastsPostSource = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/types/BodyCreatePodcastV1StudioPodcastsPostSource.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/studio/types/BodyCreatePodcastV1StudioPodcastsPostQualityPreset.js
var require_BodyCreatePodcastV1StudioPodcastsPostQualityPreset = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/types/BodyCreatePodcastV1StudioPodcastsPostQualityPreset.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BodyCreatePodcastV1StudioPodcastsPostQualityPreset = void 0;
    exports.BodyCreatePodcastV1StudioPodcastsPostQualityPreset = {
      Standard: "standard",
      High: "high",
      Highest: "highest",
      Ultra: "ultra",
      UltraLossless: "ultra_lossless"
    };
  }
});

// node_modules/elevenlabs/api/resources/studio/types/BodyCreatePodcastV1StudioPodcastsPostDurationScale.js
var require_BodyCreatePodcastV1StudioPodcastsPostDurationScale = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/types/BodyCreatePodcastV1StudioPodcastsPostDurationScale.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BodyCreatePodcastV1StudioPodcastsPostDurationScale = void 0;
    exports.BodyCreatePodcastV1StudioPodcastsPostDurationScale = {
      Short: "short",
      Default: "default",
      Long: "long"
    };
  }
});

// node_modules/elevenlabs/api/resources/studio/types/index.js
var require_types8 = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/types/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_BodyCreatePodcastV1StudioPodcastsPostMode(), exports);
    __exportStar(require_BodyCreatePodcastV1StudioPodcastsPostSourceItem(), exports);
    __exportStar(require_BodyCreatePodcastV1StudioPodcastsPostSource(), exports);
    __exportStar(require_BodyCreatePodcastV1StudioPodcastsPostQualityPreset(), exports);
    __exportStar(require_BodyCreatePodcastV1StudioPodcastsPostDurationScale(), exports);
  }
});

// node_modules/elevenlabs/api/resources/studio/resources/projects/types/ProjectsAddRequestTargetAudience.js
var require_ProjectsAddRequestTargetAudience = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/resources/projects/types/ProjectsAddRequestTargetAudience.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectsAddRequestTargetAudience = void 0;
    exports.ProjectsAddRequestTargetAudience = {
      Children: "children",
      YoungAdult: "young adult",
      Adult: "adult",
      AllAges: "all ages"
    };
  }
});

// node_modules/elevenlabs/api/resources/studio/resources/projects/types/ProjectsAddRequestFiction.js
var require_ProjectsAddRequestFiction = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/resources/projects/types/ProjectsAddRequestFiction.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectsAddRequestFiction = void 0;
    exports.ProjectsAddRequestFiction = {
      Fiction: "fiction",
      NonFiction: "non-fiction"
    };
  }
});

// node_modules/elevenlabs/api/resources/studio/resources/projects/types/ProjectsAddRequestApplyTextNormalization.js
var require_ProjectsAddRequestApplyTextNormalization = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/resources/projects/types/ProjectsAddRequestApplyTextNormalization.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectsAddRequestApplyTextNormalization = void 0;
    exports.ProjectsAddRequestApplyTextNormalization = {
      Auto: "auto",
      On: "on",
      Off: "off",
      ApplyEnglish: "apply_english"
    };
  }
});

// node_modules/elevenlabs/api/resources/studio/resources/projects/types/ProjectsAddRequestSourceType.js
var require_ProjectsAddRequestSourceType = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/resources/projects/types/ProjectsAddRequestSourceType.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectsAddRequestSourceType = void 0;
    exports.ProjectsAddRequestSourceType = {
      Blank: "blank",
      Book: "book",
      Article: "article",
      Genfm: "genfm"
    };
  }
});

// node_modules/elevenlabs/api/resources/studio/resources/projects/types/index.js
var require_types9 = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/resources/projects/types/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_ProjectsAddRequestTargetAudience(), exports);
    __exportStar(require_ProjectsAddRequestFiction(), exports);
    __exportStar(require_ProjectsAddRequestApplyTextNormalization(), exports);
    __exportStar(require_ProjectsAddRequestSourceType(), exports);
  }
});

// node_modules/elevenlabs/api/resources/studio/resources/projects/client/requests/index.js
var require_requests12 = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/resources/projects/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/studio/resources/projects/client/index.js
var require_client16 = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/resources/projects/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests12(), exports);
  }
});

// node_modules/elevenlabs/api/resources/studio/resources/projects/index.js
var require_projects = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/resources/projects/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_types9(), exports);
    __exportStar(require_client16(), exports);
  }
});

// node_modules/elevenlabs/api/resources/studio/resources/chapters/client/requests/index.js
var require_requests13 = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/resources/chapters/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/studio/resources/chapters/client/index.js
var require_client17 = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/resources/chapters/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests13(), exports);
  }
});

// node_modules/elevenlabs/api/resources/studio/resources/chapters/index.js
var require_chapters = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/resources/chapters/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client17(), exports);
  }
});

// node_modules/elevenlabs/api/resources/studio/resources/index.js
var require_resources6 = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/resources/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.chapters = exports.projects = void 0;
    exports.projects = __importStar(require_projects());
    __exportStar(require_types9(), exports);
    exports.chapters = __importStar(require_chapters());
    __exportStar(require_requests12(), exports);
    __exportStar(require_requests13(), exports);
  }
});

// node_modules/elevenlabs/api/resources/studio/client/requests/index.js
var require_requests14 = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/studio/client/index.js
var require_client18 = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests14(), exports);
  }
});

// node_modules/elevenlabs/api/resources/studio/index.js
var require_studio = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_types8(), exports);
    __exportStar(require_resources6(), exports);
    __exportStar(require_client18(), exports);
  }
});

// node_modules/elevenlabs/api/resources/dubbing/types/DubbingGetTranscriptForDubRequestFormatType.js
var require_DubbingGetTranscriptForDubRequestFormatType = __commonJS({
  "node_modules/elevenlabs/api/resources/dubbing/types/DubbingGetTranscriptForDubRequestFormatType.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DubbingGetTranscriptForDubRequestFormatType = void 0;
    exports.DubbingGetTranscriptForDubRequestFormatType = {
      Srt: "srt",
      Webvtt: "webvtt"
    };
  }
});

// node_modules/elevenlabs/api/resources/dubbing/types/index.js
var require_types10 = __commonJS({
  "node_modules/elevenlabs/api/resources/dubbing/types/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_DubbingGetTranscriptForDubRequestFormatType(), exports);
  }
});

// node_modules/elevenlabs/api/resources/dubbing/client/requests/index.js
var require_requests15 = __commonJS({
  "node_modules/elevenlabs/api/resources/dubbing/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/dubbing/client/index.js
var require_client19 = __commonJS({
  "node_modules/elevenlabs/api/resources/dubbing/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests15(), exports);
  }
});

// node_modules/elevenlabs/api/resources/dubbing/resources/speaker/client/requests/index.js
var require_requests16 = __commonJS({
  "node_modules/elevenlabs/api/resources/dubbing/resources/speaker/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/dubbing/resources/speaker/client/index.js
var require_client20 = __commonJS({
  "node_modules/elevenlabs/api/resources/dubbing/resources/speaker/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests16(), exports);
  }
});

// node_modules/elevenlabs/api/resources/dubbing/resources/speaker/resources/segment/client/requests/index.js
var require_requests17 = __commonJS({
  "node_modules/elevenlabs/api/resources/dubbing/resources/speaker/resources/segment/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/dubbing/resources/speaker/resources/segment/client/index.js
var require_client21 = __commonJS({
  "node_modules/elevenlabs/api/resources/dubbing/resources/speaker/resources/segment/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests17(), exports);
  }
});

// node_modules/elevenlabs/api/resources/dubbing/resources/speaker/resources/segment/index.js
var require_segment = __commonJS({
  "node_modules/elevenlabs/api/resources/dubbing/resources/speaker/resources/segment/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client21(), exports);
  }
});

// node_modules/elevenlabs/api/resources/dubbing/resources/speaker/resources/index.js
var require_resources7 = __commonJS({
  "node_modules/elevenlabs/api/resources/dubbing/resources/speaker/resources/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.segment = void 0;
    exports.segment = __importStar(require_segment());
    __exportStar(require_requests17(), exports);
  }
});

// node_modules/elevenlabs/api/resources/dubbing/resources/speaker/index.js
var require_speaker = __commonJS({
  "node_modules/elevenlabs/api/resources/dubbing/resources/speaker/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client20(), exports);
    __exportStar(require_resources7(), exports);
  }
});

// node_modules/elevenlabs/api/resources/dubbing/resources/index.js
var require_resources8 = __commonJS({
  "node_modules/elevenlabs/api/resources/dubbing/resources/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.speaker = void 0;
    exports.speaker = __importStar(require_speaker());
    __exportStar(require_requests16(), exports);
  }
});

// node_modules/elevenlabs/api/resources/dubbing/index.js
var require_dubbing = __commonJS({
  "node_modules/elevenlabs/api/resources/dubbing/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_types10(), exports);
    __exportStar(require_client19(), exports);
    __exportStar(require_resources8(), exports);
  }
});

// node_modules/elevenlabs/api/resources/pronunciationDictionary/types/PronunciationDictionaryAddFromFileRequestWorkspaceAccess.js
var require_PronunciationDictionaryAddFromFileRequestWorkspaceAccess = __commonJS({
  "node_modules/elevenlabs/api/resources/pronunciationDictionary/types/PronunciationDictionaryAddFromFileRequestWorkspaceAccess.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PronunciationDictionaryAddFromFileRequestWorkspaceAccess = void 0;
    exports.PronunciationDictionaryAddFromFileRequestWorkspaceAccess = {
      Admin: "admin",
      Editor: "editor",
      Viewer: "viewer"
    };
  }
});

// node_modules/elevenlabs/api/resources/pronunciationDictionary/types/BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromRulesPostRulesItem.js
var require_BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromRulesPostRulesItem = __commonJS({
  "node_modules/elevenlabs/api/resources/pronunciationDictionary/types/BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromRulesPostRulesItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/pronunciationDictionary/types/BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromRulesPostWorkspaceAccess.js
var require_BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromRulesPostWorkspaceAccess = __commonJS({
  "node_modules/elevenlabs/api/resources/pronunciationDictionary/types/BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromRulesPostWorkspaceAccess.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromRulesPostWorkspaceAccess = void 0;
    exports.BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromRulesPostWorkspaceAccess = {
      Admin: "admin",
      Editor: "editor",
      Viewer: "viewer"
    };
  }
});

// node_modules/elevenlabs/api/resources/pronunciationDictionary/types/PronunciationDictionaryRule.js
var require_PronunciationDictionaryRule = __commonJS({
  "node_modules/elevenlabs/api/resources/pronunciationDictionary/types/PronunciationDictionaryRule.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/pronunciationDictionary/types/PronunciationDictionaryGetAllRequestSort.js
var require_PronunciationDictionaryGetAllRequestSort = __commonJS({
  "node_modules/elevenlabs/api/resources/pronunciationDictionary/types/PronunciationDictionaryGetAllRequestSort.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PronunciationDictionaryGetAllRequestSort = void 0;
    exports.PronunciationDictionaryGetAllRequestSort = {
      CreationTimeUnix: "creation_time_unix",
      Name: "name"
    };
  }
});

// node_modules/elevenlabs/api/resources/pronunciationDictionary/types/index.js
var require_types11 = __commonJS({
  "node_modules/elevenlabs/api/resources/pronunciationDictionary/types/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_PronunciationDictionaryAddFromFileRequestWorkspaceAccess(), exports);
    __exportStar(require_BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromRulesPostRulesItem(), exports);
    __exportStar(require_BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromRulesPostWorkspaceAccess(), exports);
    __exportStar(require_PronunciationDictionaryRule(), exports);
    __exportStar(require_PronunciationDictionaryGetAllRequestSort(), exports);
  }
});

// node_modules/elevenlabs/api/resources/pronunciationDictionary/client/requests/index.js
var require_requests18 = __commonJS({
  "node_modules/elevenlabs/api/resources/pronunciationDictionary/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/pronunciationDictionary/client/index.js
var require_client22 = __commonJS({
  "node_modules/elevenlabs/api/resources/pronunciationDictionary/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests18(), exports);
  }
});

// node_modules/elevenlabs/api/resources/pronunciationDictionary/index.js
var require_pronunciationDictionary = __commonJS({
  "node_modules/elevenlabs/api/resources/pronunciationDictionary/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_types11(), exports);
    __exportStar(require_client22(), exports);
  }
});

// node_modules/elevenlabs/api/resources/workspace/types/BodyInviteUserV1WorkspaceInvitesAddPostWorkspacePermission.js
var require_BodyInviteUserV1WorkspaceInvitesAddPostWorkspacePermission = __commonJS({
  "node_modules/elevenlabs/api/resources/workspace/types/BodyInviteUserV1WorkspaceInvitesAddPostWorkspacePermission.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BodyInviteUserV1WorkspaceInvitesAddPostWorkspacePermission = void 0;
    exports.BodyInviteUserV1WorkspaceInvitesAddPostWorkspacePermission = {
      External: "external",
      Admin: "admin",
      WorkspaceAdmin: "workspace_admin",
      WorkspaceMember: "workspace_member",
      SupportL1: "support_l1",
      SupportL2: "support_l2",
      Moderator: "moderator",
      Sales: "sales",
      VoiceMixer: "voice_mixer",
      VoiceAdmin: "voice_admin",
      ConvaiAdmin: "convai_admin",
      EnterpriseViewer: "enterprise_viewer",
      QualityCheckAdmin: "quality_check_admin",
      WorkspaceMigrationAdmin: "workspace_migration_admin",
      HumanReviewer: "human_reviewer",
      ProductionsAdmin: "productions_admin"
    };
  }
});

// node_modules/elevenlabs/api/resources/workspace/types/BodyUpdateMemberV1WorkspaceMembersPostWorkspaceRole.js
var require_BodyUpdateMemberV1WorkspaceMembersPostWorkspaceRole = __commonJS({
  "node_modules/elevenlabs/api/resources/workspace/types/BodyUpdateMemberV1WorkspaceMembersPostWorkspaceRole.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BodyUpdateMemberV1WorkspaceMembersPostWorkspaceRole = void 0;
    exports.BodyUpdateMemberV1WorkspaceMembersPostWorkspaceRole = {
      WorkspaceAdmin: "workspace_admin",
      WorkspaceMember: "workspace_member"
    };
  }
});

// node_modules/elevenlabs/api/resources/workspace/types/BodyShareWorkspaceResourceV1WorkspaceResourcesResourceIdSharePostRole.js
var require_BodyShareWorkspaceResourceV1WorkspaceResourcesResourceIdSharePostRole = __commonJS({
  "node_modules/elevenlabs/api/resources/workspace/types/BodyShareWorkspaceResourceV1WorkspaceResourcesResourceIdSharePostRole.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BodyShareWorkspaceResourceV1WorkspaceResourcesResourceIdSharePostRole = void 0;
    exports.BodyShareWorkspaceResourceV1WorkspaceResourcesResourceIdSharePostRole = {
      Admin: "admin",
      Editor: "editor",
      Viewer: "viewer"
    };
  }
});

// node_modules/elevenlabs/api/resources/workspace/types/index.js
var require_types12 = __commonJS({
  "node_modules/elevenlabs/api/resources/workspace/types/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_BodyInviteUserV1WorkspaceInvitesAddPostWorkspacePermission(), exports);
    __exportStar(require_BodyUpdateMemberV1WorkspaceMembersPostWorkspaceRole(), exports);
    __exportStar(require_BodyShareWorkspaceResourceV1WorkspaceResourcesResourceIdSharePostRole(), exports);
  }
});

// node_modules/elevenlabs/api/resources/workspace/client/requests/index.js
var require_requests19 = __commonJS({
  "node_modules/elevenlabs/api/resources/workspace/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/workspace/client/index.js
var require_client23 = __commonJS({
  "node_modules/elevenlabs/api/resources/workspace/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests19(), exports);
  }
});

// node_modules/elevenlabs/api/resources/workspace/index.js
var require_workspace = __commonJS({
  "node_modules/elevenlabs/api/resources/workspace/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_types12(), exports);
    __exportStar(require_client23(), exports);
  }
});

// node_modules/elevenlabs/api/resources/speechToText/types/SpeechToTextConvertRequestTimestampsGranularity.js
var require_SpeechToTextConvertRequestTimestampsGranularity = __commonJS({
  "node_modules/elevenlabs/api/resources/speechToText/types/SpeechToTextConvertRequestTimestampsGranularity.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SpeechToTextConvertRequestTimestampsGranularity = void 0;
    exports.SpeechToTextConvertRequestTimestampsGranularity = {
      None: "none",
      Word: "word",
      Character: "character"
    };
  }
});

// node_modules/elevenlabs/api/resources/speechToText/types/SpeechToTextConvertRequestFileFormat.js
var require_SpeechToTextConvertRequestFileFormat = __commonJS({
  "node_modules/elevenlabs/api/resources/speechToText/types/SpeechToTextConvertRequestFileFormat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SpeechToTextConvertRequestFileFormat = void 0;
    exports.SpeechToTextConvertRequestFileFormat = {
      PcmS16Le16: "pcm_s16le_16",
      Other: "other"
    };
  }
});

// node_modules/elevenlabs/api/resources/speechToText/types/index.js
var require_types13 = __commonJS({
  "node_modules/elevenlabs/api/resources/speechToText/types/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_SpeechToTextConvertRequestTimestampsGranularity(), exports);
    __exportStar(require_SpeechToTextConvertRequestFileFormat(), exports);
  }
});

// node_modules/elevenlabs/api/resources/speechToText/client/requests/index.js
var require_requests20 = __commonJS({
  "node_modules/elevenlabs/api/resources/speechToText/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/speechToText/client/index.js
var require_client24 = __commonJS({
  "node_modules/elevenlabs/api/resources/speechToText/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests20(), exports);
  }
});

// node_modules/elevenlabs/api/resources/speechToText/index.js
var require_speechToText = __commonJS({
  "node_modules/elevenlabs/api/resources/speechToText/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_types13(), exports);
    __exportStar(require_client24(), exports);
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/types/ConversationalAiCreatePhoneNumberRequestBody.js
var require_ConversationalAiCreatePhoneNumberRequestBody = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/types/ConversationalAiCreatePhoneNumberRequestBody.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/types/ConversationalAiGetPhoneNumberResponse.js
var require_ConversationalAiGetPhoneNumberResponse = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/types/ConversationalAiGetPhoneNumberResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/types/ConversationalAiUpdatePhoneNumberResponse.js
var require_ConversationalAiUpdatePhoneNumberResponse = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/types/ConversationalAiUpdatePhoneNumberResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/types/ConversationalAiGetPhoneNumbersResponseItem.js
var require_ConversationalAiGetPhoneNumbersResponseItem = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/types/ConversationalAiGetPhoneNumbersResponseItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/types/ConversationalAiGetKnowledgeBaseDocumentByIdResponse.js
var require_ConversationalAiGetKnowledgeBaseDocumentByIdResponse = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/types/ConversationalAiGetKnowledgeBaseDocumentByIdResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/types/ConversationalAiUpdateKnowledgeBaseDocumentResponse.js
var require_ConversationalAiUpdateKnowledgeBaseDocumentResponse = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/types/ConversationalAiUpdateKnowledgeBaseDocumentResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/types/PatchConvAiDashboardSettingsRequestChartsItem.js
var require_PatchConvAiDashboardSettingsRequestChartsItem = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/types/PatchConvAiDashboardSettingsRequestChartsItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/types/index.js
var require_types14 = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/types/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_ConversationalAiCreatePhoneNumberRequestBody(), exports);
    __exportStar(require_ConversationalAiGetPhoneNumberResponse(), exports);
    __exportStar(require_ConversationalAiUpdatePhoneNumberResponse(), exports);
    __exportStar(require_ConversationalAiGetPhoneNumbersResponseItem(), exports);
    __exportStar(require_ConversationalAiGetKnowledgeBaseDocumentByIdResponse(), exports);
    __exportStar(require_ConversationalAiUpdateKnowledgeBaseDocumentResponse(), exports);
    __exportStar(require_PatchConvAiDashboardSettingsRequestChartsItem(), exports);
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/client/requests/index.js
var require_requests21 = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/client/index.js
var require_client25 = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests21(), exports);
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/resources/agents/client/requests/index.js
var require_requests22 = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/resources/agents/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/resources/agents/client/index.js
var require_client26 = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/resources/agents/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests22(), exports);
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/resources/agents/index.js
var require_agents = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/resources/agents/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client26(), exports);
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/resources/sipTrunk/client/requests/index.js
var require_requests23 = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/resources/sipTrunk/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/resources/sipTrunk/client/index.js
var require_client27 = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/resources/sipTrunk/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests23(), exports);
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/resources/sipTrunk/index.js
var require_sipTrunk = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/resources/sipTrunk/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client27(), exports);
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/resources/knowledgeBase/client/index.js
var require_client28 = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/resources/knowledgeBase/client/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/resources/knowledgeBase/resources/document/client/requests/index.js
var require_requests24 = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/resources/knowledgeBase/resources/document/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/resources/knowledgeBase/resources/document/client/index.js
var require_client29 = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/resources/knowledgeBase/resources/document/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests24(), exports);
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/resources/knowledgeBase/resources/document/index.js
var require_document = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/resources/knowledgeBase/resources/document/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client29(), exports);
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/resources/knowledgeBase/resources/index.js
var require_resources9 = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/resources/knowledgeBase/resources/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.document = void 0;
    exports.document = __importStar(require_document());
    __exportStar(require_requests24(), exports);
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/resources/knowledgeBase/index.js
var require_knowledgeBase = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/resources/knowledgeBase/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client28(), exports);
    __exportStar(require_resources9(), exports);
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/resources/index.js
var require_resources10 = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/resources/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.knowledgeBase = exports.sipTrunk = exports.agents = void 0;
    exports.agents = __importStar(require_agents());
    exports.sipTrunk = __importStar(require_sipTrunk());
    exports.knowledgeBase = __importStar(require_knowledgeBase());
    __exportStar(require_requests22(), exports);
    __exportStar(require_requests23(), exports);
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/index.js
var require_conversationalAi = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_types14(), exports);
    __exportStar(require_client25(), exports);
    __exportStar(require_resources10(), exports);
  }
});

// node_modules/elevenlabs/api/resources/v1TextToSpeechVoiceIdStreamInput/types/SendMessage.js
var require_SendMessage = __commonJS({
  "node_modules/elevenlabs/api/resources/v1TextToSpeechVoiceIdStreamInput/types/SendMessage.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/v1TextToSpeechVoiceIdStreamInput/types/ReceiveMessage.js
var require_ReceiveMessage = __commonJS({
  "node_modules/elevenlabs/api/resources/v1TextToSpeechVoiceIdStreamInput/types/ReceiveMessage.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/v1TextToSpeechVoiceIdStreamInput/types/index.js
var require_types15 = __commonJS({
  "node_modules/elevenlabs/api/resources/v1TextToSpeechVoiceIdStreamInput/types/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_SendMessage(), exports);
    __exportStar(require_ReceiveMessage(), exports);
  }
});

// node_modules/elevenlabs/api/resources/v1TextToSpeechVoiceIdStreamInput/index.js
var require_v1TextToSpeechVoiceIdStreamInput = __commonJS({
  "node_modules/elevenlabs/api/resources/v1TextToSpeechVoiceIdStreamInput/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_types15(), exports);
  }
});

// node_modules/elevenlabs/api/resources/v1TextToSpeechVoiceIdMultiStreamInput/types/TextToSpeechOutputFormat.js
var require_TextToSpeechOutputFormat = __commonJS({
  "node_modules/elevenlabs/api/resources/v1TextToSpeechVoiceIdMultiStreamInput/types/TextToSpeechOutputFormat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TextToSpeechOutputFormat = void 0;
    exports.TextToSpeechOutputFormat = {
      Mp32205032: "mp3_22050_32",
      Mp34410032: "mp3_44100_32",
      Mp34410064: "mp3_44100_64",
      Mp34410096: "mp3_44100_96",
      Mp344100128: "mp3_44100_128",
      Mp344100192: "mp3_44100_192",
      Pcm8000: "pcm_8000",
      Pcm16000: "pcm_16000",
      Pcm22050: "pcm_22050",
      Pcm24000: "pcm_24000",
      Pcm44100: "pcm_44100",
      Ulaw8000: "ulaw_8000",
      Alaw8000: "alaw_8000",
      Opus4800032: "opus_48000_32",
      Opus4800064: "opus_48000_64",
      Opus4800096: "opus_48000_96",
      Opus48000128: "opus_48000_128",
      Opus48000192: "opus_48000_192"
    };
  }
});

// node_modules/elevenlabs/api/resources/v1TextToSpeechVoiceIdMultiStreamInput/types/TextToSpeechApplyTextNormalization.js
var require_TextToSpeechApplyTextNormalization = __commonJS({
  "node_modules/elevenlabs/api/resources/v1TextToSpeechVoiceIdMultiStreamInput/types/TextToSpeechApplyTextNormalization.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TextToSpeechApplyTextNormalization = void 0;
    exports.TextToSpeechApplyTextNormalization = {
      Auto: "auto",
      On: "on",
      Off: "off"
    };
  }
});

// node_modules/elevenlabs/api/resources/v1TextToSpeechVoiceIdMultiStreamInput/types/SendMessageMulti.js
var require_SendMessageMulti = __commonJS({
  "node_modules/elevenlabs/api/resources/v1TextToSpeechVoiceIdMultiStreamInput/types/SendMessageMulti.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/v1TextToSpeechVoiceIdMultiStreamInput/types/ReceiveMessageMulti.js
var require_ReceiveMessageMulti = __commonJS({
  "node_modules/elevenlabs/api/resources/v1TextToSpeechVoiceIdMultiStreamInput/types/ReceiveMessageMulti.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/v1TextToSpeechVoiceIdMultiStreamInput/types/index.js
var require_types16 = __commonJS({
  "node_modules/elevenlabs/api/resources/v1TextToSpeechVoiceIdMultiStreamInput/types/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_TextToSpeechOutputFormat(), exports);
    __exportStar(require_TextToSpeechApplyTextNormalization(), exports);
    __exportStar(require_SendMessageMulti(), exports);
    __exportStar(require_ReceiveMessageMulti(), exports);
  }
});

// node_modules/elevenlabs/api/resources/v1TextToSpeechVoiceIdMultiStreamInput/index.js
var require_v1TextToSpeechVoiceIdMultiStreamInput = __commonJS({
  "node_modules/elevenlabs/api/resources/v1TextToSpeechVoiceIdMultiStreamInput/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_types16(), exports);
  }
});

// node_modules/elevenlabs/api/resources/samples/client/index.js
var require_client30 = __commonJS({
  "node_modules/elevenlabs/api/resources/samples/client/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/samples/index.js
var require_samples2 = __commonJS({
  "node_modules/elevenlabs/api/resources/samples/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client30(), exports);
  }
});

// node_modules/elevenlabs/api/resources/user/client/index.js
var require_client31 = __commonJS({
  "node_modules/elevenlabs/api/resources/user/client/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/user/index.js
var require_user = __commonJS({
  "node_modules/elevenlabs/api/resources/user/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client31(), exports);
  }
});

// node_modules/elevenlabs/api/resources/models/client/index.js
var require_client32 = __commonJS({
  "node_modules/elevenlabs/api/resources/models/client/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/models/index.js
var require_models = __commonJS({
  "node_modules/elevenlabs/api/resources/models/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client32(), exports);
  }
});

// node_modules/elevenlabs/api/resources/audioNative/client/requests/index.js
var require_requests25 = __commonJS({
  "node_modules/elevenlabs/api/resources/audioNative/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/audioNative/client/index.js
var require_client33 = __commonJS({
  "node_modules/elevenlabs/api/resources/audioNative/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests25(), exports);
  }
});

// node_modules/elevenlabs/api/resources/audioNative/index.js
var require_audioNative = __commonJS({
  "node_modules/elevenlabs/api/resources/audioNative/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client33(), exports);
  }
});

// node_modules/elevenlabs/api/resources/usage/client/requests/index.js
var require_requests26 = __commonJS({
  "node_modules/elevenlabs/api/resources/usage/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/usage/client/index.js
var require_client34 = __commonJS({
  "node_modules/elevenlabs/api/resources/usage/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests26(), exports);
  }
});

// node_modules/elevenlabs/api/resources/usage/index.js
var require_usage = __commonJS({
  "node_modules/elevenlabs/api/resources/usage/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client34(), exports);
  }
});

// node_modules/elevenlabs/api/resources/forcedAlignment/client/requests/index.js
var require_requests27 = __commonJS({
  "node_modules/elevenlabs/api/resources/forcedAlignment/client/requests/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/resources/forcedAlignment/client/index.js
var require_client35 = __commonJS({
  "node_modules/elevenlabs/api/resources/forcedAlignment/client/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_requests27(), exports);
  }
});

// node_modules/elevenlabs/api/resources/forcedAlignment/index.js
var require_forcedAlignment = __commonJS({
  "node_modules/elevenlabs/api/resources/forcedAlignment/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_client35(), exports);
  }
});

// node_modules/elevenlabs/api/resources/index.js
var require_resources11 = __commonJS({
  "node_modules/elevenlabs/api/resources/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.forcedAlignment = exports.usage = exports.audioNative = exports.models = exports.user = exports.samples = exports.v1TextToSpeechVoiceIdMultiStreamInput = exports.v1TextToSpeechVoiceIdStreamInput = exports.conversationalAi = exports.speechToText = exports.workspace = exports.pronunciationDictionary = exports.dubbing = exports.studio = exports.voices = exports.textToVoice = exports.speechToSpeech = exports.textToSpeech = exports.audioIsolation = exports.textToSoundEffects = exports.history = void 0;
    exports.history = __importStar(require_history());
    __exportStar(require_types(), exports);
    exports.textToSoundEffects = __importStar(require_textToSoundEffects());
    __exportStar(require_types2(), exports);
    exports.audioIsolation = __importStar(require_audioIsolation());
    __exportStar(require_types3(), exports);
    exports.textToSpeech = __importStar(require_textToSpeech());
    __exportStar(require_types4(), exports);
    exports.speechToSpeech = __importStar(require_speechToSpeech());
    __exportStar(require_types5(), exports);
    exports.textToVoice = __importStar(require_textToVoice());
    __exportStar(require_types6(), exports);
    exports.voices = __importStar(require_voices());
    __exportStar(require_types7(), exports);
    exports.studio = __importStar(require_studio());
    __exportStar(require_types8(), exports);
    exports.dubbing = __importStar(require_dubbing());
    __exportStar(require_types10(), exports);
    exports.pronunciationDictionary = __importStar(require_pronunciationDictionary());
    __exportStar(require_types11(), exports);
    exports.workspace = __importStar(require_workspace());
    __exportStar(require_types12(), exports);
    exports.speechToText = __importStar(require_speechToText());
    __exportStar(require_types13(), exports);
    exports.conversationalAi = __importStar(require_conversationalAi());
    __exportStar(require_types14(), exports);
    exports.v1TextToSpeechVoiceIdStreamInput = __importStar(require_v1TextToSpeechVoiceIdStreamInput());
    __exportStar(require_types15(), exports);
    exports.v1TextToSpeechVoiceIdMultiStreamInput = __importStar(require_v1TextToSpeechVoiceIdMultiStreamInput());
    __exportStar(require_types16(), exports);
    exports.samples = __importStar(require_samples2());
    exports.user = __importStar(require_user());
    exports.models = __importStar(require_models());
    exports.audioNative = __importStar(require_audioNative());
    exports.usage = __importStar(require_usage());
    exports.forcedAlignment = __importStar(require_forcedAlignment());
    __exportStar(require_requests(), exports);
    __exportStar(require_requests2(), exports);
    __exportStar(require_requests3(), exports);
    __exportStar(require_requests4(), exports);
    __exportStar(require_requests5(), exports);
    __exportStar(require_requests6(), exports);
    __exportStar(require_requests7(), exports);
    __exportStar(require_requests14(), exports);
    __exportStar(require_requests15(), exports);
    __exportStar(require_requests25(), exports);
    __exportStar(require_requests26(), exports);
    __exportStar(require_requests18(), exports);
    __exportStar(require_requests19(), exports);
    __exportStar(require_requests20(), exports);
    __exportStar(require_requests27(), exports);
    __exportStar(require_requests21(), exports);
  }
});

// node_modules/elevenlabs/api/types/AsrConversationalConfig.js
var require_AsrConversationalConfig = __commonJS({
  "node_modules/elevenlabs/api/types/AsrConversationalConfig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AsrInputFormat.js
var require_AsrInputFormat = __commonJS({
  "node_modules/elevenlabs/api/types/AsrInputFormat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AsrInputFormat = void 0;
    exports.AsrInputFormat = {
      Pcm8000: "pcm_8000",
      Pcm16000: "pcm_16000",
      Pcm22050: "pcm_22050",
      Pcm24000: "pcm_24000",
      Pcm44100: "pcm_44100",
      Pcm48000: "pcm_48000",
      Ulaw8000: "ulaw_8000"
    };
  }
});

// node_modules/elevenlabs/api/types/AsrProvider.js
var require_AsrProvider = __commonJS({
  "node_modules/elevenlabs/api/types/AsrProvider.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AsrQuality.js
var require_AsrQuality = __commonJS({
  "node_modules/elevenlabs/api/types/AsrQuality.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AddChapterResponseModel.js
var require_AddChapterResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/AddChapterResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AddKnowledgeBaseResponseModel.js
var require_AddKnowledgeBaseResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/AddKnowledgeBaseResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AddProjectResponseModel.js
var require_AddProjectResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/AddProjectResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AddPronunciationDictionaryResponseModelPermissionOnResource.js
var require_AddPronunciationDictionaryResponseModelPermissionOnResource = __commonJS({
  "node_modules/elevenlabs/api/types/AddPronunciationDictionaryResponseModelPermissionOnResource.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AddPronunciationDictionaryResponseModelPermissionOnResource = void 0;
    exports.AddPronunciationDictionaryResponseModelPermissionOnResource = {
      Admin: "admin",
      Editor: "editor",
      Viewer: "viewer"
    };
  }
});

// node_modules/elevenlabs/api/types/AddPronunciationDictionaryResponseModel.js
var require_AddPronunciationDictionaryResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/AddPronunciationDictionaryResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AddVoiceIvcResponseModel.js
var require_AddVoiceIvcResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/AddVoiceIvcResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AddVoiceResponseModel.js
var require_AddVoiceResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/AddVoiceResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AddWorkspaceGroupMemberResponseModel.js
var require_AddWorkspaceGroupMemberResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/AddWorkspaceGroupMemberResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AddWorkspaceInviteResponseModel.js
var require_AddWorkspaceInviteResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/AddWorkspaceInviteResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AdditionalFormatResponseModel.js
var require_AdditionalFormatResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/AdditionalFormatResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AdditionalFormats.js
var require_AdditionalFormats = __commonJS({
  "node_modules/elevenlabs/api/types/AdditionalFormats.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AgentBan.js
var require_AgentBan = __commonJS({
  "node_modules/elevenlabs/api/types/AgentBan.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AgentCallLimits.js
var require_AgentCallLimits = __commonJS({
  "node_modules/elevenlabs/api/types/AgentCallLimits.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AgentConfig.js
var require_AgentConfig = __commonJS({
  "node_modules/elevenlabs/api/types/AgentConfig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AgentConfigDbModel.js
var require_AgentConfigDbModel = __commonJS({
  "node_modules/elevenlabs/api/types/AgentConfigDbModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AgentConfigOverride.js
var require_AgentConfigOverride = __commonJS({
  "node_modules/elevenlabs/api/types/AgentConfigOverride.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AgentConfigOverrideConfig.js
var require_AgentConfigOverrideConfig = __commonJS({
  "node_modules/elevenlabs/api/types/AgentConfigOverrideConfig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AgentMetadataResponseModel.js
var require_AgentMetadataResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/AgentMetadataResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AgentPlatformSettingsRequestModel.js
var require_AgentPlatformSettingsRequestModel = __commonJS({
  "node_modules/elevenlabs/api/types/AgentPlatformSettingsRequestModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AgentPlatformSettingsResponseModel.js
var require_AgentPlatformSettingsResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/AgentPlatformSettingsResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AgentSimulatedChatTestResponseModel.js
var require_AgentSimulatedChatTestResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/AgentSimulatedChatTestResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AgentSummaryResponseModel.js
var require_AgentSummaryResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/AgentSummaryResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AgentTransfer.js
var require_AgentTransfer = __commonJS({
  "node_modules/elevenlabs/api/types/AgentTransfer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AgentWorkspaceOverridesInput.js
var require_AgentWorkspaceOverridesInput = __commonJS({
  "node_modules/elevenlabs/api/types/AgentWorkspaceOverridesInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AgentWorkspaceOverridesOutput.js
var require_AgentWorkspaceOverridesOutput = __commonJS({
  "node_modules/elevenlabs/api/types/AgentWorkspaceOverridesOutput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AllowlistItem.js
var require_AllowlistItem = __commonJS({
  "node_modules/elevenlabs/api/types/AllowlistItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ArrayJsonSchemaPropertyInputItems.js
var require_ArrayJsonSchemaPropertyInputItems = __commonJS({
  "node_modules/elevenlabs/api/types/ArrayJsonSchemaPropertyInputItems.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ArrayJsonSchemaPropertyInput.js
var require_ArrayJsonSchemaPropertyInput = __commonJS({
  "node_modules/elevenlabs/api/types/ArrayJsonSchemaPropertyInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ArrayJsonSchemaPropertyOutputItems.js
var require_ArrayJsonSchemaPropertyOutputItems = __commonJS({
  "node_modules/elevenlabs/api/types/ArrayJsonSchemaPropertyOutputItems.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ArrayJsonSchemaPropertyOutput.js
var require_ArrayJsonSchemaPropertyOutput = __commonJS({
  "node_modules/elevenlabs/api/types/ArrayJsonSchemaPropertyOutput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AudioNativeCreateProjectResponseModel.js
var require_AudioNativeCreateProjectResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/AudioNativeCreateProjectResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AudioNativeEditContentResponseModel.js
var require_AudioNativeEditContentResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/AudioNativeEditContentResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AudioNativeProjectSettingsResponseModelStatus.js
var require_AudioNativeProjectSettingsResponseModelStatus = __commonJS({
  "node_modules/elevenlabs/api/types/AudioNativeProjectSettingsResponseModelStatus.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AudioNativeProjectSettingsResponseModelStatus = void 0;
    exports.AudioNativeProjectSettingsResponseModelStatus = {
      Processing: "processing",
      Ready: "ready"
    };
  }
});

// node_modules/elevenlabs/api/types/AudioNativeProjectSettingsResponseModel.js
var require_AudioNativeProjectSettingsResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/AudioNativeProjectSettingsResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AudioWithTimestampsResponse.js
var require_AudioWithTimestampsResponse = __commonJS({
  "node_modules/elevenlabs/api/types/AudioWithTimestampsResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AuthSettings.js
var require_AuthSettings = __commonJS({
  "node_modules/elevenlabs/api/types/AuthSettings.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AuthorizationMethod.js
var require_AuthorizationMethod = __commonJS({
  "node_modules/elevenlabs/api/types/AuthorizationMethod.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AuthorizationMethod = void 0;
    exports.AuthorizationMethod = {
      Invalid: "invalid",
      Public: "public",
      AuthorizationHeader: "authorization_header",
      SignedUrl: "signed_url",
      ShareableLink: "shareable_link",
      LivekitToken: "livekit_token",
      LivekitTokenWebsite: "livekit_token_website"
    };
  }
});

// node_modules/elevenlabs/api/types/BanReasonType.js
var require_BanReasonType = __commonJS({
  "node_modules/elevenlabs/api/types/BanReasonType.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BanReasonType = void 0;
    exports.BanReasonType = {
      Safety: "safety",
      Manual: "manual"
    };
  }
});

// node_modules/elevenlabs/api/types/BatchCallDetailedResponse.js
var require_BatchCallDetailedResponse = __commonJS({
  "node_modules/elevenlabs/api/types/BatchCallDetailedResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/BatchCallRecipientStatus.js
var require_BatchCallRecipientStatus = __commonJS({
  "node_modules/elevenlabs/api/types/BatchCallRecipientStatus.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BatchCallRecipientStatus = void 0;
    exports.BatchCallRecipientStatus = {
      Pending: "pending",
      InProgress: "in_progress",
      Completed: "completed",
      Failed: "failed",
      Cancelled: "cancelled"
    };
  }
});

// node_modules/elevenlabs/api/types/BatchCallStatus.js
var require_BatchCallStatus = __commonJS({
  "node_modules/elevenlabs/api/types/BatchCallStatus.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BatchCallStatus = void 0;
    exports.BatchCallStatus = {
      Pending: "pending",
      InProgress: "in_progress",
      Completed: "completed",
      Failed: "failed",
      Cancelled: "cancelled"
    };
  }
});

// node_modules/elevenlabs/api/types/BodyAddChapterToAProjectV1ProjectsProjectIdChaptersAddPost.js
var require_BodyAddChapterToAProjectV1ProjectsProjectIdChaptersAddPost = __commonJS({
  "node_modules/elevenlabs/api/types/BodyAddChapterToAProjectV1ProjectsProjectIdChaptersAddPost.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/BodyAddProjectV1ProjectsAddPostTargetAudience.js
var require_BodyAddProjectV1ProjectsAddPostTargetAudience = __commonJS({
  "node_modules/elevenlabs/api/types/BodyAddProjectV1ProjectsAddPostTargetAudience.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BodyAddProjectV1ProjectsAddPostTargetAudience = void 0;
    exports.BodyAddProjectV1ProjectsAddPostTargetAudience = {
      Children: "children",
      YoungAdult: "young adult",
      Adult: "adult",
      AllAges: "all ages"
    };
  }
});

// node_modules/elevenlabs/api/types/BodyAddProjectV1ProjectsAddPostFiction.js
var require_BodyAddProjectV1ProjectsAddPostFiction = __commonJS({
  "node_modules/elevenlabs/api/types/BodyAddProjectV1ProjectsAddPostFiction.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BodyAddProjectV1ProjectsAddPostFiction = void 0;
    exports.BodyAddProjectV1ProjectsAddPostFiction = {
      Fiction: "fiction",
      NonFiction: "non-fiction"
    };
  }
});

// node_modules/elevenlabs/api/types/BodyAddProjectV1ProjectsAddPostApplyTextNormalization.js
var require_BodyAddProjectV1ProjectsAddPostApplyTextNormalization = __commonJS({
  "node_modules/elevenlabs/api/types/BodyAddProjectV1ProjectsAddPostApplyTextNormalization.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BodyAddProjectV1ProjectsAddPostApplyTextNormalization = void 0;
    exports.BodyAddProjectV1ProjectsAddPostApplyTextNormalization = {
      Auto: "auto",
      On: "on",
      Off: "off",
      ApplyEnglish: "apply_english"
    };
  }
});

// node_modules/elevenlabs/api/types/BodyAddProjectV1ProjectsAddPostSourceType.js
var require_BodyAddProjectV1ProjectsAddPostSourceType = __commonJS({
  "node_modules/elevenlabs/api/types/BodyAddProjectV1ProjectsAddPostSourceType.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BodyAddProjectV1ProjectsAddPostSourceType = void 0;
    exports.BodyAddProjectV1ProjectsAddPostSourceType = {
      Blank: "blank",
      Book: "book",
      Article: "article",
      Genfm: "genfm"
    };
  }
});

// node_modules/elevenlabs/api/types/AddProjectRequest.js
var require_AddProjectRequest = __commonJS({
  "node_modules/elevenlabs/api/types/AddProjectRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/BodyAddToKnowledgeBaseV1ConvaiAddToKnowledgeBasePost.js
var require_BodyAddToKnowledgeBaseV1ConvaiAddToKnowledgeBasePost = __commonJS({
  "node_modules/elevenlabs/api/types/BodyAddToKnowledgeBaseV1ConvaiAddToKnowledgeBasePost.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/BodyAddToKnowledgeBaseV1ConvaiAgentsAgentIdAddToKnowledgeBasePost.js
var require_BodyAddToKnowledgeBaseV1ConvaiAgentsAgentIdAddToKnowledgeBasePost = __commonJS({
  "node_modules/elevenlabs/api/types/BodyAddToKnowledgeBaseV1ConvaiAgentsAgentIdAddToKnowledgeBasePost.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/CreatePreviouslyGeneratedVoiceRequest.js
var require_CreatePreviouslyGeneratedVoiceRequest = __commonJS({
  "node_modules/elevenlabs/api/types/CreatePreviouslyGeneratedVoiceRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/BodyCreatePodcastV1ProjectsPodcastCreatePostMode.js
var require_BodyCreatePodcastV1ProjectsPodcastCreatePostMode = __commonJS({
  "node_modules/elevenlabs/api/types/BodyCreatePodcastV1ProjectsPodcastCreatePostMode.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/BodyCreatePodcastV1ProjectsPodcastCreatePostSourceItem.js
var require_BodyCreatePodcastV1ProjectsPodcastCreatePostSourceItem = __commonJS({
  "node_modules/elevenlabs/api/types/BodyCreatePodcastV1ProjectsPodcastCreatePostSourceItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/BodyCreatePodcastV1ProjectsPodcastCreatePostSource.js
var require_BodyCreatePodcastV1ProjectsPodcastCreatePostSource = __commonJS({
  "node_modules/elevenlabs/api/types/BodyCreatePodcastV1ProjectsPodcastCreatePostSource.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/BodyCreatePodcastV1ProjectsPodcastCreatePostQualityPreset.js
var require_BodyCreatePodcastV1ProjectsPodcastCreatePostQualityPreset = __commonJS({
  "node_modules/elevenlabs/api/types/BodyCreatePodcastV1ProjectsPodcastCreatePostQualityPreset.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BodyCreatePodcastV1ProjectsPodcastCreatePostQualityPreset = void 0;
    exports.BodyCreatePodcastV1ProjectsPodcastCreatePostQualityPreset = {
      Standard: "standard",
      High: "high",
      Highest: "highest",
      Ultra: "ultra",
      UltraLossless: "ultra_lossless"
    };
  }
});

// node_modules/elevenlabs/api/types/BodyCreatePodcastV1ProjectsPodcastCreatePostDurationScale.js
var require_BodyCreatePodcastV1ProjectsPodcastCreatePostDurationScale = __commonJS({
  "node_modules/elevenlabs/api/types/BodyCreatePodcastV1ProjectsPodcastCreatePostDurationScale.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BodyCreatePodcastV1ProjectsPodcastCreatePostDurationScale = void 0;
    exports.BodyCreatePodcastV1ProjectsPodcastCreatePostDurationScale = {
      Short: "short",
      Default: "default",
      Long: "long"
    };
  }
});

// node_modules/elevenlabs/api/types/BodyCreatePodcastV1ProjectsPodcastCreatePost.js
var require_BodyCreatePodcastV1ProjectsPodcastCreatePost = __commonJS({
  "node_modules/elevenlabs/api/types/BodyCreatePodcastV1ProjectsPodcastCreatePost.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/BodyEditBasicProjectInfoV1ProjectsProjectIdPost.js
var require_BodyEditBasicProjectInfoV1ProjectsProjectIdPost = __commonJS({
  "node_modules/elevenlabs/api/types/BodyEditBasicProjectInfoV1ProjectsProjectIdPost.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/BodyEditChapterV1ProjectsProjectIdChaptersChapterIdPatch.js
var require_BodyEditChapterV1ProjectsProjectIdChaptersChapterIdPatch = __commonJS({
  "node_modules/elevenlabs/api/types/BodyEditChapterV1ProjectsProjectIdChaptersChapterIdPatch.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/BodyEditProjectContentV1ProjectsProjectIdContentPost.js
var require_BodyEditProjectContentV1ProjectsProjectIdContentPost = __commonJS({
  "node_modules/elevenlabs/api/types/BodyEditProjectContentV1ProjectsProjectIdContentPost.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePostGender.js
var require_BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePostGender = __commonJS({
  "node_modules/elevenlabs/api/types/BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePostGender.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePostGender = void 0;
    exports.BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePostGender = {
      Female: "female",
      Male: "male"
    };
  }
});

// node_modules/elevenlabs/api/types/BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePostAge.js
var require_BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePostAge = __commonJS({
  "node_modules/elevenlabs/api/types/BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePostAge.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePostAge = void 0;
    exports.BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePostAge = {
      Young: "young",
      MiddleAged: "middle_aged",
      Old: "old"
    };
  }
});

// node_modules/elevenlabs/api/types/GenerateVoiceRequest.js
var require_GenerateVoiceRequest = __commonJS({
  "node_modules/elevenlabs/api/types/GenerateVoiceRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/BodyRetrieveVoiceSampleAudioV1VoicesPvcVoiceIdSamplesSampleIdAudioGet.js
var require_BodyRetrieveVoiceSampleAudioV1VoicesPvcVoiceIdSamplesSampleIdAudioGet = __commonJS({
  "node_modules/elevenlabs/api/types/BodyRetrieveVoiceSampleAudioV1VoicesPvcVoiceIdSamplesSampleIdAudioGet.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/BodyStreamChapterAudioV1ProjectsProjectIdChaptersChapterIdSnapshotsChapterSnapshotIdStreamPost.js
var require_BodyStreamChapterAudioV1ProjectsProjectIdChaptersChapterIdSnapshotsChapterSnapshotIdStreamPost = __commonJS({
  "node_modules/elevenlabs/api/types/BodyStreamChapterAudioV1ProjectsProjectIdChaptersChapterIdSnapshotsChapterSnapshotIdStreamPost.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/BodyStreamProjectAudioV1ProjectsProjectIdSnapshotsProjectSnapshotIdStreamPost.js
var require_BodyStreamProjectAudioV1ProjectsProjectIdSnapshotsProjectSnapshotIdStreamPost = __commonJS({
  "node_modules/elevenlabs/api/types/BodyStreamProjectAudioV1ProjectsProjectIdSnapshotsProjectSnapshotIdStreamPost.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/UpdatePronunciationDictionariesRequest.js
var require_UpdatePronunciationDictionariesRequest = __commonJS({
  "node_modules/elevenlabs/api/types/UpdatePronunciationDictionariesRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/BreakdownTypes.js
var require_BreakdownTypes = __commonJS({
  "node_modules/elevenlabs/api/types/BreakdownTypes.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BreakdownTypes = void 0;
    exports.BreakdownTypes = {
      None: "none",
      Voice: "voice",
      VoiceMultiplier: "voice_multiplier",
      User: "user",
      Groups: "groups",
      ApiKeys: "api_keys",
      AllApiKeys: "all_api_keys",
      ProductType: "product_type",
      Model: "model",
      Resource: "resource",
      RequestQueue: "request_queue"
    };
  }
});

// node_modules/elevenlabs/api/types/ChapterContentBlockExtendableNodeResponseModel.js
var require_ChapterContentBlockExtendableNodeResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/ChapterContentBlockExtendableNodeResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ChapterContentBlockInputModel.js
var require_ChapterContentBlockInputModel = __commonJS({
  "node_modules/elevenlabs/api/types/ChapterContentBlockInputModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ChapterContentBlockResponseModelNodesItem.js
var require_ChapterContentBlockResponseModelNodesItem = __commonJS({
  "node_modules/elevenlabs/api/types/ChapterContentBlockResponseModelNodesItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ChapterContentBlockResponseModel.js
var require_ChapterContentBlockResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/ChapterContentBlockResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ChapterContentBlockTtsNodeResponseModel.js
var require_ChapterContentBlockTtsNodeResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/ChapterContentBlockTtsNodeResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ChapterContentInputModel.js
var require_ChapterContentInputModel = __commonJS({
  "node_modules/elevenlabs/api/types/ChapterContentInputModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ChapterContentParagraphTtsNodeInputModel.js
var require_ChapterContentParagraphTtsNodeInputModel = __commonJS({
  "node_modules/elevenlabs/api/types/ChapterContentParagraphTtsNodeInputModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ChapterContentResponseModel.js
var require_ChapterContentResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/ChapterContentResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ChapterState.js
var require_ChapterState = __commonJS({
  "node_modules/elevenlabs/api/types/ChapterState.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ChapterState = void 0;
    exports.ChapterState = {
      Default: "default",
      Converting: "converting"
    };
  }
});

// node_modules/elevenlabs/api/types/ChapterResponse.js
var require_ChapterResponse = __commonJS({
  "node_modules/elevenlabs/api/types/ChapterResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ChapterSnapshotExtendedResponseModel.js
var require_ChapterSnapshotExtendedResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/ChapterSnapshotExtendedResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ChapterSnapshotResponse.js
var require_ChapterSnapshotResponse = __commonJS({
  "node_modules/elevenlabs/api/types/ChapterSnapshotResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ChapterSnapshotsResponse.js
var require_ChapterSnapshotsResponse = __commonJS({
  "node_modules/elevenlabs/api/types/ChapterSnapshotsResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ChapterStatisticsResponse.js
var require_ChapterStatisticsResponse = __commonJS({
  "node_modules/elevenlabs/api/types/ChapterStatisticsResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ChapterWithContentResponseModelState.js
var require_ChapterWithContentResponseModelState = __commonJS({
  "node_modules/elevenlabs/api/types/ChapterWithContentResponseModelState.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ChapterWithContentResponseModelState = void 0;
    exports.ChapterWithContentResponseModelState = {
      Default: "default",
      Converting: "converting"
    };
  }
});

// node_modules/elevenlabs/api/types/ChapterWithContentResponseModel.js
var require_ChapterWithContentResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/ChapterWithContentResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/CharacterAlignmentModel.js
var require_CharacterAlignmentModel = __commonJS({
  "node_modules/elevenlabs/api/types/CharacterAlignmentModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/CharacterAlignmentResponseModel.js
var require_CharacterAlignmentResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/CharacterAlignmentResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ClientEvent.js
var require_ClientEvent = __commonJS({
  "node_modules/elevenlabs/api/types/ClientEvent.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ClientEvent = void 0;
    exports.ClientEvent = {
      ConversationInitiationMetadata: "conversation_initiation_metadata",
      AsrInitiationMetadata: "asr_initiation_metadata",
      Ping: "ping",
      Audio: "audio",
      Interruption: "interruption",
      UserTranscript: "user_transcript",
      AgentResponse: "agent_response",
      AgentResponseCorrection: "agent_response_correction",
      ClientToolCall: "client_tool_call",
      VadScore: "vad_score",
      InternalTurnProbability: "internal_turn_probability",
      InternalTentativeAgentResponse: "internal_tentative_agent_response"
    };
  }
});

// node_modules/elevenlabs/api/types/ClientToolConfigInput.js
var require_ClientToolConfigInput = __commonJS({
  "node_modules/elevenlabs/api/types/ClientToolConfigInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ClientToolConfigOutput.js
var require_ClientToolConfigOutput = __commonJS({
  "node_modules/elevenlabs/api/types/ClientToolConfigOutput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConvAiSecretLocator.js
var require_ConvAiSecretLocator = __commonJS({
  "node_modules/elevenlabs/api/types/ConvAiSecretLocator.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConvAiStoredSecretDependenciesToolsItem.js
var require_ConvAiStoredSecretDependenciesToolsItem = __commonJS({
  "node_modules/elevenlabs/api/types/ConvAiStoredSecretDependenciesToolsItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConvAiStoredSecretDependenciesAgentToolsItem.js
var require_ConvAiStoredSecretDependenciesAgentToolsItem = __commonJS({
  "node_modules/elevenlabs/api/types/ConvAiStoredSecretDependenciesAgentToolsItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConvAiStoredSecretDependencies.js
var require_ConvAiStoredSecretDependencies = __commonJS({
  "node_modules/elevenlabs/api/types/ConvAiStoredSecretDependencies.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConvAiWebhooks.js
var require_ConvAiWebhooks = __commonJS({
  "node_modules/elevenlabs/api/types/ConvAiWebhooks.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConvAiWorkspaceStoredSecretConfig.js
var require_ConvAiWorkspaceStoredSecretConfig = __commonJS({
  "node_modules/elevenlabs/api/types/ConvAiWorkspaceStoredSecretConfig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationChargingCommonModel.js
var require_ConversationChargingCommonModel = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationChargingCommonModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationConfig.js
var require_ConversationConfig = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationConfig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationConfigClientOverrideInput.js
var require_ConversationConfigClientOverrideInput = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationConfigClientOverrideInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationConfigClientOverrideOutput.js
var require_ConversationConfigClientOverrideOutput = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationConfigClientOverrideOutput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationConfigClientOverrideConfigInput.js
var require_ConversationConfigClientOverrideConfigInput = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationConfigClientOverrideConfigInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationConfigClientOverrideConfigOutput.js
var require_ConversationConfigClientOverrideConfigOutput = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationConfigClientOverrideConfigOutput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationDeletionSettings.js
var require_ConversationDeletionSettings = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationDeletionSettings.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationHistoryAnalysisCommonModel.js
var require_ConversationHistoryAnalysisCommonModel = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistoryAnalysisCommonModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationHistoryBatchCallModel.js
var require_ConversationHistoryBatchCallModel = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistoryBatchCallModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationHistoryErrorCommonModel.js
var require_ConversationHistoryErrorCommonModel = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistoryErrorCommonModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationHistoryEvaluationCriteriaResultCommonModel.js
var require_ConversationHistoryEvaluationCriteriaResultCommonModel = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistoryEvaluationCriteriaResultCommonModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationHistoryFeedbackCommonModel.js
var require_ConversationHistoryFeedbackCommonModel = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistoryFeedbackCommonModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationHistoryMetadataCommonModelPhoneCall.js
var require_ConversationHistoryMetadataCommonModelPhoneCall = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistoryMetadataCommonModelPhoneCall.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationHistoryMetadataCommonModel.js
var require_ConversationHistoryMetadataCommonModel = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistoryMetadataCommonModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationHistoryRagUsageCommonModel.js
var require_ConversationHistoryRagUsageCommonModel = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistoryRagUsageCommonModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationHistorySipTrunkingPhoneCallModelDirection.js
var require_ConversationHistorySipTrunkingPhoneCallModelDirection = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistorySipTrunkingPhoneCallModelDirection.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ConversationHistorySipTrunkingPhoneCallModelDirection = void 0;
    exports.ConversationHistorySipTrunkingPhoneCallModelDirection = {
      Inbound: "inbound",
      Outbound: "outbound"
    };
  }
});

// node_modules/elevenlabs/api/types/ConversationHistorySipTrunkingPhoneCallModel.js
var require_ConversationHistorySipTrunkingPhoneCallModel = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistorySipTrunkingPhoneCallModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationHistoryTranscriptCommonModelInputRole.js
var require_ConversationHistoryTranscriptCommonModelInputRole = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistoryTranscriptCommonModelInputRole.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ConversationHistoryTranscriptCommonModelInputRole = void 0;
    exports.ConversationHistoryTranscriptCommonModelInputRole = {
      User: "user",
      Agent: "agent"
    };
  }
});

// node_modules/elevenlabs/api/types/ConversationHistoryTranscriptCommonModelInput.js
var require_ConversationHistoryTranscriptCommonModelInput = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistoryTranscriptCommonModelInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationHistoryTranscriptCommonModelOutputRole.js
var require_ConversationHistoryTranscriptCommonModelOutputRole = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistoryTranscriptCommonModelOutputRole.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ConversationHistoryTranscriptCommonModelOutputRole = void 0;
    exports.ConversationHistoryTranscriptCommonModelOutputRole = {
      User: "user",
      Agent: "agent"
    };
  }
});

// node_modules/elevenlabs/api/types/ConversationHistoryTranscriptCommonModelOutput.js
var require_ConversationHistoryTranscriptCommonModelOutput = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistoryTranscriptCommonModelOutput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationHistoryTranscriptToolCallClientDetails.js
var require_ConversationHistoryTranscriptToolCallClientDetails = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistoryTranscriptToolCallClientDetails.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationHistoryTranscriptToolCallCommonModelToolDetails.js
var require_ConversationHistoryTranscriptToolCallCommonModelToolDetails = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistoryTranscriptToolCallCommonModelToolDetails.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationHistoryTranscriptToolCallCommonModel.js
var require_ConversationHistoryTranscriptToolCallCommonModel = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistoryTranscriptToolCallCommonModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationHistoryTranscriptToolCallWebhookDetails.js
var require_ConversationHistoryTranscriptToolCallWebhookDetails = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistoryTranscriptToolCallWebhookDetails.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationHistoryTranscriptToolResultCommonModel.js
var require_ConversationHistoryTranscriptToolResultCommonModel = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistoryTranscriptToolResultCommonModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationHistoryTwilioPhoneCallModelDirection.js
var require_ConversationHistoryTwilioPhoneCallModelDirection = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistoryTwilioPhoneCallModelDirection.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ConversationHistoryTwilioPhoneCallModelDirection = void 0;
    exports.ConversationHistoryTwilioPhoneCallModelDirection = {
      Inbound: "inbound",
      Outbound: "outbound"
    };
  }
});

// node_modules/elevenlabs/api/types/ConversationHistoryTwilioPhoneCallModel.js
var require_ConversationHistoryTwilioPhoneCallModel = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationHistoryTwilioPhoneCallModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationInitiationClientDataConfigInput.js
var require_ConversationInitiationClientDataConfigInput = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationInitiationClientDataConfigInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationInitiationClientDataConfigOutput.js
var require_ConversationInitiationClientDataConfigOutput = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationInitiationClientDataConfigOutput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationInitiationClientDataInternalDynamicVariablesValue.js
var require_ConversationInitiationClientDataInternalDynamicVariablesValue = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationInitiationClientDataInternalDynamicVariablesValue.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationInitiationClientDataInternal.js
var require_ConversationInitiationClientDataInternal = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationInitiationClientDataInternal.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationInitiationClientDataRequestInputDynamicVariablesValue.js
var require_ConversationInitiationClientDataRequestInputDynamicVariablesValue = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationInitiationClientDataRequestInputDynamicVariablesValue.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationInitiationClientDataRequestInput.js
var require_ConversationInitiationClientDataRequestInput = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationInitiationClientDataRequestInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationInitiationClientDataRequestOutputDynamicVariablesValue.js
var require_ConversationInitiationClientDataRequestOutputDynamicVariablesValue = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationInitiationClientDataRequestOutputDynamicVariablesValue.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationInitiationClientDataRequestOutput.js
var require_ConversationInitiationClientDataRequestOutput = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationInitiationClientDataRequestOutput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationInitiationClientDataWebhookRequestHeadersValue.js
var require_ConversationInitiationClientDataWebhookRequestHeadersValue = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationInitiationClientDataWebhookRequestHeadersValue.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationInitiationClientDataWebhook.js
var require_ConversationInitiationClientDataWebhook = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationInitiationClientDataWebhook.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationSignedUrlResponseModel.js
var require_ConversationSignedUrlResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationSignedUrlResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationSimulationSpecification.js
var require_ConversationSimulationSpecification = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationSimulationSpecification.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationSummaryResponseModelStatus.js
var require_ConversationSummaryResponseModelStatus = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationSummaryResponseModelStatus.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ConversationSummaryResponseModelStatus = void 0;
    exports.ConversationSummaryResponseModelStatus = {
      InProgress: "in-progress",
      Processing: "processing",
      Done: "done",
      Failed: "failed"
    };
  }
});

// node_modules/elevenlabs/api/types/ConversationSummaryResponseModel.js
var require_ConversationSummaryResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationSummaryResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationTokenDbModel.js
var require_ConversationTokenDbModel = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationTokenDbModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationTokenPurpose.js
var require_ConversationTokenPurpose = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationTokenPurpose.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ConversationTokenPurpose = void 0;
    exports.ConversationTokenPurpose = {
      SignedUrl: "signed_url",
      ShareableLink: "shareable_link"
    };
  }
});

// node_modules/elevenlabs/api/types/ConversationTurnMetrics.js
var require_ConversationTurnMetrics = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationTurnMetrics.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConversationalConfig.js
var require_ConversationalConfig = __commonJS({
  "node_modules/elevenlabs/api/types/ConversationalConfig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConvertChapterResponseModel.js
var require_ConvertChapterResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/ConvertChapterResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ConvertProjectResponseModel.js
var require_ConvertProjectResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/ConvertProjectResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/CreateAgentResponseModel.js
var require_CreateAgentResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/CreateAgentResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/CreatePhoneNumberResponseModel.js
var require_CreatePhoneNumberResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/CreatePhoneNumberResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/CreatePronunciationDictionaryResponseModel.js
var require_CreatePronunciationDictionaryResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/CreatePronunciationDictionaryResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/CreateSipTrunkPhoneNumberRequest.js
var require_CreateSipTrunkPhoneNumberRequest = __commonJS({
  "node_modules/elevenlabs/api/types/CreateSipTrunkPhoneNumberRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/CreateTwilioPhoneNumberRequest.js
var require_CreateTwilioPhoneNumberRequest = __commonJS({
  "node_modules/elevenlabs/api/types/CreateTwilioPhoneNumberRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/CustomLlm.js
var require_CustomLlm = __commonJS({
  "node_modules/elevenlabs/api/types/CustomLlm.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DashboardCallSuccessChartModel.js
var require_DashboardCallSuccessChartModel = __commonJS({
  "node_modules/elevenlabs/api/types/DashboardCallSuccessChartModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DashboardCriteriaChartModel.js
var require_DashboardCriteriaChartModel = __commonJS({
  "node_modules/elevenlabs/api/types/DashboardCriteriaChartModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DashboardDataCollectionChartModel.js
var require_DashboardDataCollectionChartModel = __commonJS({
  "node_modules/elevenlabs/api/types/DashboardDataCollectionChartModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DataCollectionResultCommonModel.js
var require_DataCollectionResultCommonModel = __commonJS({
  "node_modules/elevenlabs/api/types/DataCollectionResultCommonModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DeleteChapterResponseModel.js
var require_DeleteChapterResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/DeleteChapterResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DeleteDubbingResponseModel.js
var require_DeleteDubbingResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/DeleteDubbingResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DeleteHistoryItemResponse.js
var require_DeleteHistoryItemResponse = __commonJS({
  "node_modules/elevenlabs/api/types/DeleteHistoryItemResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DeleteProjectResponseModel.js
var require_DeleteProjectResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/DeleteProjectResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DeleteSampleResponse.js
var require_DeleteSampleResponse = __commonJS({
  "node_modules/elevenlabs/api/types/DeleteSampleResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DeleteVoiceResponseModel.js
var require_DeleteVoiceResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/DeleteVoiceResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DeleteVoiceSampleResponseModel.js
var require_DeleteVoiceSampleResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/DeleteVoiceSampleResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DeleteWorkspaceGroupMemberResponseModel.js
var require_DeleteWorkspaceGroupMemberResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/DeleteWorkspaceGroupMemberResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DeleteWorkspaceInviteResponseModel.js
var require_DeleteWorkspaceInviteResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/DeleteWorkspaceInviteResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DeleteWorkspaceMemberResponseModel.js
var require_DeleteWorkspaceMemberResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/DeleteWorkspaceMemberResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DependentAvailableAgentIdentifierAccessLevel.js
var require_DependentAvailableAgentIdentifierAccessLevel = __commonJS({
  "node_modules/elevenlabs/api/types/DependentAvailableAgentIdentifierAccessLevel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DependentAvailableAgentIdentifierAccessLevel = void 0;
    exports.DependentAvailableAgentIdentifierAccessLevel = {
      Admin: "admin",
      Editor: "editor",
      Viewer: "viewer"
    };
  }
});

// node_modules/elevenlabs/api/types/DependentAvailableAgentIdentifier.js
var require_DependentAvailableAgentIdentifier = __commonJS({
  "node_modules/elevenlabs/api/types/DependentAvailableAgentIdentifier.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DependentAvailableAgentToolIdentifierAccessLevel.js
var require_DependentAvailableAgentToolIdentifierAccessLevel = __commonJS({
  "node_modules/elevenlabs/api/types/DependentAvailableAgentToolIdentifierAccessLevel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DependentAvailableAgentToolIdentifierAccessLevel = void 0;
    exports.DependentAvailableAgentToolIdentifierAccessLevel = {
      Admin: "admin",
      Editor: "editor",
      Viewer: "viewer"
    };
  }
});

// node_modules/elevenlabs/api/types/DependentAvailableAgentToolIdentifier.js
var require_DependentAvailableAgentToolIdentifier = __commonJS({
  "node_modules/elevenlabs/api/types/DependentAvailableAgentToolIdentifier.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DependentAvailableToolIdentifierAccessLevel.js
var require_DependentAvailableToolIdentifierAccessLevel = __commonJS({
  "node_modules/elevenlabs/api/types/DependentAvailableToolIdentifierAccessLevel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DependentAvailableToolIdentifierAccessLevel = void 0;
    exports.DependentAvailableToolIdentifierAccessLevel = {
      Admin: "admin",
      Editor: "editor",
      Viewer: "viewer"
    };
  }
});

// node_modules/elevenlabs/api/types/DependentAvailableToolIdentifier.js
var require_DependentAvailableToolIdentifier = __commonJS({
  "node_modules/elevenlabs/api/types/DependentAvailableToolIdentifier.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DependentPhoneNumberIdentifier.js
var require_DependentPhoneNumberIdentifier = __commonJS({
  "node_modules/elevenlabs/api/types/DependentPhoneNumberIdentifier.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DependentUnknownAgentIdentifier.js
var require_DependentUnknownAgentIdentifier = __commonJS({
  "node_modules/elevenlabs/api/types/DependentUnknownAgentIdentifier.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DependentUnknownAgentToolIdentifier.js
var require_DependentUnknownAgentToolIdentifier = __commonJS({
  "node_modules/elevenlabs/api/types/DependentUnknownAgentToolIdentifier.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DependentUnknownToolIdentifier.js
var require_DependentUnknownToolIdentifier = __commonJS({
  "node_modules/elevenlabs/api/types/DependentUnknownToolIdentifier.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DoDubbingResponse.js
var require_DoDubbingResponse = __commonJS({
  "node_modules/elevenlabs/api/types/DoDubbingResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DocumentUsageModeEnum.js
var require_DocumentUsageModeEnum = __commonJS({
  "node_modules/elevenlabs/api/types/DocumentUsageModeEnum.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DocumentUsageModeEnum = void 0;
    exports.DocumentUsageModeEnum = {
      Prompt: "prompt",
      Auto: "auto"
    };
  }
});

// node_modules/elevenlabs/api/types/DocxExportOptions.js
var require_DocxExportOptions = __commonJS({
  "node_modules/elevenlabs/api/types/DocxExportOptions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DubbedSegment.js
var require_DubbedSegment = __commonJS({
  "node_modules/elevenlabs/api/types/DubbedSegment.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DubbingMediaMetadata.js
var require_DubbingMediaMetadata = __commonJS({
  "node_modules/elevenlabs/api/types/DubbingMediaMetadata.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DubbingMediaReference.js
var require_DubbingMediaReference = __commonJS({
  "node_modules/elevenlabs/api/types/DubbingMediaReference.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DubbingMetadataResponse.js
var require_DubbingMetadataResponse = __commonJS({
  "node_modules/elevenlabs/api/types/DubbingMetadataResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DubbingRenderResponseModel.js
var require_DubbingRenderResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/DubbingRenderResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DubbingResource.js
var require_DubbingResource = __commonJS({
  "node_modules/elevenlabs/api/types/DubbingResource.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DynamicVariablesConfigDynamicVariablePlaceholdersValue.js
var require_DynamicVariablesConfigDynamicVariablePlaceholdersValue = __commonJS({
  "node_modules/elevenlabs/api/types/DynamicVariablesConfigDynamicVariablePlaceholdersValue.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DynamicVariablesConfig.js
var require_DynamicVariablesConfig = __commonJS({
  "node_modules/elevenlabs/api/types/DynamicVariablesConfig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/EditChapterResponseModel.js
var require_EditChapterResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/EditChapterResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/EditProjectResponseModel.js
var require_EditProjectResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/EditProjectResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/EditVoiceResponseModel.js
var require_EditVoiceResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/EditVoiceResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/EditVoiceSettingsResponseModel.js
var require_EditVoiceSettingsResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/EditVoiceSettingsResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/EmbedVariant.js
var require_EmbedVariant = __commonJS({
  "node_modules/elevenlabs/api/types/EmbedVariant.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EmbedVariant = void 0;
    exports.EmbedVariant = {
      Compact: "compact",
      Full: "full",
      Expandable: "expandable"
    };
  }
});

// node_modules/elevenlabs/api/types/EmbeddingModelEnum.js
var require_EmbeddingModelEnum = __commonJS({
  "node_modules/elevenlabs/api/types/EmbeddingModelEnum.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EmbeddingModelEnum = void 0;
    exports.EmbeddingModelEnum = {
      E5Mistral7BInstruct: "e5_mistral_7b_instruct",
      MultilingualE5LargeInstruct: "multilingual_e5_large_instruct"
    };
  }
});

// node_modules/elevenlabs/api/types/EndCallToolConfig.js
var require_EndCallToolConfig = __commonJS({
  "node_modules/elevenlabs/api/types/EndCallToolConfig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/EvaluationSettings.js
var require_EvaluationSettings = __commonJS({
  "node_modules/elevenlabs/api/types/EvaluationSettings.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/EvaluationSuccessResult.js
var require_EvaluationSuccessResult = __commonJS({
  "node_modules/elevenlabs/api/types/EvaluationSuccessResult.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EvaluationSuccessResult = void 0;
    exports.EvaluationSuccessResult = {
      Success: "success",
      Failure: "failure",
      Unknown: "unknown"
    };
  }
});

// node_modules/elevenlabs/api/types/ExportOptions.js
var require_ExportOptions = __commonJS({
  "node_modules/elevenlabs/api/types/ExportOptions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ExtendedSubscriptionResponseModelCurrency.js
var require_ExtendedSubscriptionResponseModelCurrency = __commonJS({
  "node_modules/elevenlabs/api/types/ExtendedSubscriptionResponseModelCurrency.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ExtendedSubscriptionResponseModelCurrency = void 0;
    exports.ExtendedSubscriptionResponseModelCurrency = {
      Usd: "usd",
      Eur: "eur"
    };
  }
});

// node_modules/elevenlabs/api/types/ExtendedSubscriptionResponseModelStatus.js
var require_ExtendedSubscriptionResponseModelStatus = __commonJS({
  "node_modules/elevenlabs/api/types/ExtendedSubscriptionResponseModelStatus.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ExtendedSubscriptionResponseModelStatus = void 0;
    exports.ExtendedSubscriptionResponseModelStatus = {
      Trialing: "trialing",
      Active: "active",
      Incomplete: "incomplete",
      IncompleteExpired: "incomplete_expired",
      PastDue: "past_due",
      Canceled: "canceled",
      Unpaid: "unpaid",
      Free: "free"
    };
  }
});

// node_modules/elevenlabs/api/types/ExtendedSubscriptionResponseModelBillingPeriod.js
var require_ExtendedSubscriptionResponseModelBillingPeriod = __commonJS({
  "node_modules/elevenlabs/api/types/ExtendedSubscriptionResponseModelBillingPeriod.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ExtendedSubscriptionResponseModelBillingPeriod = void 0;
    exports.ExtendedSubscriptionResponseModelBillingPeriod = {
      MonthlyPeriod: "monthly_period",
      AnnualPeriod: "annual_period"
    };
  }
});

// node_modules/elevenlabs/api/types/ExtendedSubscriptionResponseModelCharacterRefreshPeriod.js
var require_ExtendedSubscriptionResponseModelCharacterRefreshPeriod = __commonJS({
  "node_modules/elevenlabs/api/types/ExtendedSubscriptionResponseModelCharacterRefreshPeriod.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ExtendedSubscriptionResponseModelCharacterRefreshPeriod = void 0;
    exports.ExtendedSubscriptionResponseModelCharacterRefreshPeriod = {
      MonthlyPeriod: "monthly_period",
      AnnualPeriod: "annual_period"
    };
  }
});

// node_modules/elevenlabs/api/types/Subscription.js
var require_Subscription = __commonJS({
  "node_modules/elevenlabs/api/types/Subscription.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/FeedbackItem.js
var require_FeedbackItem = __commonJS({
  "node_modules/elevenlabs/api/types/FeedbackItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/FineTuningResponseModelStateValue.js
var require_FineTuningResponseModelStateValue = __commonJS({
  "node_modules/elevenlabs/api/types/FineTuningResponseModelStateValue.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FineTuningResponseModelStateValue = void 0;
    exports.FineTuningResponseModelStateValue = {
      NotStarted: "not_started",
      Queued: "queued",
      FineTuning: "fine_tuning",
      FineTuned: "fine_tuned",
      Failed: "failed",
      Delayed: "delayed"
    };
  }
});

// node_modules/elevenlabs/api/types/FineTuningResponse.js
var require_FineTuningResponse = __commonJS({
  "node_modules/elevenlabs/api/types/FineTuningResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ForcedAlignmentCharacterResponseModel.js
var require_ForcedAlignmentCharacterResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/ForcedAlignmentCharacterResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ForcedAlignmentResponseModel.js
var require_ForcedAlignmentResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/ForcedAlignmentResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ForcedAlignmentWordResponseModel.js
var require_ForcedAlignmentWordResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/ForcedAlignmentWordResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetAgentEmbedResponseModel.js
var require_GetAgentEmbedResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetAgentEmbedResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetAgentLinkResponseModel.js
var require_GetAgentLinkResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetAgentLinkResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetAgentResponseModelPhoneNumbersItem.js
var require_GetAgentResponseModelPhoneNumbersItem = __commonJS({
  "node_modules/elevenlabs/api/types/GetAgentResponseModelPhoneNumbersItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetAgentResponseModel.js
var require_GetAgentResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetAgentResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetAgentsPageResponseModel.js
var require_GetAgentsPageResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetAgentsPageResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetAudioNativeProjectSettingsResponseModel.js
var require_GetAudioNativeProjectSettingsResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetAudioNativeProjectSettingsResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetChaptersResponse.js
var require_GetChaptersResponse = __commonJS({
  "node_modules/elevenlabs/api/types/GetChaptersResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetConvAiDashboardSettingsResponseModelChartsItem.js
var require_GetConvAiDashboardSettingsResponseModelChartsItem = __commonJS({
  "node_modules/elevenlabs/api/types/GetConvAiDashboardSettingsResponseModelChartsItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetConvAiDashboardSettingsResponseModel.js
var require_GetConvAiDashboardSettingsResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetConvAiDashboardSettingsResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetConvAiSettingsResponseModel.js
var require_GetConvAiSettingsResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetConvAiSettingsResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetConversationResponseModelStatus.js
var require_GetConversationResponseModelStatus = __commonJS({
  "node_modules/elevenlabs/api/types/GetConversationResponseModelStatus.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GetConversationResponseModelStatus = void 0;
    exports.GetConversationResponseModelStatus = {
      InProgress: "in-progress",
      Processing: "processing",
      Done: "done",
      Failed: "failed"
    };
  }
});

// node_modules/elevenlabs/api/types/GetConversationResponseModel.js
var require_GetConversationResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetConversationResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetConversationsPageResponseModel.js
var require_GetConversationsPageResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetConversationsPageResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetKnowledgeBaseDependentAgentsResponseModelAgentsItem.js
var require_GetKnowledgeBaseDependentAgentsResponseModelAgentsItem = __commonJS({
  "node_modules/elevenlabs/api/types/GetKnowledgeBaseDependentAgentsResponseModelAgentsItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetKnowledgeBaseDependentAgentsResponseModel.js
var require_GetKnowledgeBaseDependentAgentsResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetKnowledgeBaseDependentAgentsResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetKnowledgeBaseFileResponseModel.js
var require_GetKnowledgeBaseFileResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetKnowledgeBaseFileResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetKnowledgeBaseListResponseModelDocumentsItem.js
var require_GetKnowledgeBaseListResponseModelDocumentsItem = __commonJS({
  "node_modules/elevenlabs/api/types/GetKnowledgeBaseListResponseModelDocumentsItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetKnowledgeBaseListResponseModel.js
var require_GetKnowledgeBaseListResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetKnowledgeBaseListResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetKnowledgeBaseSummaryFileResponseModelDependentAgentsItem.js
var require_GetKnowledgeBaseSummaryFileResponseModelDependentAgentsItem = __commonJS({
  "node_modules/elevenlabs/api/types/GetKnowledgeBaseSummaryFileResponseModelDependentAgentsItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetKnowledgeBaseSummaryFileResponseModel.js
var require_GetKnowledgeBaseSummaryFileResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetKnowledgeBaseSummaryFileResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetKnowledgeBaseSummaryTextResponseModelDependentAgentsItem.js
var require_GetKnowledgeBaseSummaryTextResponseModelDependentAgentsItem = __commonJS({
  "node_modules/elevenlabs/api/types/GetKnowledgeBaseSummaryTextResponseModelDependentAgentsItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetKnowledgeBaseSummaryTextResponseModel.js
var require_GetKnowledgeBaseSummaryTextResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetKnowledgeBaseSummaryTextResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetKnowledgeBaseSummaryUrlResponseModelDependentAgentsItem.js
var require_GetKnowledgeBaseSummaryUrlResponseModelDependentAgentsItem = __commonJS({
  "node_modules/elevenlabs/api/types/GetKnowledgeBaseSummaryUrlResponseModelDependentAgentsItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetKnowledgeBaseSummaryUrlResponseModel.js
var require_GetKnowledgeBaseSummaryUrlResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetKnowledgeBaseSummaryUrlResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetKnowledgeBaseTextResponseModel.js
var require_GetKnowledgeBaseTextResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetKnowledgeBaseTextResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetKnowledgeBaseUrlResponseModel.js
var require_GetKnowledgeBaseUrlResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetKnowledgeBaseUrlResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetLibraryVoicesResponse.js
var require_GetLibraryVoicesResponse = __commonJS({
  "node_modules/elevenlabs/api/types/GetLibraryVoicesResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetPhoneNumberSipTrunkResponseModel.js
var require_GetPhoneNumberSipTrunkResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetPhoneNumberSipTrunkResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetPhoneNumberTwilioResponseModel.js
var require_GetPhoneNumberTwilioResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetPhoneNumberTwilioResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetProjectsResponse.js
var require_GetProjectsResponse = __commonJS({
  "node_modules/elevenlabs/api/types/GetProjectsResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetPronunciationDictionariesMetadataResponseModel.js
var require_GetPronunciationDictionariesMetadataResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetPronunciationDictionariesMetadataResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetPronunciationDictionaryMetadataResponseModelPermissionOnResource.js
var require_GetPronunciationDictionaryMetadataResponseModelPermissionOnResource = __commonJS({
  "node_modules/elevenlabs/api/types/GetPronunciationDictionaryMetadataResponseModelPermissionOnResource.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GetPronunciationDictionaryMetadataResponseModelPermissionOnResource = void 0;
    exports.GetPronunciationDictionaryMetadataResponseModelPermissionOnResource = {
      Admin: "admin",
      Editor: "editor",
      Viewer: "viewer"
    };
  }
});

// node_modules/elevenlabs/api/types/GetPronunciationDictionaryMetadataResponse.js
var require_GetPronunciationDictionaryMetadataResponse = __commonJS({
  "node_modules/elevenlabs/api/types/GetPronunciationDictionaryMetadataResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetSpeechHistoryResponse.js
var require_GetSpeechHistoryResponse = __commonJS({
  "node_modules/elevenlabs/api/types/GetSpeechHistoryResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetVoicesResponse.js
var require_GetVoicesResponse = __commonJS({
  "node_modules/elevenlabs/api/types/GetVoicesResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetVoicesV2Response.js
var require_GetVoicesV2Response = __commonJS({
  "node_modules/elevenlabs/api/types/GetVoicesV2Response.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetWorkspaceSecretsResponseModel.js
var require_GetWorkspaceSecretsResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/GetWorkspaceSecretsResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/HttpValidationError.js
var require_HttpValidationError = __commonJS({
  "node_modules/elevenlabs/api/types/HttpValidationError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/HistoryAlignmentResponseModel.js
var require_HistoryAlignmentResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/HistoryAlignmentResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/HistoryAlignmentsResponseModel.js
var require_HistoryAlignmentsResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/HistoryAlignmentsResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/HtmlExportOptions.js
var require_HtmlExportOptions = __commonJS({
  "node_modules/elevenlabs/api/types/HtmlExportOptions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ImageAvatar.js
var require_ImageAvatar = __commonJS({
  "node_modules/elevenlabs/api/types/ImageAvatar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/InvoiceResponse.js
var require_InvoiceResponse = __commonJS({
  "node_modules/elevenlabs/api/types/InvoiceResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/KnowledgeBaseDocumentChunkResponseModel.js
var require_KnowledgeBaseDocumentChunkResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/KnowledgeBaseDocumentChunkResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/KnowledgeBaseDocumentMetadataResponseModel.js
var require_KnowledgeBaseDocumentMetadataResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/KnowledgeBaseDocumentMetadataResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/KnowledgeBaseDocumentType.js
var require_KnowledgeBaseDocumentType = __commonJS({
  "node_modules/elevenlabs/api/types/KnowledgeBaseDocumentType.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.KnowledgeBaseDocumentType = void 0;
    exports.KnowledgeBaseDocumentType = {
      File: "file",
      Url: "url",
      Text: "text"
    };
  }
});

// node_modules/elevenlabs/api/types/KnowledgeBaseLocator.js
var require_KnowledgeBaseLocator = __commonJS({
  "node_modules/elevenlabs/api/types/KnowledgeBaseLocator.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/Llm.js
var require_Llm = __commonJS({
  "node_modules/elevenlabs/api/types/Llm.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Llm = void 0;
    exports.Llm = {
      Gpt4OMini: "gpt-4o-mini",
      Gpt4O: "gpt-4o",
      Gpt4: "gpt-4",
      Gpt4Turbo: "gpt-4-turbo",
      Gpt41: "gpt-4.1",
      Gpt41Mini: "gpt-4.1-mini",
      Gpt41Nano: "gpt-4.1-nano",
      Gpt35Turbo: "gpt-3.5-turbo",
      Gemini15Pro: "gemini-1.5-pro",
      Gemini15Flash: "gemini-1.5-flash",
      Gemini20Flash001: "gemini-2.0-flash-001",
      Gemini20FlashLite: "gemini-2.0-flash-lite",
      Gemini25Flash: "gemini-2.5-flash",
      Gemini10Pro: "gemini-1.0-pro",
      Claude37Sonnet: "claude-3-7-sonnet",
      Claude35Sonnet: "claude-3-5-sonnet",
      Claude35SonnetV1: "claude-3-5-sonnet-v1",
      Claude3Haiku: "claude-3-haiku",
      GrokBeta: "grok-beta",
      CustomLlm: "custom-llm"
    };
  }
});

// node_modules/elevenlabs/api/types/LlmCategoryUsage.js
var require_LlmCategoryUsage = __commonJS({
  "node_modules/elevenlabs/api/types/LlmCategoryUsage.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/LlmInputOutputTokensUsage.js
var require_LlmInputOutputTokensUsage = __commonJS({
  "node_modules/elevenlabs/api/types/LlmInputOutputTokensUsage.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/LlmTokensCategoryUsage.js
var require_LlmTokensCategoryUsage = __commonJS({
  "node_modules/elevenlabs/api/types/LlmTokensCategoryUsage.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/LlmUsageInput.js
var require_LlmUsageInput = __commonJS({
  "node_modules/elevenlabs/api/types/LlmUsageInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/LlmUsageOutput.js
var require_LlmUsageOutput = __commonJS({
  "node_modules/elevenlabs/api/types/LlmUsageOutput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/LanguageAddedResponse.js
var require_LanguageAddedResponse = __commonJS({
  "node_modules/elevenlabs/api/types/LanguageAddedResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/LanguageDetectionToolConfig.js
var require_LanguageDetectionToolConfig = __commonJS({
  "node_modules/elevenlabs/api/types/LanguageDetectionToolConfig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/LanguagePresetInput.js
var require_LanguagePresetInput = __commonJS({
  "node_modules/elevenlabs/api/types/LanguagePresetInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/LanguagePresetOutput.js
var require_LanguagePresetOutput = __commonJS({
  "node_modules/elevenlabs/api/types/LanguagePresetOutput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/LanguagePresetTranslation.js
var require_LanguagePresetTranslation = __commonJS({
  "node_modules/elevenlabs/api/types/LanguagePresetTranslation.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/LanguageResponse.js
var require_LanguageResponse = __commonJS({
  "node_modules/elevenlabs/api/types/LanguageResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/LibraryVoiceResponseModelCategory.js
var require_LibraryVoiceResponseModelCategory = __commonJS({
  "node_modules/elevenlabs/api/types/LibraryVoiceResponseModelCategory.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.LibraryVoiceResponseModelCategory = void 0;
    exports.LibraryVoiceResponseModelCategory = {
      Generated: "generated",
      Cloned: "cloned",
      Premade: "premade",
      Professional: "professional",
      Famous: "famous",
      HighQuality: "high_quality"
    };
  }
});

// node_modules/elevenlabs/api/types/LibraryVoiceResponse.js
var require_LibraryVoiceResponse = __commonJS({
  "node_modules/elevenlabs/api/types/LibraryVoiceResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/LiteralJsonSchemaPropertyType.js
var require_LiteralJsonSchemaPropertyType = __commonJS({
  "node_modules/elevenlabs/api/types/LiteralJsonSchemaPropertyType.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.LiteralJsonSchemaPropertyType = void 0;
    exports.LiteralJsonSchemaPropertyType = {
      Boolean: "boolean",
      String: "string",
      Integer: "integer",
      Number: "number"
    };
  }
});

// node_modules/elevenlabs/api/types/LiteralJsonSchemaPropertyConstantValue.js
var require_LiteralJsonSchemaPropertyConstantValue = __commonJS({
  "node_modules/elevenlabs/api/types/LiteralJsonSchemaPropertyConstantValue.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/LiteralJsonSchemaProperty.js
var require_LiteralJsonSchemaProperty = __commonJS({
  "node_modules/elevenlabs/api/types/LiteralJsonSchemaProperty.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/McpToolConfigInput.js
var require_McpToolConfigInput = __commonJS({
  "node_modules/elevenlabs/api/types/McpToolConfigInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/McpToolConfigOutput.js
var require_McpToolConfigOutput = __commonJS({
  "node_modules/elevenlabs/api/types/McpToolConfigOutput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ManualVerificationFileResponse.js
var require_ManualVerificationFileResponse = __commonJS({
  "node_modules/elevenlabs/api/types/ManualVerificationFileResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ManualVerificationResponse.js
var require_ManualVerificationResponse = __commonJS({
  "node_modules/elevenlabs/api/types/ManualVerificationResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/MetricRecord.js
var require_MetricRecord = __commonJS({
  "node_modules/elevenlabs/api/types/MetricRecord.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/MetricType.js
var require_MetricType = __commonJS({
  "node_modules/elevenlabs/api/types/MetricType.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MetricType = void 0;
    exports.MetricType = {
      Credits: "credits",
      MinutesUsed: "minutes_used",
      RequestCount: "request_count",
      TtfbAvg: "ttfb_avg",
      TtfbP95: "ttfb_p95",
      FiatUnitsSpent: "fiat_units_spent"
    };
  }
});

// node_modules/elevenlabs/api/types/ModelRatesResponseModel.js
var require_ModelRatesResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/ModelRatesResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ModelResponseModelConcurrencyGroup.js
var require_ModelResponseModelConcurrencyGroup = __commonJS({
  "node_modules/elevenlabs/api/types/ModelResponseModelConcurrencyGroup.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ModelResponseModelConcurrencyGroup = void 0;
    exports.ModelResponseModelConcurrencyGroup = {
      Standard: "standard",
      Turbo: "turbo"
    };
  }
});

// node_modules/elevenlabs/api/types/Model.js
var require_Model = __commonJS({
  "node_modules/elevenlabs/api/types/Model.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ModerationStatusResponseModelSafetyStatus.js
var require_ModerationStatusResponseModelSafetyStatus = __commonJS({
  "node_modules/elevenlabs/api/types/ModerationStatusResponseModelSafetyStatus.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ModerationStatusResponseModelSafetyStatus = void 0;
    exports.ModerationStatusResponseModelSafetyStatus = {
      AppealApproved: "appeal_approved",
      AppealDenied: "appeal_denied",
      FalsePositive: "false_positive"
    };
  }
});

// node_modules/elevenlabs/api/types/ModerationStatusResponseModelWarningStatus.js
var require_ModerationStatusResponseModelWarningStatus = __commonJS({
  "node_modules/elevenlabs/api/types/ModerationStatusResponseModelWarningStatus.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ModerationStatusResponseModelWarningStatus = void 0;
    exports.ModerationStatusResponseModelWarningStatus = {
      Warning: "warning",
      WarningCleared: "warning_cleared"
    };
  }
});

// node_modules/elevenlabs/api/types/ModerationStatusResponseModel.js
var require_ModerationStatusResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/ModerationStatusResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ObjectJsonSchemaPropertyInputPropertiesValue.js
var require_ObjectJsonSchemaPropertyInputPropertiesValue = __commonJS({
  "node_modules/elevenlabs/api/types/ObjectJsonSchemaPropertyInputPropertiesValue.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ObjectJsonSchemaPropertyInput.js
var require_ObjectJsonSchemaPropertyInput = __commonJS({
  "node_modules/elevenlabs/api/types/ObjectJsonSchemaPropertyInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ObjectJsonSchemaPropertyOutputPropertiesValue.js
var require_ObjectJsonSchemaPropertyOutputPropertiesValue = __commonJS({
  "node_modules/elevenlabs/api/types/ObjectJsonSchemaPropertyOutputPropertiesValue.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ObjectJsonSchemaPropertyOutput.js
var require_ObjectJsonSchemaPropertyOutput = __commonJS({
  "node_modules/elevenlabs/api/types/ObjectJsonSchemaPropertyOutput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/OrbAvatar.js
var require_OrbAvatar = __commonJS({
  "node_modules/elevenlabs/api/types/OrbAvatar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/OutboundCallRecipientResponseModel.js
var require_OutboundCallRecipientResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/OutboundCallRecipientResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PdfExportOptions.js
var require_PdfExportOptions = __commonJS({
  "node_modules/elevenlabs/api/types/PdfExportOptions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PhoneNumberAgentInfo.js
var require_PhoneNumberAgentInfo = __commonJS({
  "node_modules/elevenlabs/api/types/PhoneNumberAgentInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PhoneNumberTransfer.js
var require_PhoneNumberTransfer = __commonJS({
  "node_modules/elevenlabs/api/types/PhoneNumberTransfer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PodcastBulletinMode.js
var require_PodcastBulletinMode = __commonJS({
  "node_modules/elevenlabs/api/types/PodcastBulletinMode.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PodcastBulletinModeData.js
var require_PodcastBulletinModeData = __commonJS({
  "node_modules/elevenlabs/api/types/PodcastBulletinModeData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PodcastConversationMode.js
var require_PodcastConversationMode = __commonJS({
  "node_modules/elevenlabs/api/types/PodcastConversationMode.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PodcastConversationModeData.js
var require_PodcastConversationModeData = __commonJS({
  "node_modules/elevenlabs/api/types/PodcastConversationModeData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PodcastProjectResponseModel.js
var require_PodcastProjectResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/PodcastProjectResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PodcastTextSource.js
var require_PodcastTextSource = __commonJS({
  "node_modules/elevenlabs/api/types/PodcastTextSource.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PodcastUrlSource.js
var require_PodcastUrlSource = __commonJS({
  "node_modules/elevenlabs/api/types/PodcastUrlSource.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PostAgentAvatarResponseModel.js
var require_PostAgentAvatarResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/PostAgentAvatarResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PostWorkspaceSecretResponseModel.js
var require_PostWorkspaceSecretResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/PostWorkspaceSecretResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PrivacyConfig.js
var require_PrivacyConfig = __commonJS({
  "node_modules/elevenlabs/api/types/PrivacyConfig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ProjectCreationMetaResponseModelStatus.js
var require_ProjectCreationMetaResponseModelStatus = __commonJS({
  "node_modules/elevenlabs/api/types/ProjectCreationMetaResponseModelStatus.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectCreationMetaResponseModelStatus = void 0;
    exports.ProjectCreationMetaResponseModelStatus = {
      Pending: "pending",
      Creating: "creating",
      Finished: "finished",
      Failed: "failed"
    };
  }
});

// node_modules/elevenlabs/api/types/ProjectCreationMetaResponseModelType.js
var require_ProjectCreationMetaResponseModelType = __commonJS({
  "node_modules/elevenlabs/api/types/ProjectCreationMetaResponseModelType.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectCreationMetaResponseModelType = void 0;
    exports.ProjectCreationMetaResponseModelType = {
      Blank: "blank",
      GeneratePodcast: "generate_podcast",
      AutoAssignVoices: "auto_assign_voices"
    };
  }
});

// node_modules/elevenlabs/api/types/ProjectCreationMetaResponseModel.js
var require_ProjectCreationMetaResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/ProjectCreationMetaResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ProjectExtendedResponseModelTargetAudience.js
var require_ProjectExtendedResponseModelTargetAudience = __commonJS({
  "node_modules/elevenlabs/api/types/ProjectExtendedResponseModelTargetAudience.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectExtendedResponseModelTargetAudience = void 0;
    exports.ProjectExtendedResponseModelTargetAudience = {
      Children: "children",
      YoungAdult: "young adult",
      Adult: "adult",
      AllAges: "all ages"
    };
  }
});

// node_modules/elevenlabs/api/types/ProjectState.js
var require_ProjectState = __commonJS({
  "node_modules/elevenlabs/api/types/ProjectState.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectState = void 0;
    exports.ProjectState = {
      Creating: "creating",
      Default: "default",
      Converting: "converting",
      InQueue: "in_queue"
    };
  }
});

// node_modules/elevenlabs/api/types/ProjectExtendedResponseModelAccessLevel.js
var require_ProjectExtendedResponseModelAccessLevel = __commonJS({
  "node_modules/elevenlabs/api/types/ProjectExtendedResponseModelAccessLevel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectExtendedResponseModelAccessLevel = void 0;
    exports.ProjectExtendedResponseModelAccessLevel = {
      Admin: "admin",
      Editor: "editor",
      Viewer: "viewer"
    };
  }
});

// node_modules/elevenlabs/api/types/ProjectExtendedResponseModelFiction.js
var require_ProjectExtendedResponseModelFiction = __commonJS({
  "node_modules/elevenlabs/api/types/ProjectExtendedResponseModelFiction.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectExtendedResponseModelFiction = void 0;
    exports.ProjectExtendedResponseModelFiction = {
      Fiction: "fiction",
      NonFiction: "non-fiction"
    };
  }
});

// node_modules/elevenlabs/api/types/ProjectExtendedResponseModelSourceType.js
var require_ProjectExtendedResponseModelSourceType = __commonJS({
  "node_modules/elevenlabs/api/types/ProjectExtendedResponseModelSourceType.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectExtendedResponseModelSourceType = void 0;
    exports.ProjectExtendedResponseModelSourceType = {
      Blank: "blank",
      Book: "book",
      Article: "article",
      Genfm: "genfm"
    };
  }
});

// node_modules/elevenlabs/api/types/ProjectExtendedResponseModelQualityPreset.js
var require_ProjectExtendedResponseModelQualityPreset = __commonJS({
  "node_modules/elevenlabs/api/types/ProjectExtendedResponseModelQualityPreset.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectExtendedResponseModelQualityPreset = void 0;
    exports.ProjectExtendedResponseModelQualityPreset = {
      Standard: "standard",
      High: "high",
      Highest: "highest",
      Ultra: "ultra",
      UltraLossless: "ultra_lossless"
    };
  }
});

// node_modules/elevenlabs/api/types/ProjectExtendedResponseModelApplyTextNormalization.js
var require_ProjectExtendedResponseModelApplyTextNormalization = __commonJS({
  "node_modules/elevenlabs/api/types/ProjectExtendedResponseModelApplyTextNormalization.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectExtendedResponseModelApplyTextNormalization = void 0;
    exports.ProjectExtendedResponseModelApplyTextNormalization = {
      Auto: "auto",
      On: "on",
      Off: "off",
      ApplyEnglish: "apply_english"
    };
  }
});

// node_modules/elevenlabs/api/types/ProjectExtendedResponse.js
var require_ProjectExtendedResponse = __commonJS({
  "node_modules/elevenlabs/api/types/ProjectExtendedResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ProjectResponseModelTargetAudience.js
var require_ProjectResponseModelTargetAudience = __commonJS({
  "node_modules/elevenlabs/api/types/ProjectResponseModelTargetAudience.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectResponseModelTargetAudience = void 0;
    exports.ProjectResponseModelTargetAudience = {
      Children: "children",
      YoungAdult: "young adult",
      Adult: "adult",
      AllAges: "all ages"
    };
  }
});

// node_modules/elevenlabs/api/types/ProjectResponseModelAccessLevel.js
var require_ProjectResponseModelAccessLevel = __commonJS({
  "node_modules/elevenlabs/api/types/ProjectResponseModelAccessLevel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectResponseModelAccessLevel = void 0;
    exports.ProjectResponseModelAccessLevel = {
      Admin: "admin",
      Editor: "editor",
      Viewer: "viewer"
    };
  }
});

// node_modules/elevenlabs/api/types/ProjectResponseModelFiction.js
var require_ProjectResponseModelFiction = __commonJS({
  "node_modules/elevenlabs/api/types/ProjectResponseModelFiction.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectResponseModelFiction = void 0;
    exports.ProjectResponseModelFiction = {
      Fiction: "fiction",
      NonFiction: "non-fiction"
    };
  }
});

// node_modules/elevenlabs/api/types/ProjectResponseModelSourceType.js
var require_ProjectResponseModelSourceType = __commonJS({
  "node_modules/elevenlabs/api/types/ProjectResponseModelSourceType.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectResponseModelSourceType = void 0;
    exports.ProjectResponseModelSourceType = {
      Blank: "blank",
      Book: "book",
      Article: "article",
      Genfm: "genfm"
    };
  }
});

// node_modules/elevenlabs/api/types/ProjectResponse.js
var require_ProjectResponse = __commonJS({
  "node_modules/elevenlabs/api/types/ProjectResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ProjectSnapshotExtendedResponseModel.js
var require_ProjectSnapshotExtendedResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/ProjectSnapshotExtendedResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ProjectSnapshotResponse.js
var require_ProjectSnapshotResponse = __commonJS({
  "node_modules/elevenlabs/api/types/ProjectSnapshotResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ProjectSnapshotsResponse.js
var require_ProjectSnapshotsResponse = __commonJS({
  "node_modules/elevenlabs/api/types/ProjectSnapshotsResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PromptAgentInputToolsItem.js
var require_PromptAgentInputToolsItem = __commonJS({
  "node_modules/elevenlabs/api/types/PromptAgentInputToolsItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PromptAgent.js
var require_PromptAgent = __commonJS({
  "node_modules/elevenlabs/api/types/PromptAgent.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PromptAgentOutputToolsItem.js
var require_PromptAgentOutputToolsItem = __commonJS({
  "node_modules/elevenlabs/api/types/PromptAgentOutputToolsItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PromptAgentDbModelToolsItem.js
var require_PromptAgentDbModelToolsItem = __commonJS({
  "node_modules/elevenlabs/api/types/PromptAgentDbModelToolsItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PromptAgentDbModel.js
var require_PromptAgentDbModel = __commonJS({
  "node_modules/elevenlabs/api/types/PromptAgentDbModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PromptAgentOverride.js
var require_PromptAgentOverride = __commonJS({
  "node_modules/elevenlabs/api/types/PromptAgentOverride.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PromptAgentOverrideConfig.js
var require_PromptAgentOverrideConfig = __commonJS({
  "node_modules/elevenlabs/api/types/PromptAgentOverrideConfig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PromptEvaluationCriteria.js
var require_PromptEvaluationCriteria = __commonJS({
  "node_modules/elevenlabs/api/types/PromptEvaluationCriteria.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PronunciationDictionaryAliasRuleRequestModel.js
var require_PronunciationDictionaryAliasRuleRequestModel = __commonJS({
  "node_modules/elevenlabs/api/types/PronunciationDictionaryAliasRuleRequestModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PronunciationDictionaryLocatorResponseModel.js
var require_PronunciationDictionaryLocatorResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/PronunciationDictionaryLocatorResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PronunciationDictionaryPhonemeRuleRequestModel.js
var require_PronunciationDictionaryPhonemeRuleRequestModel = __commonJS({
  "node_modules/elevenlabs/api/types/PronunciationDictionaryPhonemeRuleRequestModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PronunciationDictionaryRulesResponseModel.js
var require_PronunciationDictionaryRulesResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/PronunciationDictionaryRulesResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PronunciationDictionaryVersionLocator.js
var require_PronunciationDictionaryVersionLocator = __commonJS({
  "node_modules/elevenlabs/api/types/PronunciationDictionaryVersionLocator.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PronunciationDictionaryVersionLocatorRequestModel.js
var require_PronunciationDictionaryVersionLocatorRequestModel = __commonJS({
  "node_modules/elevenlabs/api/types/PronunciationDictionaryVersionLocatorRequestModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PronunciationDictionaryVersionResponseModelPermissionOnResource.js
var require_PronunciationDictionaryVersionResponseModelPermissionOnResource = __commonJS({
  "node_modules/elevenlabs/api/types/PronunciationDictionaryVersionResponseModelPermissionOnResource.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PronunciationDictionaryVersionResponseModelPermissionOnResource = void 0;
    exports.PronunciationDictionaryVersionResponseModelPermissionOnResource = {
      Admin: "admin",
      Editor: "editor",
      Viewer: "viewer"
    };
  }
});

// node_modules/elevenlabs/api/types/PronunciationDictionaryVersionResponseModel.js
var require_PronunciationDictionaryVersionResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/PronunciationDictionaryVersionResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PydanticPronunciationDictionaryVersionLocator.js
var require_PydanticPronunciationDictionaryVersionLocator = __commonJS({
  "node_modules/elevenlabs/api/types/PydanticPronunciationDictionaryVersionLocator.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/QueryParamsJsonSchema.js
var require_QueryParamsJsonSchema = __commonJS({
  "node_modules/elevenlabs/api/types/QueryParamsJsonSchema.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/RagIndexResponseModel.js
var require_RagIndexResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/RagIndexResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/RagIndexStatus.js
var require_RagIndexStatus = __commonJS({
  "node_modules/elevenlabs/api/types/RagIndexStatus.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RagIndexStatus = void 0;
    exports.RagIndexStatus = {
      Created: "created",
      Processing: "processing",
      Failed: "failed",
      Succeeded: "succeeded"
    };
  }
});

// node_modules/elevenlabs/api/types/RagChunkMetadata.js
var require_RagChunkMetadata = __commonJS({
  "node_modules/elevenlabs/api/types/RagChunkMetadata.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/RagConfig.js
var require_RagConfig = __commonJS({
  "node_modules/elevenlabs/api/types/RagConfig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/RagRetrievalInfo.js
var require_RagRetrievalInfo = __commonJS({
  "node_modules/elevenlabs/api/types/RagRetrievalInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ReaderResourceResponseModelResourceType.js
var require_ReaderResourceResponseModelResourceType = __commonJS({
  "node_modules/elevenlabs/api/types/ReaderResourceResponseModelResourceType.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ReaderResourceResponseModelResourceType = void 0;
    exports.ReaderResourceResponseModelResourceType = {
      Read: "read",
      Collection: "collection"
    };
  }
});

// node_modules/elevenlabs/api/types/ReaderResourceResponseModel.js
var require_ReaderResourceResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/ReaderResourceResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/RecordingResponse.js
var require_RecordingResponse = __commonJS({
  "node_modules/elevenlabs/api/types/RecordingResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/RenderStatus.js
var require_RenderStatus = __commonJS({
  "node_modules/elevenlabs/api/types/RenderStatus.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RenderStatus = void 0;
    exports.RenderStatus = {
      Complete: "complete",
      Processing: "processing",
      Failed: "failed"
    };
  }
});

// node_modules/elevenlabs/api/types/Render.js
var require_Render = __commonJS({
  "node_modules/elevenlabs/api/types/Render.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/RenderType.js
var require_RenderType = __commonJS({
  "node_modules/elevenlabs/api/types/RenderType.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RenderType = void 0;
    exports.RenderType = {
      Mp4: "mp4",
      Aac: "aac",
      Mp3: "mp3",
      Wav: "wav",
      Aaf: "aaf",
      TracksZip: "tracks_zip",
      ClipsZip: "clips_zip"
    };
  }
});

// node_modules/elevenlabs/api/types/RequestPvcManualVerificationResponseModel.js
var require_RequestPvcManualVerificationResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/RequestPvcManualVerificationResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ResourceAccessInfoRole.js
var require_ResourceAccessInfoRole = __commonJS({
  "node_modules/elevenlabs/api/types/ResourceAccessInfoRole.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ResourceAccessInfoRole = void 0;
    exports.ResourceAccessInfoRole = {
      Admin: "admin",
      Editor: "editor",
      Viewer: "viewer"
    };
  }
});

// node_modules/elevenlabs/api/types/ResourceAccessInfo.js
var require_ResourceAccessInfo = __commonJS({
  "node_modules/elevenlabs/api/types/ResourceAccessInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ResourceMetadataResponseModel.js
var require_ResourceMetadataResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/ResourceMetadataResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SipMediaEncryptionEnum.js
var require_SipMediaEncryptionEnum = __commonJS({
  "node_modules/elevenlabs/api/types/SipMediaEncryptionEnum.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SipMediaEncryptionEnum = void 0;
    exports.SipMediaEncryptionEnum = {
      Disabled: "disabled",
      Allowed: "allowed",
      Required: "required"
    };
  }
});

// node_modules/elevenlabs/api/types/SipTrunkConfigResponseModel.js
var require_SipTrunkConfigResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/SipTrunkConfigResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SipTrunkCredentials.js
var require_SipTrunkCredentials = __commonJS({
  "node_modules/elevenlabs/api/types/SipTrunkCredentials.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SipTrunkOutboundCallResponse.js
var require_SipTrunkOutboundCallResponse = __commonJS({
  "node_modules/elevenlabs/api/types/SipTrunkOutboundCallResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SipTrunkTransportEnum.js
var require_SipTrunkTransportEnum = __commonJS({
  "node_modules/elevenlabs/api/types/SipTrunkTransportEnum.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SipTrunkTransportEnum = void 0;
    exports.SipTrunkTransportEnum = {
      Auto: "auto",
      Udp: "udp",
      Tcp: "tcp",
      Tls: "tls"
    };
  }
});

// node_modules/elevenlabs/api/types/SafetyCommonModel.js
var require_SafetyCommonModel = __commonJS({
  "node_modules/elevenlabs/api/types/SafetyCommonModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SafetyEvaluation.js
var require_SafetyEvaluation = __commonJS({
  "node_modules/elevenlabs/api/types/SafetyEvaluation.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SafetyResponseModel.js
var require_SafetyResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/SafetyResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SafetyRule.js
var require_SafetyRule = __commonJS({
  "node_modules/elevenlabs/api/types/SafetyRule.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SafetyRule = void 0;
    exports.SafetyRule = {
      SexualMinors: "sexual_minors",
      ForgetModeration: "forget_moderation",
      Extremism: "extremism",
      ScamFraud: "scam_fraud",
      Political: "political",
      SelfHarm: "self_harm",
      IllegalDistributionMedical: "illegal_distribution_medical",
      SexualAdults: "sexual_adults",
      Unknown: "unknown"
    };
  }
});

// node_modules/elevenlabs/api/types/VoiceSample.js
var require_VoiceSample = __commonJS({
  "node_modules/elevenlabs/api/types/VoiceSample.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SecretDependencyType.js
var require_SecretDependencyType = __commonJS({
  "node_modules/elevenlabs/api/types/SecretDependencyType.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SegmentCreateResponse.js
var require_SegmentCreateResponse = __commonJS({
  "node_modules/elevenlabs/api/types/SegmentCreateResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SegmentDeleteResponse.js
var require_SegmentDeleteResponse = __commonJS({
  "node_modules/elevenlabs/api/types/SegmentDeleteResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SegmentDubResponse.js
var require_SegmentDubResponse = __commonJS({
  "node_modules/elevenlabs/api/types/SegmentDubResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SegmentTranscriptionResponse.js
var require_SegmentTranscriptionResponse = __commonJS({
  "node_modules/elevenlabs/api/types/SegmentTranscriptionResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SegmentTranslationResponse.js
var require_SegmentTranslationResponse = __commonJS({
  "node_modules/elevenlabs/api/types/SegmentTranslationResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SegmentUpdateResponse.js
var require_SegmentUpdateResponse = __commonJS({
  "node_modules/elevenlabs/api/types/SegmentUpdateResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SegmentedJsonExportOptions.js
var require_SegmentedJsonExportOptions = __commonJS({
  "node_modules/elevenlabs/api/types/SegmentedJsonExportOptions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ShareOptionResponseModelType.js
var require_ShareOptionResponseModelType = __commonJS({
  "node_modules/elevenlabs/api/types/ShareOptionResponseModelType.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ShareOptionResponseModelType = void 0;
    exports.ShareOptionResponseModelType = {
      User: "user",
      Group: "group",
      Key: "key"
    };
  }
});

// node_modules/elevenlabs/api/types/ShareOptionResponseModel.js
var require_ShareOptionResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/ShareOptionResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SimilarVoiceCategory.js
var require_SimilarVoiceCategory = __commonJS({
  "node_modules/elevenlabs/api/types/SimilarVoiceCategory.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SimilarVoiceCategory = void 0;
    exports.SimilarVoiceCategory = {
      Premade: "premade",
      Cloned: "cloned",
      Generated: "generated",
      Professional: "professional",
      Famous: "famous"
    };
  }
});

// node_modules/elevenlabs/api/types/SimilarVoice.js
var require_SimilarVoice = __commonJS({
  "node_modules/elevenlabs/api/types/SimilarVoice.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SimilarVoicesForSpeakerResponse.js
var require_SimilarVoicesForSpeakerResponse = __commonJS({
  "node_modules/elevenlabs/api/types/SimilarVoicesForSpeakerResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SpeakerAudioResponseModel.js
var require_SpeakerAudioResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/SpeakerAudioResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SpeakerResponseModel.js
var require_SpeakerResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/SpeakerResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SpeakerSegment.js
var require_SpeakerSegment = __commonJS({
  "node_modules/elevenlabs/api/types/SpeakerSegment.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SpeakerSeparationResponseModelStatus.js
var require_SpeakerSeparationResponseModelStatus = __commonJS({
  "node_modules/elevenlabs/api/types/SpeakerSeparationResponseModelStatus.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SpeakerSeparationResponseModelStatus = void 0;
    exports.SpeakerSeparationResponseModelStatus = {
      NotStarted: "not_started",
      Pending: "pending",
      Completed: "completed",
      Failed: "failed"
    };
  }
});

// node_modules/elevenlabs/api/types/SpeakerSeparationResponseModel.js
var require_SpeakerSeparationResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/SpeakerSeparationResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SpeakerTrack.js
var require_SpeakerTrack = __commonJS({
  "node_modules/elevenlabs/api/types/SpeakerTrack.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SpeakerUpdatedResponse.js
var require_SpeakerUpdatedResponse = __commonJS({
  "node_modules/elevenlabs/api/types/SpeakerUpdatedResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SpeechHistoryItemResponseModelVoiceCategory.js
var require_SpeechHistoryItemResponseModelVoiceCategory = __commonJS({
  "node_modules/elevenlabs/api/types/SpeechHistoryItemResponseModelVoiceCategory.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SpeechHistoryItemResponseModelVoiceCategory = void 0;
    exports.SpeechHistoryItemResponseModelVoiceCategory = {
      Premade: "premade",
      Cloned: "cloned",
      Generated: "generated",
      Professional: "professional"
    };
  }
});

// node_modules/elevenlabs/api/types/SpeechHistoryItemResponseModelSource.js
var require_SpeechHistoryItemResponseModelSource = __commonJS({
  "node_modules/elevenlabs/api/types/SpeechHistoryItemResponseModelSource.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SpeechHistoryItemResponseModelSource = void 0;
    exports.SpeechHistoryItemResponseModelSource = {
      Tts: "TTS",
      Sts: "STS",
      Projects: "Projects",
      Pd: "PD",
      An: "AN",
      Dubbing: "Dubbing",
      PlayApi: "PlayAPI",
      ConvAi: "ConvAI"
    };
  }
});

// node_modules/elevenlabs/api/types/SpeechHistoryItemResponse.js
var require_SpeechHistoryItemResponse = __commonJS({
  "node_modules/elevenlabs/api/types/SpeechHistoryItemResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SpeechToTextCharacterResponseModel.js
var require_SpeechToTextCharacterResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/SpeechToTextCharacterResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SpeechToTextChunkResponseModel.js
var require_SpeechToTextChunkResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/SpeechToTextChunkResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SpeechToTextWordResponseModelType.js
var require_SpeechToTextWordResponseModelType = __commonJS({
  "node_modules/elevenlabs/api/types/SpeechToTextWordResponseModelType.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SpeechToTextWordResponseModelType = void 0;
    exports.SpeechToTextWordResponseModelType = {
      Word: "word",
      Spacing: "spacing",
      AudioEvent: "audio_event"
    };
  }
});

// node_modules/elevenlabs/api/types/SpeechToTextWordResponseModel.js
var require_SpeechToTextWordResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/SpeechToTextWordResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SrtExportOptions.js
var require_SrtExportOptions = __commonJS({
  "node_modules/elevenlabs/api/types/SrtExportOptions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/StartPvcVoiceTrainingResponseModel.js
var require_StartPvcVoiceTrainingResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/StartPvcVoiceTrainingResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/StartSpeakerSeparationResponseModel.js
var require_StartSpeakerSeparationResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/StartSpeakerSeparationResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/StreamingAudioChunkWithTimestampsResponse.js
var require_StreamingAudioChunkWithTimestampsResponse = __commonJS({
  "node_modules/elevenlabs/api/types/StreamingAudioChunkWithTimestampsResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SubscriptionExtrasResponseModel.js
var require_SubscriptionExtrasResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/SubscriptionExtrasResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SubscriptionResponseModelCurrency.js
var require_SubscriptionResponseModelCurrency = __commonJS({
  "node_modules/elevenlabs/api/types/SubscriptionResponseModelCurrency.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SubscriptionResponseModelCurrency = void 0;
    exports.SubscriptionResponseModelCurrency = {
      Usd: "usd",
      Eur: "eur"
    };
  }
});

// node_modules/elevenlabs/api/types/SubscriptionStatus.js
var require_SubscriptionStatus = __commonJS({
  "node_modules/elevenlabs/api/types/SubscriptionStatus.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SubscriptionStatus = void 0;
    exports.SubscriptionStatus = {
      Trialing: "trialing",
      Active: "active",
      Incomplete: "incomplete",
      IncompleteExpired: "incomplete_expired",
      PastDue: "past_due",
      Canceled: "canceled",
      Unpaid: "unpaid",
      Free: "free"
    };
  }
});

// node_modules/elevenlabs/api/types/SubscriptionResponseModelBillingPeriod.js
var require_SubscriptionResponseModelBillingPeriod = __commonJS({
  "node_modules/elevenlabs/api/types/SubscriptionResponseModelBillingPeriod.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SubscriptionResponseModelBillingPeriod = void 0;
    exports.SubscriptionResponseModelBillingPeriod = {
      MonthlyPeriod: "monthly_period",
      AnnualPeriod: "annual_period"
    };
  }
});

// node_modules/elevenlabs/api/types/SubscriptionResponseModelCharacterRefreshPeriod.js
var require_SubscriptionResponseModelCharacterRefreshPeriod = __commonJS({
  "node_modules/elevenlabs/api/types/SubscriptionResponseModelCharacterRefreshPeriod.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SubscriptionResponseModelCharacterRefreshPeriod = void 0;
    exports.SubscriptionResponseModelCharacterRefreshPeriod = {
      MonthlyPeriod: "monthly_period",
      AnnualPeriod: "annual_period"
    };
  }
});

// node_modules/elevenlabs/api/types/SubscriptionResponse.js
var require_SubscriptionResponse = __commonJS({
  "node_modules/elevenlabs/api/types/SubscriptionResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SubscriptionUsageResponseModel.js
var require_SubscriptionUsageResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/SubscriptionUsageResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SystemToolConfigInputParams.js
var require_SystemToolConfigInputParams = __commonJS({
  "node_modules/elevenlabs/api/types/SystemToolConfigInputParams.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SystemToolConfigInput.js
var require_SystemToolConfigInput = __commonJS({
  "node_modules/elevenlabs/api/types/SystemToolConfigInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SystemToolConfigOutputParams.js
var require_SystemToolConfigOutputParams = __commonJS({
  "node_modules/elevenlabs/api/types/SystemToolConfigOutputParams.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SystemToolConfigOutput.js
var require_SystemToolConfigOutput = __commonJS({
  "node_modules/elevenlabs/api/types/SystemToolConfigOutput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/TtsConversationalConfig.js
var require_TtsConversationalConfig = __commonJS({
  "node_modules/elevenlabs/api/types/TtsConversationalConfig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/TtsConversationalConfigOverride.js
var require_TtsConversationalConfigOverride = __commonJS({
  "node_modules/elevenlabs/api/types/TtsConversationalConfigOverride.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/TtsConversationalConfigOverrideConfig.js
var require_TtsConversationalConfigOverrideConfig = __commonJS({
  "node_modules/elevenlabs/api/types/TtsConversationalConfigOverrideConfig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/TtsConversationalModel.js
var require_TtsConversationalModel = __commonJS({
  "node_modules/elevenlabs/api/types/TtsConversationalModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TtsConversationalModel = void 0;
    exports.TtsConversationalModel = {
      ElevenTurboV2: "eleven_turbo_v2",
      ElevenTurboV25: "eleven_turbo_v2_5",
      ElevenFlashV2: "eleven_flash_v2",
      ElevenFlashV25: "eleven_flash_v2_5"
    };
  }
});

// node_modules/elevenlabs/api/types/TtsOptimizeStreamingLatency.js
var require_TtsOptimizeStreamingLatency = __commonJS({
  "node_modules/elevenlabs/api/types/TtsOptimizeStreamingLatency.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/TtsOutputFormat.js
var require_TtsOutputFormat = __commonJS({
  "node_modules/elevenlabs/api/types/TtsOutputFormat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TtsOutputFormat = void 0;
    exports.TtsOutputFormat = {
      Pcm8000: "pcm_8000",
      Pcm16000: "pcm_16000",
      Pcm22050: "pcm_22050",
      Pcm24000: "pcm_24000",
      Pcm44100: "pcm_44100",
      Pcm48000: "pcm_48000",
      Ulaw8000: "ulaw_8000"
    };
  }
});

// node_modules/elevenlabs/api/types/TelephonyProvider.js
var require_TelephonyProvider = __commonJS({
  "node_modules/elevenlabs/api/types/TelephonyProvider.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TelephonyProvider = void 0;
    exports.TelephonyProvider = {
      Twilio: "twilio",
      SipTrunk: "sip_trunk"
    };
  }
});

// node_modules/elevenlabs/api/types/ToolMockConfig.js
var require_ToolMockConfig = __commonJS({
  "node_modules/elevenlabs/api/types/ToolMockConfig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/TransferToAgentToolConfig.js
var require_TransferToAgentToolConfig = __commonJS({
  "node_modules/elevenlabs/api/types/TransferToAgentToolConfig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/TransferToNumberToolConfig.js
var require_TransferToNumberToolConfig = __commonJS({
  "node_modules/elevenlabs/api/types/TransferToNumberToolConfig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/TurnConfig.js
var require_TurnConfig = __commonJS({
  "node_modules/elevenlabs/api/types/TurnConfig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/TurnMode.js
var require_TurnMode = __commonJS({
  "node_modules/elevenlabs/api/types/TurnMode.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TurnMode = void 0;
    exports.TurnMode = {
      Silence: "silence",
      Turn: "turn"
    };
  }
});

// node_modules/elevenlabs/api/types/TwilioOutboundCallResponse.js
var require_TwilioOutboundCallResponse = __commonJS({
  "node_modules/elevenlabs/api/types/TwilioOutboundCallResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/TxtExportOptions.js
var require_TxtExportOptions = __commonJS({
  "node_modules/elevenlabs/api/types/TxtExportOptions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/UrlAvatar.js
var require_UrlAvatar = __commonJS({
  "node_modules/elevenlabs/api/types/UrlAvatar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/UpdateWorkspaceMemberResponseModel.js
var require_UpdateWorkspaceMemberResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/UpdateWorkspaceMemberResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/UsageAggregationInterval.js
var require_UsageAggregationInterval = __commonJS({
  "node_modules/elevenlabs/api/types/UsageAggregationInterval.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UsageAggregationInterval = void 0;
    exports.UsageAggregationInterval = {
      Hour: "hour",
      Day: "day",
      Week: "week",
      Month: "month",
      Cumulative: "cumulative"
    };
  }
});

// node_modules/elevenlabs/api/types/UsageCharactersResponseModel.js
var require_UsageCharactersResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/UsageCharactersResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/UserFeedback.js
var require_UserFeedback = __commonJS({
  "node_modules/elevenlabs/api/types/UserFeedback.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/UserFeedbackScore.js
var require_UserFeedbackScore = __commonJS({
  "node_modules/elevenlabs/api/types/UserFeedbackScore.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UserFeedbackScore = void 0;
    exports.UserFeedbackScore = {
      Like: "like",
      Dislike: "dislike"
    };
  }
});

// node_modules/elevenlabs/api/types/User.js
var require_User = __commonJS({
  "node_modules/elevenlabs/api/types/User.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/UtteranceResponseModel.js
var require_UtteranceResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/UtteranceResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ValidationErrorLocItem.js
var require_ValidationErrorLocItem = __commonJS({
  "node_modules/elevenlabs/api/types/ValidationErrorLocItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/ValidationError.js
var require_ValidationError = __commonJS({
  "node_modules/elevenlabs/api/types/ValidationError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/VerificationAttemptResponse.js
var require_VerificationAttemptResponse = __commonJS({
  "node_modules/elevenlabs/api/types/VerificationAttemptResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/VerifiedVoiceLanguageResponseModel.js
var require_VerifiedVoiceLanguageResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/VerifiedVoiceLanguageResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/VerifyPvcVoiceCaptchaResponseModel.js
var require_VerifyPvcVoiceCaptchaResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/VerifyPvcVoiceCaptchaResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/VoiceGenerationParameterOptionResponse.js
var require_VoiceGenerationParameterOptionResponse = __commonJS({
  "node_modules/elevenlabs/api/types/VoiceGenerationParameterOptionResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/VoiceGenerationParameterResponse.js
var require_VoiceGenerationParameterResponse = __commonJS({
  "node_modules/elevenlabs/api/types/VoiceGenerationParameterResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/VoicePreviewResponseModel.js
var require_VoicePreviewResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/VoicePreviewResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/VoiceDesignPreviewResponse.js
var require_VoiceDesignPreviewResponse = __commonJS({
  "node_modules/elevenlabs/api/types/VoiceDesignPreviewResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/VoiceResponseModelCategory.js
var require_VoiceResponseModelCategory = __commonJS({
  "node_modules/elevenlabs/api/types/VoiceResponseModelCategory.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.VoiceResponseModelCategory = void 0;
    exports.VoiceResponseModelCategory = {
      Generated: "generated",
      Cloned: "cloned",
      Premade: "premade",
      Professional: "professional",
      Famous: "famous",
      HighQuality: "high_quality"
    };
  }
});

// node_modules/elevenlabs/api/types/VoiceResponseModelSafetyControl.js
var require_VoiceResponseModelSafetyControl = __commonJS({
  "node_modules/elevenlabs/api/types/VoiceResponseModelSafetyControl.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.VoiceResponseModelSafetyControl = void 0;
    exports.VoiceResponseModelSafetyControl = {
      None: "NONE",
      Ban: "BAN",
      Captcha: "CAPTCHA",
      CaptchaAndModeration: "CAPTCHA_AND_MODERATION",
      EnterpriseBan: "ENTERPRISE_BAN",
      EnterpriseCaptcha: "ENTERPRISE_CAPTCHA"
    };
  }
});

// node_modules/elevenlabs/api/types/Voice.js
var require_Voice = __commonJS({
  "node_modules/elevenlabs/api/types/Voice.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/VoiceSamplePreviewResponseModel.js
var require_VoiceSamplePreviewResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/VoiceSamplePreviewResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/VoiceSampleVisualWaveformResponseModel.js
var require_VoiceSampleVisualWaveformResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/VoiceSampleVisualWaveformResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/VoiceSettings.js
var require_VoiceSettings = __commonJS({
  "node_modules/elevenlabs/api/types/VoiceSettings.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/VoiceSharingModerationCheckResponseModel.js
var require_VoiceSharingModerationCheckResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/VoiceSharingModerationCheckResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/VoiceSharingState.js
var require_VoiceSharingState = __commonJS({
  "node_modules/elevenlabs/api/types/VoiceSharingState.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.VoiceSharingState = void 0;
    exports.VoiceSharingState = {
      Enabled: "enabled",
      Disabled: "disabled",
      Copied: "copied",
      CopiedDisabled: "copied_disabled"
    };
  }
});

// node_modules/elevenlabs/api/types/VoiceSharingResponseModelCategory.js
var require_VoiceSharingResponseModelCategory = __commonJS({
  "node_modules/elevenlabs/api/types/VoiceSharingResponseModelCategory.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.VoiceSharingResponseModelCategory = void 0;
    exports.VoiceSharingResponseModelCategory = {
      Generated: "generated",
      Cloned: "cloned",
      Premade: "premade",
      Professional: "professional",
      Famous: "famous",
      HighQuality: "high_quality"
    };
  }
});

// node_modules/elevenlabs/api/types/ReviewStatus.js
var require_ReviewStatus = __commonJS({
  "node_modules/elevenlabs/api/types/ReviewStatus.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ReviewStatus = void 0;
    exports.ReviewStatus = {
      NotRequested: "not_requested",
      Pending: "pending",
      Declined: "declined",
      Allowed: "allowed",
      AllowedWithChanges: "allowed_with_changes"
    };
  }
});

// node_modules/elevenlabs/api/types/VoiceSharingResponse.js
var require_VoiceSharingResponse = __commonJS({
  "node_modules/elevenlabs/api/types/VoiceSharingResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/VoiceVerificationResponse.js
var require_VoiceVerificationResponse = __commonJS({
  "node_modules/elevenlabs/api/types/VoiceVerificationResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/WebhookToolApiSchemaConfigInputMethod.js
var require_WebhookToolApiSchemaConfigInputMethod = __commonJS({
  "node_modules/elevenlabs/api/types/WebhookToolApiSchemaConfigInputMethod.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.WebhookToolApiSchemaConfigInputMethod = void 0;
    exports.WebhookToolApiSchemaConfigInputMethod = {
      Get: "GET",
      Post: "POST",
      Put: "PUT",
      Patch: "PATCH",
      Delete: "DELETE"
    };
  }
});

// node_modules/elevenlabs/api/types/WebhookToolApiSchemaConfigInputRequestHeadersValue.js
var require_WebhookToolApiSchemaConfigInputRequestHeadersValue = __commonJS({
  "node_modules/elevenlabs/api/types/WebhookToolApiSchemaConfigInputRequestHeadersValue.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/WebhookToolApiSchemaConfigInput.js
var require_WebhookToolApiSchemaConfigInput = __commonJS({
  "node_modules/elevenlabs/api/types/WebhookToolApiSchemaConfigInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/WebhookToolApiSchemaConfigOutputMethod.js
var require_WebhookToolApiSchemaConfigOutputMethod = __commonJS({
  "node_modules/elevenlabs/api/types/WebhookToolApiSchemaConfigOutputMethod.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.WebhookToolApiSchemaConfigOutputMethod = void 0;
    exports.WebhookToolApiSchemaConfigOutputMethod = {
      Get: "GET",
      Post: "POST",
      Put: "PUT",
      Patch: "PATCH",
      Delete: "DELETE"
    };
  }
});

// node_modules/elevenlabs/api/types/WebhookToolApiSchemaConfigOutputRequestHeadersValue.js
var require_WebhookToolApiSchemaConfigOutputRequestHeadersValue = __commonJS({
  "node_modules/elevenlabs/api/types/WebhookToolApiSchemaConfigOutputRequestHeadersValue.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/WebhookToolApiSchemaConfigOutput.js
var require_WebhookToolApiSchemaConfigOutput = __commonJS({
  "node_modules/elevenlabs/api/types/WebhookToolApiSchemaConfigOutput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/WebhookToolConfigInput.js
var require_WebhookToolConfigInput = __commonJS({
  "node_modules/elevenlabs/api/types/WebhookToolConfigInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/WebhookToolConfigOutput.js
var require_WebhookToolConfigOutput = __commonJS({
  "node_modules/elevenlabs/api/types/WebhookToolConfigOutput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/WidgetConfigAvatar.js
var require_WidgetConfigAvatar = __commonJS({
  "node_modules/elevenlabs/api/types/WidgetConfigAvatar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/WidgetConfig.js
var require_WidgetConfig = __commonJS({
  "node_modules/elevenlabs/api/types/WidgetConfig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/WidgetConfigResponseModelAvatar.js
var require_WidgetConfigResponseModelAvatar = __commonJS({
  "node_modules/elevenlabs/api/types/WidgetConfigResponseModelAvatar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/WidgetConfigResponseModel.js
var require_WidgetConfigResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/WidgetConfigResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/WidgetExpandable.js
var require_WidgetExpandable = __commonJS({
  "node_modules/elevenlabs/api/types/WidgetExpandable.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.WidgetExpandable = void 0;
    exports.WidgetExpandable = {
      Never: "never",
      Mobile: "mobile",
      Desktop: "desktop",
      Always: "always"
    };
  }
});

// node_modules/elevenlabs/api/types/WidgetFeedbackMode.js
var require_WidgetFeedbackMode = __commonJS({
  "node_modules/elevenlabs/api/types/WidgetFeedbackMode.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.WidgetFeedbackMode = void 0;
    exports.WidgetFeedbackMode = {
      None: "none",
      During: "during",
      End: "end"
    };
  }
});

// node_modules/elevenlabs/api/types/WorkspaceGroupByNameResponseModel.js
var require_WorkspaceGroupByNameResponseModel = __commonJS({
  "node_modules/elevenlabs/api/types/WorkspaceGroupByNameResponseModel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/WorkspaceResourceType.js
var require_WorkspaceResourceType = __commonJS({
  "node_modules/elevenlabs/api/types/WorkspaceResourceType.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.WorkspaceResourceType = void 0;
    exports.WorkspaceResourceType = {
      Voice: "voice",
      VoiceCollection: "voice_collection",
      PronunciationDictionary: "pronunciation_dictionary",
      Dubbing: "dubbing",
      Project: "project",
      ConvaiAgents: "convai_agents",
      ConvaiKnowledgeBaseDocuments: "convai_knowledge_base_documents",
      ConvaiTools: "convai_tools",
      ConvaiSettings: "convai_settings",
      ConvaiSecrets: "convai_secrets",
      MusicLatent: "music_latent",
      ConvaiPhoneNumbers: "convai_phone_numbers",
      ConvaiMcps: "convai_mcps",
      ConvaiBatchCalls: "convai_batch_calls"
    };
  }
});

// node_modules/elevenlabs/api/types/OutputFormat.js
var require_OutputFormat = __commonJS({
  "node_modules/elevenlabs/api/types/OutputFormat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OutputFormat = void 0;
    exports.OutputFormat = {
      Mp32205032: "mp3_22050_32",
      Mp34410032: "mp3_44100_32",
      Mp34410064: "mp3_44100_64",
      Mp34410096: "mp3_44100_96",
      Mp344100128: "mp3_44100_128",
      Mp344100192: "mp3_44100_192",
      Pcm16000: "pcm_16000",
      Pcm22050: "pcm_22050",
      Pcm24000: "pcm_24000",
      Pcm44100: "pcm_44100",
      Ulaw8000: "ulaw_8000"
    };
  }
});

// node_modules/elevenlabs/api/types/HistoryItemResponse.js
var require_HistoryItemResponse = __commonJS({
  "node_modules/elevenlabs/api/types/HistoryItemResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/Age.js
var require_Age = __commonJS({
  "node_modules/elevenlabs/api/types/Age.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/Gender.js
var require_Gender = __commonJS({
  "node_modules/elevenlabs/api/types/Gender.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AddSharingVoiceRequest.js
var require_AddSharingVoiceRequest = __commonJS({
  "node_modules/elevenlabs/api/types/AddSharingVoiceRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/CreateAudioNativeProjectRequest.js
var require_CreateAudioNativeProjectRequest = __commonJS({
  "node_modules/elevenlabs/api/types/CreateAudioNativeProjectRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/TextToSpeechStreamRequest.js
var require_TextToSpeechStreamRequest = __commonJS({
  "node_modules/elevenlabs/api/types/TextToSpeechStreamRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/EditVoiceSettingsRequest.js
var require_EditVoiceSettingsRequest = __commonJS({
  "node_modules/elevenlabs/api/types/EditVoiceSettingsRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetChaptersRequest.js
var require_GetChaptersRequest = __commonJS({
  "node_modules/elevenlabs/api/types/GetChaptersRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetChapterRequest.js
var require_GetChapterRequest = __commonJS({
  "node_modules/elevenlabs/api/types/GetChapterRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DeleteChapterRequest.js
var require_DeleteChapterRequest = __commonJS({
  "node_modules/elevenlabs/api/types/DeleteChapterRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetChapterSnapshotsRequest.js
var require_GetChapterSnapshotsRequest = __commonJS({
  "node_modules/elevenlabs/api/types/GetChapterSnapshotsRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetProjectsRequest.js
var require_GetProjectsRequest = __commonJS({
  "node_modules/elevenlabs/api/types/GetProjectsRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetProjectRequest.js
var require_GetProjectRequest = __commonJS({
  "node_modules/elevenlabs/api/types/GetProjectRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/DeleteProjectRequest.js
var require_DeleteProjectRequest = __commonJS({
  "node_modules/elevenlabs/api/types/DeleteProjectRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/CreateTranscriptRequest.js
var require_CreateTranscriptRequest = __commonJS({
  "node_modules/elevenlabs/api/types/CreateTranscriptRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/RemoveMemberFromGroupRequest.js
var require_RemoveMemberFromGroupRequest = __commonJS({
  "node_modules/elevenlabs/api/types/RemoveMemberFromGroupRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/UpdateAudioNativeProjectRequest.js
var require_UpdateAudioNativeProjectRequest = __commonJS({
  "node_modules/elevenlabs/api/types/UpdateAudioNativeProjectRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/UpdateProjectRequest.js
var require_UpdateProjectRequest = __commonJS({
  "node_modules/elevenlabs/api/types/UpdateProjectRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/UpdateChapterRequest.js
var require_UpdateChapterRequest = __commonJS({
  "node_modules/elevenlabs/api/types/UpdateChapterRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/CharacterUsageResponse.js
var require_CharacterUsageResponse = __commonJS({
  "node_modules/elevenlabs/api/types/CharacterUsageResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetPronunciationDictionariesResponse.js
var require_GetPronunciationDictionariesResponse = __commonJS({
  "node_modules/elevenlabs/api/types/GetPronunciationDictionariesResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GetPronunciationDictionaryResponse.js
var require_GetPronunciationDictionaryResponse = __commonJS({
  "node_modules/elevenlabs/api/types/GetPronunciationDictionaryResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/InitializeConnection.js
var require_InitializeConnection = __commonJS({
  "node_modules/elevenlabs/api/types/InitializeConnection.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/CloseConnection.js
var require_CloseConnection = __commonJS({
  "node_modules/elevenlabs/api/types/CloseConnection.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SendText.js
var require_SendText = __commonJS({
  "node_modules/elevenlabs/api/types/SendText.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/RealtimeVoiceSettings.js
var require_RealtimeVoiceSettings = __commonJS({
  "node_modules/elevenlabs/api/types/RealtimeVoiceSettings.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/GenerationConfig.js
var require_GenerationConfig = __commonJS({
  "node_modules/elevenlabs/api/types/GenerationConfig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AudioOutput.js
var require_AudioOutput = __commonJS({
  "node_modules/elevenlabs/api/types/AudioOutput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/FinalOutput.js
var require_FinalOutput = __commonJS({
  "node_modules/elevenlabs/api/types/FinalOutput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/NormalizedAlignment.js
var require_NormalizedAlignment = __commonJS({
  "node_modules/elevenlabs/api/types/NormalizedAlignment.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/Alignment.js
var require_Alignment = __commonJS({
  "node_modules/elevenlabs/api/types/Alignment.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/PronunciationDictionaryLocator.js
var require_PronunciationDictionaryLocator = __commonJS({
  "node_modules/elevenlabs/api/types/PronunciationDictionaryLocator.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/WebsocketTtsClientMessageMulti.js
var require_WebsocketTtsClientMessageMulti = __commonJS({
  "node_modules/elevenlabs/api/types/WebsocketTtsClientMessageMulti.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/WebsocketTtsServerMessageMulti.js
var require_WebsocketTtsServerMessageMulti = __commonJS({
  "node_modules/elevenlabs/api/types/WebsocketTtsServerMessageMulti.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/InitializeConnectionMulti.js
var require_InitializeConnectionMulti = __commonJS({
  "node_modules/elevenlabs/api/types/InitializeConnectionMulti.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/SendTextMulti.js
var require_SendTextMulti = __commonJS({
  "node_modules/elevenlabs/api/types/SendTextMulti.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/FlushContext.js
var require_FlushContext = __commonJS({
  "node_modules/elevenlabs/api/types/FlushContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/CloseContext.js
var require_CloseContext = __commonJS({
  "node_modules/elevenlabs/api/types/CloseContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/CloseSocket.js
var require_CloseSocket = __commonJS({
  "node_modules/elevenlabs/api/types/CloseSocket.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/AudioOutputMulti.js
var require_AudioOutputMulti = __commonJS({
  "node_modules/elevenlabs/api/types/AudioOutputMulti.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/FinalOutputMulti.js
var require_FinalOutputMulti = __commonJS({
  "node_modules/elevenlabs/api/types/FinalOutputMulti.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/KeepContextAlive.js
var require_KeepContextAlive = __commonJS({
  "node_modules/elevenlabs/api/types/KeepContextAlive.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/InitialiseContext.js
var require_InitialiseContext = __commonJS({
  "node_modules/elevenlabs/api/types/InitialiseContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/TextToSpeechApplyTextNormalizationEnum.js
var require_TextToSpeechApplyTextNormalizationEnum = __commonJS({
  "node_modules/elevenlabs/api/types/TextToSpeechApplyTextNormalizationEnum.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TextToSpeechApplyTextNormalizationEnum = void 0;
    exports.TextToSpeechApplyTextNormalizationEnum = {
      Auto: "auto",
      On: "on",
      Off: "off"
    };
  }
});

// node_modules/elevenlabs/api/types/TextToSpeechOutputFormatEnum.js
var require_TextToSpeechOutputFormatEnum = __commonJS({
  "node_modules/elevenlabs/api/types/TextToSpeechOutputFormatEnum.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TextToSpeechOutputFormatEnum = void 0;
    exports.TextToSpeechOutputFormatEnum = {
      Mp32205032: "mp3_22050_32",
      Mp34410032: "mp3_44100_32",
      Mp34410064: "mp3_44100_64",
      Mp34410096: "mp3_44100_96",
      Mp344100128: "mp3_44100_128",
      Mp344100192: "mp3_44100_192",
      Pcm8000: "pcm_8000",
      Pcm16000: "pcm_16000",
      Pcm22050: "pcm_22050",
      Pcm24000: "pcm_24000",
      Pcm44100: "pcm_44100",
      Ulaw8000: "ulaw_8000",
      Alaw8000: "alaw_8000",
      Opus4800032: "opus_48000_32",
      Opus4800064: "opus_48000_64",
      Opus4800096: "opus_48000_96",
      Opus48000128: "opus_48000_128",
      Opus48000192: "opus_48000_192"
    };
  }
});

// node_modules/elevenlabs/api/types/StreamInputQueryParametersOptimizeStreamingLatency.js
var require_StreamInputQueryParametersOptimizeStreamingLatency = __commonJS({
  "node_modules/elevenlabs/api/types/StreamInputQueryParametersOptimizeStreamingLatency.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.StreamInputQueryParametersOptimizeStreamingLatency = void 0;
    exports.StreamInputQueryParametersOptimizeStreamingLatency = {
      Zero: "0",
      One: "1",
      Two: "2",
      Three: "3",
      Four: "4"
    };
  }
});

// node_modules/elevenlabs/api/types/StreamInputQueryParameters.js
var require_StreamInputQueryParameters = __commonJS({
  "node_modules/elevenlabs/api/types/StreamInputQueryParameters.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/elevenlabs/api/types/index.js
var require_types17 = __commonJS({
  "node_modules/elevenlabs/api/types/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_AsrConversationalConfig(), exports);
    __exportStar(require_AsrInputFormat(), exports);
    __exportStar(require_AsrProvider(), exports);
    __exportStar(require_AsrQuality(), exports);
    __exportStar(require_AddChapterResponseModel(), exports);
    __exportStar(require_AddKnowledgeBaseResponseModel(), exports);
    __exportStar(require_AddProjectResponseModel(), exports);
    __exportStar(require_AddPronunciationDictionaryResponseModelPermissionOnResource(), exports);
    __exportStar(require_AddPronunciationDictionaryResponseModel(), exports);
    __exportStar(require_AddVoiceIvcResponseModel(), exports);
    __exportStar(require_AddVoiceResponseModel(), exports);
    __exportStar(require_AddWorkspaceGroupMemberResponseModel(), exports);
    __exportStar(require_AddWorkspaceInviteResponseModel(), exports);
    __exportStar(require_AdditionalFormatResponseModel(), exports);
    __exportStar(require_AdditionalFormats(), exports);
    __exportStar(require_AgentBan(), exports);
    __exportStar(require_AgentCallLimits(), exports);
    __exportStar(require_AgentConfig(), exports);
    __exportStar(require_AgentConfigDbModel(), exports);
    __exportStar(require_AgentConfigOverride(), exports);
    __exportStar(require_AgentConfigOverrideConfig(), exports);
    __exportStar(require_AgentMetadataResponseModel(), exports);
    __exportStar(require_AgentPlatformSettingsRequestModel(), exports);
    __exportStar(require_AgentPlatformSettingsResponseModel(), exports);
    __exportStar(require_AgentSimulatedChatTestResponseModel(), exports);
    __exportStar(require_AgentSummaryResponseModel(), exports);
    __exportStar(require_AgentTransfer(), exports);
    __exportStar(require_AgentWorkspaceOverridesInput(), exports);
    __exportStar(require_AgentWorkspaceOverridesOutput(), exports);
    __exportStar(require_AllowlistItem(), exports);
    __exportStar(require_ArrayJsonSchemaPropertyInputItems(), exports);
    __exportStar(require_ArrayJsonSchemaPropertyInput(), exports);
    __exportStar(require_ArrayJsonSchemaPropertyOutputItems(), exports);
    __exportStar(require_ArrayJsonSchemaPropertyOutput(), exports);
    __exportStar(require_AudioNativeCreateProjectResponseModel(), exports);
    __exportStar(require_AudioNativeEditContentResponseModel(), exports);
    __exportStar(require_AudioNativeProjectSettingsResponseModelStatus(), exports);
    __exportStar(require_AudioNativeProjectSettingsResponseModel(), exports);
    __exportStar(require_AudioWithTimestampsResponse(), exports);
    __exportStar(require_AuthSettings(), exports);
    __exportStar(require_AuthorizationMethod(), exports);
    __exportStar(require_BanReasonType(), exports);
    __exportStar(require_BatchCallDetailedResponse(), exports);
    __exportStar(require_BatchCallRecipientStatus(), exports);
    __exportStar(require_BatchCallStatus(), exports);
    __exportStar(require_BodyAddChapterToAProjectV1ProjectsProjectIdChaptersAddPost(), exports);
    __exportStar(require_BodyAddProjectV1ProjectsAddPostTargetAudience(), exports);
    __exportStar(require_BodyAddProjectV1ProjectsAddPostFiction(), exports);
    __exportStar(require_BodyAddProjectV1ProjectsAddPostApplyTextNormalization(), exports);
    __exportStar(require_BodyAddProjectV1ProjectsAddPostSourceType(), exports);
    __exportStar(require_AddProjectRequest(), exports);
    __exportStar(require_BodyAddToKnowledgeBaseV1ConvaiAddToKnowledgeBasePost(), exports);
    __exportStar(require_BodyAddToKnowledgeBaseV1ConvaiAgentsAgentIdAddToKnowledgeBasePost(), exports);
    __exportStar(require_CreatePreviouslyGeneratedVoiceRequest(), exports);
    __exportStar(require_BodyCreatePodcastV1ProjectsPodcastCreatePostMode(), exports);
    __exportStar(require_BodyCreatePodcastV1ProjectsPodcastCreatePostSourceItem(), exports);
    __exportStar(require_BodyCreatePodcastV1ProjectsPodcastCreatePostSource(), exports);
    __exportStar(require_BodyCreatePodcastV1ProjectsPodcastCreatePostQualityPreset(), exports);
    __exportStar(require_BodyCreatePodcastV1ProjectsPodcastCreatePostDurationScale(), exports);
    __exportStar(require_BodyCreatePodcastV1ProjectsPodcastCreatePost(), exports);
    __exportStar(require_BodyEditBasicProjectInfoV1ProjectsProjectIdPost(), exports);
    __exportStar(require_BodyEditChapterV1ProjectsProjectIdChaptersChapterIdPatch(), exports);
    __exportStar(require_BodyEditProjectContentV1ProjectsProjectIdContentPost(), exports);
    __exportStar(require_BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePostGender(), exports);
    __exportStar(require_BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePostAge(), exports);
    __exportStar(require_GenerateVoiceRequest(), exports);
    __exportStar(require_BodyRetrieveVoiceSampleAudioV1VoicesPvcVoiceIdSamplesSampleIdAudioGet(), exports);
    __exportStar(require_BodyStreamChapterAudioV1ProjectsProjectIdChaptersChapterIdSnapshotsChapterSnapshotIdStreamPost(), exports);
    __exportStar(require_BodyStreamProjectAudioV1ProjectsProjectIdSnapshotsProjectSnapshotIdStreamPost(), exports);
    __exportStar(require_UpdatePronunciationDictionariesRequest(), exports);
    __exportStar(require_BreakdownTypes(), exports);
    __exportStar(require_ChapterContentBlockExtendableNodeResponseModel(), exports);
    __exportStar(require_ChapterContentBlockInputModel(), exports);
    __exportStar(require_ChapterContentBlockResponseModelNodesItem(), exports);
    __exportStar(require_ChapterContentBlockResponseModel(), exports);
    __exportStar(require_ChapterContentBlockTtsNodeResponseModel(), exports);
    __exportStar(require_ChapterContentInputModel(), exports);
    __exportStar(require_ChapterContentParagraphTtsNodeInputModel(), exports);
    __exportStar(require_ChapterContentResponseModel(), exports);
    __exportStar(require_ChapterState(), exports);
    __exportStar(require_ChapterResponse(), exports);
    __exportStar(require_ChapterSnapshotExtendedResponseModel(), exports);
    __exportStar(require_ChapterSnapshotResponse(), exports);
    __exportStar(require_ChapterSnapshotsResponse(), exports);
    __exportStar(require_ChapterStatisticsResponse(), exports);
    __exportStar(require_ChapterWithContentResponseModelState(), exports);
    __exportStar(require_ChapterWithContentResponseModel(), exports);
    __exportStar(require_CharacterAlignmentModel(), exports);
    __exportStar(require_CharacterAlignmentResponseModel(), exports);
    __exportStar(require_ClientEvent(), exports);
    __exportStar(require_ClientToolConfigInput(), exports);
    __exportStar(require_ClientToolConfigOutput(), exports);
    __exportStar(require_ConvAiSecretLocator(), exports);
    __exportStar(require_ConvAiStoredSecretDependenciesToolsItem(), exports);
    __exportStar(require_ConvAiStoredSecretDependenciesAgentToolsItem(), exports);
    __exportStar(require_ConvAiStoredSecretDependencies(), exports);
    __exportStar(require_ConvAiWebhooks(), exports);
    __exportStar(require_ConvAiWorkspaceStoredSecretConfig(), exports);
    __exportStar(require_ConversationChargingCommonModel(), exports);
    __exportStar(require_ConversationConfig(), exports);
    __exportStar(require_ConversationConfigClientOverrideInput(), exports);
    __exportStar(require_ConversationConfigClientOverrideOutput(), exports);
    __exportStar(require_ConversationConfigClientOverrideConfigInput(), exports);
    __exportStar(require_ConversationConfigClientOverrideConfigOutput(), exports);
    __exportStar(require_ConversationDeletionSettings(), exports);
    __exportStar(require_ConversationHistoryAnalysisCommonModel(), exports);
    __exportStar(require_ConversationHistoryBatchCallModel(), exports);
    __exportStar(require_ConversationHistoryErrorCommonModel(), exports);
    __exportStar(require_ConversationHistoryEvaluationCriteriaResultCommonModel(), exports);
    __exportStar(require_ConversationHistoryFeedbackCommonModel(), exports);
    __exportStar(require_ConversationHistoryMetadataCommonModelPhoneCall(), exports);
    __exportStar(require_ConversationHistoryMetadataCommonModel(), exports);
    __exportStar(require_ConversationHistoryRagUsageCommonModel(), exports);
    __exportStar(require_ConversationHistorySipTrunkingPhoneCallModelDirection(), exports);
    __exportStar(require_ConversationHistorySipTrunkingPhoneCallModel(), exports);
    __exportStar(require_ConversationHistoryTranscriptCommonModelInputRole(), exports);
    __exportStar(require_ConversationHistoryTranscriptCommonModelInput(), exports);
    __exportStar(require_ConversationHistoryTranscriptCommonModelOutputRole(), exports);
    __exportStar(require_ConversationHistoryTranscriptCommonModelOutput(), exports);
    __exportStar(require_ConversationHistoryTranscriptToolCallClientDetails(), exports);
    __exportStar(require_ConversationHistoryTranscriptToolCallCommonModelToolDetails(), exports);
    __exportStar(require_ConversationHistoryTranscriptToolCallCommonModel(), exports);
    __exportStar(require_ConversationHistoryTranscriptToolCallWebhookDetails(), exports);
    __exportStar(require_ConversationHistoryTranscriptToolResultCommonModel(), exports);
    __exportStar(require_ConversationHistoryTwilioPhoneCallModelDirection(), exports);
    __exportStar(require_ConversationHistoryTwilioPhoneCallModel(), exports);
    __exportStar(require_ConversationInitiationClientDataConfigInput(), exports);
    __exportStar(require_ConversationInitiationClientDataConfigOutput(), exports);
    __exportStar(require_ConversationInitiationClientDataInternalDynamicVariablesValue(), exports);
    __exportStar(require_ConversationInitiationClientDataInternal(), exports);
    __exportStar(require_ConversationInitiationClientDataRequestInputDynamicVariablesValue(), exports);
    __exportStar(require_ConversationInitiationClientDataRequestInput(), exports);
    __exportStar(require_ConversationInitiationClientDataRequestOutputDynamicVariablesValue(), exports);
    __exportStar(require_ConversationInitiationClientDataRequestOutput(), exports);
    __exportStar(require_ConversationInitiationClientDataWebhookRequestHeadersValue(), exports);
    __exportStar(require_ConversationInitiationClientDataWebhook(), exports);
    __exportStar(require_ConversationSignedUrlResponseModel(), exports);
    __exportStar(require_ConversationSimulationSpecification(), exports);
    __exportStar(require_ConversationSummaryResponseModelStatus(), exports);
    __exportStar(require_ConversationSummaryResponseModel(), exports);
    __exportStar(require_ConversationTokenDbModel(), exports);
    __exportStar(require_ConversationTokenPurpose(), exports);
    __exportStar(require_ConversationTurnMetrics(), exports);
    __exportStar(require_ConversationalConfig(), exports);
    __exportStar(require_ConvertChapterResponseModel(), exports);
    __exportStar(require_ConvertProjectResponseModel(), exports);
    __exportStar(require_CreateAgentResponseModel(), exports);
    __exportStar(require_CreatePhoneNumberResponseModel(), exports);
    __exportStar(require_CreatePronunciationDictionaryResponseModel(), exports);
    __exportStar(require_CreateSipTrunkPhoneNumberRequest(), exports);
    __exportStar(require_CreateTwilioPhoneNumberRequest(), exports);
    __exportStar(require_CustomLlm(), exports);
    __exportStar(require_DashboardCallSuccessChartModel(), exports);
    __exportStar(require_DashboardCriteriaChartModel(), exports);
    __exportStar(require_DashboardDataCollectionChartModel(), exports);
    __exportStar(require_DataCollectionResultCommonModel(), exports);
    __exportStar(require_DeleteChapterResponseModel(), exports);
    __exportStar(require_DeleteDubbingResponseModel(), exports);
    __exportStar(require_DeleteHistoryItemResponse(), exports);
    __exportStar(require_DeleteProjectResponseModel(), exports);
    __exportStar(require_DeleteSampleResponse(), exports);
    __exportStar(require_DeleteVoiceResponseModel(), exports);
    __exportStar(require_DeleteVoiceSampleResponseModel(), exports);
    __exportStar(require_DeleteWorkspaceGroupMemberResponseModel(), exports);
    __exportStar(require_DeleteWorkspaceInviteResponseModel(), exports);
    __exportStar(require_DeleteWorkspaceMemberResponseModel(), exports);
    __exportStar(require_DependentAvailableAgentIdentifierAccessLevel(), exports);
    __exportStar(require_DependentAvailableAgentIdentifier(), exports);
    __exportStar(require_DependentAvailableAgentToolIdentifierAccessLevel(), exports);
    __exportStar(require_DependentAvailableAgentToolIdentifier(), exports);
    __exportStar(require_DependentAvailableToolIdentifierAccessLevel(), exports);
    __exportStar(require_DependentAvailableToolIdentifier(), exports);
    __exportStar(require_DependentPhoneNumberIdentifier(), exports);
    __exportStar(require_DependentUnknownAgentIdentifier(), exports);
    __exportStar(require_DependentUnknownAgentToolIdentifier(), exports);
    __exportStar(require_DependentUnknownToolIdentifier(), exports);
    __exportStar(require_DoDubbingResponse(), exports);
    __exportStar(require_DocumentUsageModeEnum(), exports);
    __exportStar(require_DocxExportOptions(), exports);
    __exportStar(require_DubbedSegment(), exports);
    __exportStar(require_DubbingMediaMetadata(), exports);
    __exportStar(require_DubbingMediaReference(), exports);
    __exportStar(require_DubbingMetadataResponse(), exports);
    __exportStar(require_DubbingRenderResponseModel(), exports);
    __exportStar(require_DubbingResource(), exports);
    __exportStar(require_DynamicVariablesConfigDynamicVariablePlaceholdersValue(), exports);
    __exportStar(require_DynamicVariablesConfig(), exports);
    __exportStar(require_EditChapterResponseModel(), exports);
    __exportStar(require_EditProjectResponseModel(), exports);
    __exportStar(require_EditVoiceResponseModel(), exports);
    __exportStar(require_EditVoiceSettingsResponseModel(), exports);
    __exportStar(require_EmbedVariant(), exports);
    __exportStar(require_EmbeddingModelEnum(), exports);
    __exportStar(require_EndCallToolConfig(), exports);
    __exportStar(require_EvaluationSettings(), exports);
    __exportStar(require_EvaluationSuccessResult(), exports);
    __exportStar(require_ExportOptions(), exports);
    __exportStar(require_ExtendedSubscriptionResponseModelCurrency(), exports);
    __exportStar(require_ExtendedSubscriptionResponseModelStatus(), exports);
    __exportStar(require_ExtendedSubscriptionResponseModelBillingPeriod(), exports);
    __exportStar(require_ExtendedSubscriptionResponseModelCharacterRefreshPeriod(), exports);
    __exportStar(require_Subscription(), exports);
    __exportStar(require_FeedbackItem(), exports);
    __exportStar(require_FineTuningResponseModelStateValue(), exports);
    __exportStar(require_FineTuningResponse(), exports);
    __exportStar(require_ForcedAlignmentCharacterResponseModel(), exports);
    __exportStar(require_ForcedAlignmentResponseModel(), exports);
    __exportStar(require_ForcedAlignmentWordResponseModel(), exports);
    __exportStar(require_GetAgentEmbedResponseModel(), exports);
    __exportStar(require_GetAgentLinkResponseModel(), exports);
    __exportStar(require_GetAgentResponseModelPhoneNumbersItem(), exports);
    __exportStar(require_GetAgentResponseModel(), exports);
    __exportStar(require_GetAgentsPageResponseModel(), exports);
    __exportStar(require_GetAudioNativeProjectSettingsResponseModel(), exports);
    __exportStar(require_GetChaptersResponse(), exports);
    __exportStar(require_GetConvAiDashboardSettingsResponseModelChartsItem(), exports);
    __exportStar(require_GetConvAiDashboardSettingsResponseModel(), exports);
    __exportStar(require_GetConvAiSettingsResponseModel(), exports);
    __exportStar(require_GetConversationResponseModelStatus(), exports);
    __exportStar(require_GetConversationResponseModel(), exports);
    __exportStar(require_GetConversationsPageResponseModel(), exports);
    __exportStar(require_GetKnowledgeBaseDependentAgentsResponseModelAgentsItem(), exports);
    __exportStar(require_GetKnowledgeBaseDependentAgentsResponseModel(), exports);
    __exportStar(require_GetKnowledgeBaseFileResponseModel(), exports);
    __exportStar(require_GetKnowledgeBaseListResponseModelDocumentsItem(), exports);
    __exportStar(require_GetKnowledgeBaseListResponseModel(), exports);
    __exportStar(require_GetKnowledgeBaseSummaryFileResponseModelDependentAgentsItem(), exports);
    __exportStar(require_GetKnowledgeBaseSummaryFileResponseModel(), exports);
    __exportStar(require_GetKnowledgeBaseSummaryTextResponseModelDependentAgentsItem(), exports);
    __exportStar(require_GetKnowledgeBaseSummaryTextResponseModel(), exports);
    __exportStar(require_GetKnowledgeBaseSummaryUrlResponseModelDependentAgentsItem(), exports);
    __exportStar(require_GetKnowledgeBaseSummaryUrlResponseModel(), exports);
    __exportStar(require_GetKnowledgeBaseTextResponseModel(), exports);
    __exportStar(require_GetKnowledgeBaseUrlResponseModel(), exports);
    __exportStar(require_GetLibraryVoicesResponse(), exports);
    __exportStar(require_GetPhoneNumberSipTrunkResponseModel(), exports);
    __exportStar(require_GetPhoneNumberTwilioResponseModel(), exports);
    __exportStar(require_GetProjectsResponse(), exports);
    __exportStar(require_GetPronunciationDictionariesMetadataResponseModel(), exports);
    __exportStar(require_GetPronunciationDictionaryMetadataResponseModelPermissionOnResource(), exports);
    __exportStar(require_GetPronunciationDictionaryMetadataResponse(), exports);
    __exportStar(require_GetSpeechHistoryResponse(), exports);
    __exportStar(require_GetVoicesResponse(), exports);
    __exportStar(require_GetVoicesV2Response(), exports);
    __exportStar(require_GetWorkspaceSecretsResponseModel(), exports);
    __exportStar(require_HttpValidationError(), exports);
    __exportStar(require_HistoryAlignmentResponseModel(), exports);
    __exportStar(require_HistoryAlignmentsResponseModel(), exports);
    __exportStar(require_HtmlExportOptions(), exports);
    __exportStar(require_ImageAvatar(), exports);
    __exportStar(require_InvoiceResponse(), exports);
    __exportStar(require_KnowledgeBaseDocumentChunkResponseModel(), exports);
    __exportStar(require_KnowledgeBaseDocumentMetadataResponseModel(), exports);
    __exportStar(require_KnowledgeBaseDocumentType(), exports);
    __exportStar(require_KnowledgeBaseLocator(), exports);
    __exportStar(require_Llm(), exports);
    __exportStar(require_LlmCategoryUsage(), exports);
    __exportStar(require_LlmInputOutputTokensUsage(), exports);
    __exportStar(require_LlmTokensCategoryUsage(), exports);
    __exportStar(require_LlmUsageInput(), exports);
    __exportStar(require_LlmUsageOutput(), exports);
    __exportStar(require_LanguageAddedResponse(), exports);
    __exportStar(require_LanguageDetectionToolConfig(), exports);
    __exportStar(require_LanguagePresetInput(), exports);
    __exportStar(require_LanguagePresetOutput(), exports);
    __exportStar(require_LanguagePresetTranslation(), exports);
    __exportStar(require_LanguageResponse(), exports);
    __exportStar(require_LibraryVoiceResponseModelCategory(), exports);
    __exportStar(require_LibraryVoiceResponse(), exports);
    __exportStar(require_LiteralJsonSchemaPropertyType(), exports);
    __exportStar(require_LiteralJsonSchemaPropertyConstantValue(), exports);
    __exportStar(require_LiteralJsonSchemaProperty(), exports);
    __exportStar(require_McpToolConfigInput(), exports);
    __exportStar(require_McpToolConfigOutput(), exports);
    __exportStar(require_ManualVerificationFileResponse(), exports);
    __exportStar(require_ManualVerificationResponse(), exports);
    __exportStar(require_MetricRecord(), exports);
    __exportStar(require_MetricType(), exports);
    __exportStar(require_ModelRatesResponseModel(), exports);
    __exportStar(require_ModelResponseModelConcurrencyGroup(), exports);
    __exportStar(require_Model(), exports);
    __exportStar(require_ModerationStatusResponseModelSafetyStatus(), exports);
    __exportStar(require_ModerationStatusResponseModelWarningStatus(), exports);
    __exportStar(require_ModerationStatusResponseModel(), exports);
    __exportStar(require_ObjectJsonSchemaPropertyInputPropertiesValue(), exports);
    __exportStar(require_ObjectJsonSchemaPropertyInput(), exports);
    __exportStar(require_ObjectJsonSchemaPropertyOutputPropertiesValue(), exports);
    __exportStar(require_ObjectJsonSchemaPropertyOutput(), exports);
    __exportStar(require_OrbAvatar(), exports);
    __exportStar(require_OutboundCallRecipientResponseModel(), exports);
    __exportStar(require_PdfExportOptions(), exports);
    __exportStar(require_PhoneNumberAgentInfo(), exports);
    __exportStar(require_PhoneNumberTransfer(), exports);
    __exportStar(require_PodcastBulletinMode(), exports);
    __exportStar(require_PodcastBulletinModeData(), exports);
    __exportStar(require_PodcastConversationMode(), exports);
    __exportStar(require_PodcastConversationModeData(), exports);
    __exportStar(require_PodcastProjectResponseModel(), exports);
    __exportStar(require_PodcastTextSource(), exports);
    __exportStar(require_PodcastUrlSource(), exports);
    __exportStar(require_PostAgentAvatarResponseModel(), exports);
    __exportStar(require_PostWorkspaceSecretResponseModel(), exports);
    __exportStar(require_PrivacyConfig(), exports);
    __exportStar(require_ProjectCreationMetaResponseModelStatus(), exports);
    __exportStar(require_ProjectCreationMetaResponseModelType(), exports);
    __exportStar(require_ProjectCreationMetaResponseModel(), exports);
    __exportStar(require_ProjectExtendedResponseModelTargetAudience(), exports);
    __exportStar(require_ProjectState(), exports);
    __exportStar(require_ProjectExtendedResponseModelAccessLevel(), exports);
    __exportStar(require_ProjectExtendedResponseModelFiction(), exports);
    __exportStar(require_ProjectExtendedResponseModelSourceType(), exports);
    __exportStar(require_ProjectExtendedResponseModelQualityPreset(), exports);
    __exportStar(require_ProjectExtendedResponseModelApplyTextNormalization(), exports);
    __exportStar(require_ProjectExtendedResponse(), exports);
    __exportStar(require_ProjectResponseModelTargetAudience(), exports);
    __exportStar(require_ProjectResponseModelAccessLevel(), exports);
    __exportStar(require_ProjectResponseModelFiction(), exports);
    __exportStar(require_ProjectResponseModelSourceType(), exports);
    __exportStar(require_ProjectResponse(), exports);
    __exportStar(require_ProjectSnapshotExtendedResponseModel(), exports);
    __exportStar(require_ProjectSnapshotResponse(), exports);
    __exportStar(require_ProjectSnapshotsResponse(), exports);
    __exportStar(require_PromptAgentInputToolsItem(), exports);
    __exportStar(require_PromptAgent(), exports);
    __exportStar(require_PromptAgentOutputToolsItem(), exports);
    __exportStar(require_PromptAgentDbModelToolsItem(), exports);
    __exportStar(require_PromptAgentDbModel(), exports);
    __exportStar(require_PromptAgentOverride(), exports);
    __exportStar(require_PromptAgentOverrideConfig(), exports);
    __exportStar(require_PromptEvaluationCriteria(), exports);
    __exportStar(require_PronunciationDictionaryAliasRuleRequestModel(), exports);
    __exportStar(require_PronunciationDictionaryLocatorResponseModel(), exports);
    __exportStar(require_PronunciationDictionaryPhonemeRuleRequestModel(), exports);
    __exportStar(require_PronunciationDictionaryRulesResponseModel(), exports);
    __exportStar(require_PronunciationDictionaryVersionLocator(), exports);
    __exportStar(require_PronunciationDictionaryVersionLocatorRequestModel(), exports);
    __exportStar(require_PronunciationDictionaryVersionResponseModelPermissionOnResource(), exports);
    __exportStar(require_PronunciationDictionaryVersionResponseModel(), exports);
    __exportStar(require_PydanticPronunciationDictionaryVersionLocator(), exports);
    __exportStar(require_QueryParamsJsonSchema(), exports);
    __exportStar(require_RagIndexResponseModel(), exports);
    __exportStar(require_RagIndexStatus(), exports);
    __exportStar(require_RagChunkMetadata(), exports);
    __exportStar(require_RagConfig(), exports);
    __exportStar(require_RagRetrievalInfo(), exports);
    __exportStar(require_ReaderResourceResponseModelResourceType(), exports);
    __exportStar(require_ReaderResourceResponseModel(), exports);
    __exportStar(require_RecordingResponse(), exports);
    __exportStar(require_RenderStatus(), exports);
    __exportStar(require_Render(), exports);
    __exportStar(require_RenderType(), exports);
    __exportStar(require_RequestPvcManualVerificationResponseModel(), exports);
    __exportStar(require_ResourceAccessInfoRole(), exports);
    __exportStar(require_ResourceAccessInfo(), exports);
    __exportStar(require_ResourceMetadataResponseModel(), exports);
    __exportStar(require_SipMediaEncryptionEnum(), exports);
    __exportStar(require_SipTrunkConfigResponseModel(), exports);
    __exportStar(require_SipTrunkCredentials(), exports);
    __exportStar(require_SipTrunkOutboundCallResponse(), exports);
    __exportStar(require_SipTrunkTransportEnum(), exports);
    __exportStar(require_SafetyCommonModel(), exports);
    __exportStar(require_SafetyEvaluation(), exports);
    __exportStar(require_SafetyResponseModel(), exports);
    __exportStar(require_SafetyRule(), exports);
    __exportStar(require_VoiceSample(), exports);
    __exportStar(require_SecretDependencyType(), exports);
    __exportStar(require_SegmentCreateResponse(), exports);
    __exportStar(require_SegmentDeleteResponse(), exports);
    __exportStar(require_SegmentDubResponse(), exports);
    __exportStar(require_SegmentTranscriptionResponse(), exports);
    __exportStar(require_SegmentTranslationResponse(), exports);
    __exportStar(require_SegmentUpdateResponse(), exports);
    __exportStar(require_SegmentedJsonExportOptions(), exports);
    __exportStar(require_ShareOptionResponseModelType(), exports);
    __exportStar(require_ShareOptionResponseModel(), exports);
    __exportStar(require_SimilarVoiceCategory(), exports);
    __exportStar(require_SimilarVoice(), exports);
    __exportStar(require_SimilarVoicesForSpeakerResponse(), exports);
    __exportStar(require_SpeakerAudioResponseModel(), exports);
    __exportStar(require_SpeakerResponseModel(), exports);
    __exportStar(require_SpeakerSegment(), exports);
    __exportStar(require_SpeakerSeparationResponseModelStatus(), exports);
    __exportStar(require_SpeakerSeparationResponseModel(), exports);
    __exportStar(require_SpeakerTrack(), exports);
    __exportStar(require_SpeakerUpdatedResponse(), exports);
    __exportStar(require_SpeechHistoryItemResponseModelVoiceCategory(), exports);
    __exportStar(require_SpeechHistoryItemResponseModelSource(), exports);
    __exportStar(require_SpeechHistoryItemResponse(), exports);
    __exportStar(require_SpeechToTextCharacterResponseModel(), exports);
    __exportStar(require_SpeechToTextChunkResponseModel(), exports);
    __exportStar(require_SpeechToTextWordResponseModelType(), exports);
    __exportStar(require_SpeechToTextWordResponseModel(), exports);
    __exportStar(require_SrtExportOptions(), exports);
    __exportStar(require_StartPvcVoiceTrainingResponseModel(), exports);
    __exportStar(require_StartSpeakerSeparationResponseModel(), exports);
    __exportStar(require_StreamingAudioChunkWithTimestampsResponse(), exports);
    __exportStar(require_SubscriptionExtrasResponseModel(), exports);
    __exportStar(require_SubscriptionResponseModelCurrency(), exports);
    __exportStar(require_SubscriptionStatus(), exports);
    __exportStar(require_SubscriptionResponseModelBillingPeriod(), exports);
    __exportStar(require_SubscriptionResponseModelCharacterRefreshPeriod(), exports);
    __exportStar(require_SubscriptionResponse(), exports);
    __exportStar(require_SubscriptionUsageResponseModel(), exports);
    __exportStar(require_SystemToolConfigInputParams(), exports);
    __exportStar(require_SystemToolConfigInput(), exports);
    __exportStar(require_SystemToolConfigOutputParams(), exports);
    __exportStar(require_SystemToolConfigOutput(), exports);
    __exportStar(require_TtsConversationalConfig(), exports);
    __exportStar(require_TtsConversationalConfigOverride(), exports);
    __exportStar(require_TtsConversationalConfigOverrideConfig(), exports);
    __exportStar(require_TtsConversationalModel(), exports);
    __exportStar(require_TtsOptimizeStreamingLatency(), exports);
    __exportStar(require_TtsOutputFormat(), exports);
    __exportStar(require_TelephonyProvider(), exports);
    __exportStar(require_ToolMockConfig(), exports);
    __exportStar(require_TransferToAgentToolConfig(), exports);
    __exportStar(require_TransferToNumberToolConfig(), exports);
    __exportStar(require_TurnConfig(), exports);
    __exportStar(require_TurnMode(), exports);
    __exportStar(require_TwilioOutboundCallResponse(), exports);
    __exportStar(require_TxtExportOptions(), exports);
    __exportStar(require_UrlAvatar(), exports);
    __exportStar(require_UpdateWorkspaceMemberResponseModel(), exports);
    __exportStar(require_UsageAggregationInterval(), exports);
    __exportStar(require_UsageCharactersResponseModel(), exports);
    __exportStar(require_UserFeedback(), exports);
    __exportStar(require_UserFeedbackScore(), exports);
    __exportStar(require_User(), exports);
    __exportStar(require_UtteranceResponseModel(), exports);
    __exportStar(require_ValidationErrorLocItem(), exports);
    __exportStar(require_ValidationError(), exports);
    __exportStar(require_VerificationAttemptResponse(), exports);
    __exportStar(require_VerifiedVoiceLanguageResponseModel(), exports);
    __exportStar(require_VerifyPvcVoiceCaptchaResponseModel(), exports);
    __exportStar(require_VoiceGenerationParameterOptionResponse(), exports);
    __exportStar(require_VoiceGenerationParameterResponse(), exports);
    __exportStar(require_VoicePreviewResponseModel(), exports);
    __exportStar(require_VoiceDesignPreviewResponse(), exports);
    __exportStar(require_VoiceResponseModelCategory(), exports);
    __exportStar(require_VoiceResponseModelSafetyControl(), exports);
    __exportStar(require_Voice(), exports);
    __exportStar(require_VoiceSamplePreviewResponseModel(), exports);
    __exportStar(require_VoiceSampleVisualWaveformResponseModel(), exports);
    __exportStar(require_VoiceSettings(), exports);
    __exportStar(require_VoiceSharingModerationCheckResponseModel(), exports);
    __exportStar(require_VoiceSharingState(), exports);
    __exportStar(require_VoiceSharingResponseModelCategory(), exports);
    __exportStar(require_ReviewStatus(), exports);
    __exportStar(require_VoiceSharingResponse(), exports);
    __exportStar(require_VoiceVerificationResponse(), exports);
    __exportStar(require_WebhookToolApiSchemaConfigInputMethod(), exports);
    __exportStar(require_WebhookToolApiSchemaConfigInputRequestHeadersValue(), exports);
    __exportStar(require_WebhookToolApiSchemaConfigInput(), exports);
    __exportStar(require_WebhookToolApiSchemaConfigOutputMethod(), exports);
    __exportStar(require_WebhookToolApiSchemaConfigOutputRequestHeadersValue(), exports);
    __exportStar(require_WebhookToolApiSchemaConfigOutput(), exports);
    __exportStar(require_WebhookToolConfigInput(), exports);
    __exportStar(require_WebhookToolConfigOutput(), exports);
    __exportStar(require_WidgetConfigAvatar(), exports);
    __exportStar(require_WidgetConfig(), exports);
    __exportStar(require_WidgetConfigResponseModelAvatar(), exports);
    __exportStar(require_WidgetConfigResponseModel(), exports);
    __exportStar(require_WidgetExpandable(), exports);
    __exportStar(require_WidgetFeedbackMode(), exports);
    __exportStar(require_WorkspaceGroupByNameResponseModel(), exports);
    __exportStar(require_WorkspaceResourceType(), exports);
    __exportStar(require_OutputFormat(), exports);
    __exportStar(require_HistoryItemResponse(), exports);
    __exportStar(require_Age(), exports);
    __exportStar(require_Gender(), exports);
    __exportStar(require_AddSharingVoiceRequest(), exports);
    __exportStar(require_CreateAudioNativeProjectRequest(), exports);
    __exportStar(require_TextToSpeechStreamRequest(), exports);
    __exportStar(require_EditVoiceSettingsRequest(), exports);
    __exportStar(require_GetChaptersRequest(), exports);
    __exportStar(require_GetChapterRequest(), exports);
    __exportStar(require_DeleteChapterRequest(), exports);
    __exportStar(require_GetChapterSnapshotsRequest(), exports);
    __exportStar(require_GetProjectsRequest(), exports);
    __exportStar(require_GetProjectRequest(), exports);
    __exportStar(require_DeleteProjectRequest(), exports);
    __exportStar(require_CreateTranscriptRequest(), exports);
    __exportStar(require_RemoveMemberFromGroupRequest(), exports);
    __exportStar(require_UpdateAudioNativeProjectRequest(), exports);
    __exportStar(require_UpdateProjectRequest(), exports);
    __exportStar(require_UpdateChapterRequest(), exports);
    __exportStar(require_CharacterUsageResponse(), exports);
    __exportStar(require_GetPronunciationDictionariesResponse(), exports);
    __exportStar(require_GetPronunciationDictionaryResponse(), exports);
    __exportStar(require_InitializeConnection(), exports);
    __exportStar(require_CloseConnection(), exports);
    __exportStar(require_SendText(), exports);
    __exportStar(require_RealtimeVoiceSettings(), exports);
    __exportStar(require_GenerationConfig(), exports);
    __exportStar(require_AudioOutput(), exports);
    __exportStar(require_FinalOutput(), exports);
    __exportStar(require_NormalizedAlignment(), exports);
    __exportStar(require_Alignment(), exports);
    __exportStar(require_PronunciationDictionaryLocator(), exports);
    __exportStar(require_WebsocketTtsClientMessageMulti(), exports);
    __exportStar(require_WebsocketTtsServerMessageMulti(), exports);
    __exportStar(require_InitializeConnectionMulti(), exports);
    __exportStar(require_SendTextMulti(), exports);
    __exportStar(require_FlushContext(), exports);
    __exportStar(require_CloseContext(), exports);
    __exportStar(require_CloseSocket(), exports);
    __exportStar(require_AudioOutputMulti(), exports);
    __exportStar(require_FinalOutputMulti(), exports);
    __exportStar(require_KeepContextAlive(), exports);
    __exportStar(require_InitialiseContext(), exports);
    __exportStar(require_TextToSpeechApplyTextNormalizationEnum(), exports);
    __exportStar(require_TextToSpeechOutputFormatEnum(), exports);
    __exportStar(require_StreamInputQueryParametersOptimizeStreamingLatency(), exports);
    __exportStar(require_StreamInputQueryParameters(), exports);
  }
});

// node_modules/elevenlabs/core/json.js
var require_json = __commonJS({
  "node_modules/elevenlabs/core/json.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.toJson = void 0;
    exports.fromJson = fromJson;
    var toJson = (value, replacer, space) => {
      return JSON.stringify(value, replacer, space);
    };
    exports.toJson = toJson;
    function fromJson(text, reviver) {
      return JSON.parse(text, reviver);
    }
  }
});

// node_modules/elevenlabs/errors/ElevenLabsError.js
var require_ElevenLabsError = __commonJS({
  "node_modules/elevenlabs/errors/ElevenLabsError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ElevenLabsError = void 0;
    var json_1 = require_json();
    var ElevenLabsError = class _ElevenLabsError extends Error {
      constructor({ message, statusCode, body }) {
        super(buildMessage({ message, statusCode, body }));
        Object.setPrototypeOf(this, _ElevenLabsError.prototype);
        if (statusCode != null) {
          this.statusCode = statusCode;
        }
        if (body !== void 0) {
          this.body = body;
        }
      }
    };
    exports.ElevenLabsError = ElevenLabsError;
    function buildMessage({ message, statusCode, body }) {
      let lines = [];
      if (message != null) {
        lines.push(message);
      }
      if (statusCode != null) {
        lines.push(`Status code: ${statusCode.toString()}`);
      }
      if (body != null) {
        lines.push(`Body: ${(0, json_1.toJson)(body, void 0, 2)}`);
      }
      return lines.join("\n");
    }
  }
});

// node_modules/elevenlabs/errors/ElevenLabsTimeoutError.js
var require_ElevenLabsTimeoutError = __commonJS({
  "node_modules/elevenlabs/errors/ElevenLabsTimeoutError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ElevenLabsTimeoutError = void 0;
    var ElevenLabsTimeoutError = class _ElevenLabsTimeoutError extends Error {
      constructor(message) {
        super(message);
        Object.setPrototypeOf(this, _ElevenLabsTimeoutError.prototype);
      }
    };
    exports.ElevenLabsTimeoutError = ElevenLabsTimeoutError;
  }
});

// node_modules/elevenlabs/errors/index.js
var require_errors = __commonJS({
  "node_modules/elevenlabs/errors/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ElevenLabsTimeoutError = exports.ElevenLabsError = void 0;
    var ElevenLabsError_1 = require_ElevenLabsError();
    Object.defineProperty(exports, "ElevenLabsError", { enumerable: true, get: function() {
      return ElevenLabsError_1.ElevenLabsError;
    } });
    var ElevenLabsTimeoutError_1 = require_ElevenLabsTimeoutError();
    Object.defineProperty(exports, "ElevenLabsTimeoutError", { enumerable: true, get: function() {
      return ElevenLabsTimeoutError_1.ElevenLabsTimeoutError;
    } });
  }
});

// node_modules/elevenlabs/api/errors/UnprocessableEntityError.js
var require_UnprocessableEntityError = __commonJS({
  "node_modules/elevenlabs/api/errors/UnprocessableEntityError.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UnprocessableEntityError = void 0;
    var errors = __importStar(require_errors());
    var UnprocessableEntityError = class _UnprocessableEntityError extends errors.ElevenLabsError {
      constructor(body) {
        super({
          message: "UnprocessableEntityError",
          statusCode: 422,
          body
        });
        Object.setPrototypeOf(this, _UnprocessableEntityError.prototype);
      }
    };
    exports.UnprocessableEntityError = UnprocessableEntityError;
  }
});

// node_modules/elevenlabs/api/errors/BadRequestError.js
var require_BadRequestError = __commonJS({
  "node_modules/elevenlabs/api/errors/BadRequestError.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BadRequestError = void 0;
    var errors = __importStar(require_errors());
    var BadRequestError = class _BadRequestError extends errors.ElevenLabsError {
      constructor(body) {
        super({
          message: "BadRequestError",
          statusCode: 400,
          body
        });
        Object.setPrototypeOf(this, _BadRequestError.prototype);
      }
    };
    exports.BadRequestError = BadRequestError;
  }
});

// node_modules/elevenlabs/api/errors/ForbiddenError.js
var require_ForbiddenError = __commonJS({
  "node_modules/elevenlabs/api/errors/ForbiddenError.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ForbiddenError = void 0;
    var errors = __importStar(require_errors());
    var ForbiddenError = class _ForbiddenError extends errors.ElevenLabsError {
      constructor(body) {
        super({
          message: "ForbiddenError",
          statusCode: 403,
          body
        });
        Object.setPrototypeOf(this, _ForbiddenError.prototype);
      }
    };
    exports.ForbiddenError = ForbiddenError;
  }
});

// node_modules/elevenlabs/api/errors/NotFoundError.js
var require_NotFoundError = __commonJS({
  "node_modules/elevenlabs/api/errors/NotFoundError.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NotFoundError = void 0;
    var errors = __importStar(require_errors());
    var NotFoundError = class _NotFoundError extends errors.ElevenLabsError {
      constructor(body) {
        super({
          message: "NotFoundError",
          statusCode: 404,
          body
        });
        Object.setPrototypeOf(this, _NotFoundError.prototype);
      }
    };
    exports.NotFoundError = NotFoundError;
  }
});

// node_modules/elevenlabs/api/errors/TooEarlyError.js
var require_TooEarlyError = __commonJS({
  "node_modules/elevenlabs/api/errors/TooEarlyError.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TooEarlyError = void 0;
    var errors = __importStar(require_errors());
    var TooEarlyError = class _TooEarlyError extends errors.ElevenLabsError {
      constructor(body) {
        super({
          message: "TooEarlyError",
          statusCode: 425,
          body
        });
        Object.setPrototypeOf(this, _TooEarlyError.prototype);
      }
    };
    exports.TooEarlyError = TooEarlyError;
  }
});

// node_modules/elevenlabs/api/errors/index.js
var require_errors2 = __commonJS({
  "node_modules/elevenlabs/api/errors/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_UnprocessableEntityError(), exports);
    __exportStar(require_BadRequestError(), exports);
    __exportStar(require_ForbiddenError(), exports);
    __exportStar(require_NotFoundError(), exports);
    __exportStar(require_TooEarlyError(), exports);
  }
});

// node_modules/elevenlabs/api/index.js
var require_api = __commonJS({
  "node_modules/elevenlabs/api/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_resources11(), exports);
    __exportStar(require_types17(), exports);
    __exportStar(require_errors2(), exports);
  }
});

// node_modules/elevenlabs/environments.js
var require_environments = __commonJS({
  "node_modules/elevenlabs/environments.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ElevenLabsEnvironment = void 0;
    exports.ElevenLabsEnvironment = {
      Production: {
        base: "https://api.elevenlabs.io",
        wss: "wss://api.elevenlabs.io"
      },
      ProductionUs: {
        base: "https://api.us.elevenlabs.io",
        wss: "wss://api.elevenlabs.io"
      },
      ProductionEu: {
        base: "https://api.eu.residency.elevenlabs.io",
        wss: "wss://api.elevenlabs.io"
      }
    };
  }
});

// node_modules/es-errors/type.js
var require_type = __commonJS({
  "node_modules/es-errors/type.js"(exports, module) {
    "use strict";
    module.exports = TypeError;
  }
});

// (disabled):node_modules/object-inspect/util.inspect
var require_util = __commonJS({
  "(disabled):node_modules/object-inspect/util.inspect"() {
  }
});

// node_modules/object-inspect/index.js
var require_object_inspect = __commonJS({
  "node_modules/object-inspect/index.js"(exports, module) {
    var hasMap = typeof Map === "function" && Map.prototype;
    var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null;
    var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === "function" ? mapSizeDescriptor.get : null;
    var mapForEach = hasMap && Map.prototype.forEach;
    var hasSet = typeof Set === "function" && Set.prototype;
    var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null;
    var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === "function" ? setSizeDescriptor.get : null;
    var setForEach = hasSet && Set.prototype.forEach;
    var hasWeakMap = typeof WeakMap === "function" && WeakMap.prototype;
    var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
    var hasWeakSet = typeof WeakSet === "function" && WeakSet.prototype;
    var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
    var hasWeakRef = typeof WeakRef === "function" && WeakRef.prototype;
    var weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;
    var booleanValueOf = Boolean.prototype.valueOf;
    var objectToString = Object.prototype.toString;
    var functionToString = Function.prototype.toString;
    var $match = String.prototype.match;
    var $slice = String.prototype.slice;
    var $replace = String.prototype.replace;
    var $toUpperCase = String.prototype.toUpperCase;
    var $toLowerCase = String.prototype.toLowerCase;
    var $test = RegExp.prototype.test;
    var $concat = Array.prototype.concat;
    var $join = Array.prototype.join;
    var $arrSlice = Array.prototype.slice;
    var $floor = Math.floor;
    var bigIntValueOf = typeof BigInt === "function" ? BigInt.prototype.valueOf : null;
    var gOPS = Object.getOwnPropertySymbols;
    var symToString = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? Symbol.prototype.toString : null;
    var hasShammedSymbols = typeof Symbol === "function" && typeof Symbol.iterator === "object";
    var toStringTag = typeof Symbol === "function" && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? "object" : "symbol") ? Symbol.toStringTag : null;
    var isEnumerable = Object.prototype.propertyIsEnumerable;
    var gPO = (typeof Reflect === "function" ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function(O) {
      return O.__proto__;
    } : null);
    function addNumericSeparator(num, str) {
      if (num === Infinity || num === -Infinity || num !== num || num && num > -1e3 && num < 1e3 || $test.call(/e/, str)) {
        return str;
      }
      var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
      if (typeof num === "number") {
        var int = num < 0 ? -$floor(-num) : $floor(num);
        if (int !== num) {
          var intStr = String(int);
          var dec = $slice.call(str, intStr.length + 1);
          return $replace.call(intStr, sepRegex, "$&_") + "." + $replace.call($replace.call(dec, /([0-9]{3})/g, "$&_"), /_$/, "");
        }
      }
      return $replace.call(str, sepRegex, "$&_");
    }
    var utilInspect = require_util();
    var inspectCustom = utilInspect.custom;
    var inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;
    var quotes = {
      __proto__: null,
      "double": '"',
      single: "'"
    };
    var quoteREs = {
      __proto__: null,
      "double": /(["\\])/g,
      single: /(['\\])/g
    };
    module.exports = function inspect_(obj, options, depth, seen) {
      var opts = options || {};
      if (has(opts, "quoteStyle") && !has(quotes, opts.quoteStyle)) {
        throw new TypeError('option "quoteStyle" must be "single" or "double"');
      }
      if (has(opts, "maxStringLength") && (typeof opts.maxStringLength === "number" ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity : opts.maxStringLength !== null)) {
        throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
      }
      var customInspect = has(opts, "customInspect") ? opts.customInspect : true;
      if (typeof customInspect !== "boolean" && customInspect !== "symbol") {
        throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");
      }
      if (has(opts, "indent") && opts.indent !== null && opts.indent !== "	" && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)) {
        throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
      }
      if (has(opts, "numericSeparator") && typeof opts.numericSeparator !== "boolean") {
        throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
      }
      var numericSeparator = opts.numericSeparator;
      if (typeof obj === "undefined") {
        return "undefined";
      }
      if (obj === null) {
        return "null";
      }
      if (typeof obj === "boolean") {
        return obj ? "true" : "false";
      }
      if (typeof obj === "string") {
        return inspectString(obj, opts);
      }
      if (typeof obj === "number") {
        if (obj === 0) {
          return Infinity / obj > 0 ? "0" : "-0";
        }
        var str = String(obj);
        return numericSeparator ? addNumericSeparator(obj, str) : str;
      }
      if (typeof obj === "bigint") {
        var bigIntStr = String(obj) + "n";
        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;
      }
      var maxDepth = typeof opts.depth === "undefined" ? 5 : opts.depth;
      if (typeof depth === "undefined") {
        depth = 0;
      }
      if (depth >= maxDepth && maxDepth > 0 && typeof obj === "object") {
        return isArray(obj) ? "[Array]" : "[Object]";
      }
      var indent = getIndent(opts, depth);
      if (typeof seen === "undefined") {
        seen = [];
      } else if (indexOf(seen, obj) >= 0) {
        return "[Circular]";
      }
      function inspect(value, from, noIndent) {
        if (from) {
          seen = $arrSlice.call(seen);
          seen.push(from);
        }
        if (noIndent) {
          var newOpts = {
            depth: opts.depth
          };
          if (has(opts, "quoteStyle")) {
            newOpts.quoteStyle = opts.quoteStyle;
          }
          return inspect_(value, newOpts, depth + 1, seen);
        }
        return inspect_(value, opts, depth + 1, seen);
      }
      if (typeof obj === "function" && !isRegExp(obj)) {
        var name = nameOf(obj);
        var keys = arrObjKeys(obj, inspect);
        return "[Function" + (name ? ": " + name : " (anonymous)") + "]" + (keys.length > 0 ? " { " + $join.call(keys, ", ") + " }" : "");
      }
      if (isSymbol(obj)) {
        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\(.*\))_[^)]*$/, "$1") : symToString.call(obj);
        return typeof obj === "object" && !hasShammedSymbols ? markBoxed(symString) : symString;
      }
      if (isElement(obj)) {
        var s = "<" + $toLowerCase.call(String(obj.nodeName));
        var attrs = obj.attributes || [];
        for (var i = 0; i < attrs.length; i++) {
          s += " " + attrs[i].name + "=" + wrapQuotes(quote(attrs[i].value), "double", opts);
        }
        s += ">";
        if (obj.childNodes && obj.childNodes.length) {
          s += "...";
        }
        s += "</" + $toLowerCase.call(String(obj.nodeName)) + ">";
        return s;
      }
      if (isArray(obj)) {
        if (obj.length === 0) {
          return "[]";
        }
        var xs = arrObjKeys(obj, inspect);
        if (indent && !singleLineValues(xs)) {
          return "[" + indentedJoin(xs, indent) + "]";
        }
        return "[ " + $join.call(xs, ", ") + " ]";
      }
      if (isError(obj)) {
        var parts = arrObjKeys(obj, inspect);
        if (!("cause" in Error.prototype) && "cause" in obj && !isEnumerable.call(obj, "cause")) {
          return "{ [" + String(obj) + "] " + $join.call($concat.call("[cause]: " + inspect(obj.cause), parts), ", ") + " }";
        }
        if (parts.length === 0) {
          return "[" + String(obj) + "]";
        }
        return "{ [" + String(obj) + "] " + $join.call(parts, ", ") + " }";
      }
      if (typeof obj === "object" && customInspect) {
        if (inspectSymbol && typeof obj[inspectSymbol] === "function" && utilInspect) {
          return utilInspect(obj, { depth: maxDepth - depth });
        } else if (customInspect !== "symbol" && typeof obj.inspect === "function") {
          return obj.inspect();
        }
      }
      if (isMap(obj)) {
        var mapParts = [];
        if (mapForEach) {
          mapForEach.call(obj, function(value, key) {
            mapParts.push(inspect(key, obj, true) + " => " + inspect(value, obj));
          });
        }
        return collectionOf("Map", mapSize.call(obj), mapParts, indent);
      }
      if (isSet(obj)) {
        var setParts = [];
        if (setForEach) {
          setForEach.call(obj, function(value) {
            setParts.push(inspect(value, obj));
          });
        }
        return collectionOf("Set", setSize.call(obj), setParts, indent);
      }
      if (isWeakMap(obj)) {
        return weakCollectionOf("WeakMap");
      }
      if (isWeakSet(obj)) {
        return weakCollectionOf("WeakSet");
      }
      if (isWeakRef(obj)) {
        return weakCollectionOf("WeakRef");
      }
      if (isNumber(obj)) {
        return markBoxed(inspect(Number(obj)));
      }
      if (isBigInt(obj)) {
        return markBoxed(inspect(bigIntValueOf.call(obj)));
      }
      if (isBoolean(obj)) {
        return markBoxed(booleanValueOf.call(obj));
      }
      if (isString(obj)) {
        return markBoxed(inspect(String(obj)));
      }
      if (typeof window !== "undefined" && obj === window) {
        return "{ [object Window] }";
      }
      if (typeof globalThis !== "undefined" && obj === globalThis || typeof global !== "undefined" && obj === global) {
        return "{ [object globalThis] }";
      }
      if (!isDate(obj) && !isRegExp(obj)) {
        var ys = arrObjKeys(obj, inspect);
        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;
        var protoTag = obj instanceof Object ? "" : "null prototype";
        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? "Object" : "";
        var constructorTag = isPlainObject || typeof obj.constructor !== "function" ? "" : obj.constructor.name ? obj.constructor.name + " " : "";
        var tag = constructorTag + (stringTag || protoTag ? "[" + $join.call($concat.call([], stringTag || [], protoTag || []), ": ") + "] " : "");
        if (ys.length === 0) {
          return tag + "{}";
        }
        if (indent) {
          return tag + "{" + indentedJoin(ys, indent) + "}";
        }
        return tag + "{ " + $join.call(ys, ", ") + " }";
      }
      return String(obj);
    };
    function wrapQuotes(s, defaultStyle, opts) {
      var style = opts.quoteStyle || defaultStyle;
      var quoteChar = quotes[style];
      return quoteChar + s + quoteChar;
    }
    function quote(s) {
      return $replace.call(String(s), /"/g, "&quot;");
    }
    function canTrustToString(obj) {
      return !toStringTag || !(typeof obj === "object" && (toStringTag in obj || typeof obj[toStringTag] !== "undefined"));
    }
    function isArray(obj) {
      return toStr(obj) === "[object Array]" && canTrustToString(obj);
    }
    function isDate(obj) {
      return toStr(obj) === "[object Date]" && canTrustToString(obj);
    }
    function isRegExp(obj) {
      return toStr(obj) === "[object RegExp]" && canTrustToString(obj);
    }
    function isError(obj) {
      return toStr(obj) === "[object Error]" && canTrustToString(obj);
    }
    function isString(obj) {
      return toStr(obj) === "[object String]" && canTrustToString(obj);
    }
    function isNumber(obj) {
      return toStr(obj) === "[object Number]" && canTrustToString(obj);
    }
    function isBoolean(obj) {
      return toStr(obj) === "[object Boolean]" && canTrustToString(obj);
    }
    function isSymbol(obj) {
      if (hasShammedSymbols) {
        return obj && typeof obj === "object" && obj instanceof Symbol;
      }
      if (typeof obj === "symbol") {
        return true;
      }
      if (!obj || typeof obj !== "object" || !symToString) {
        return false;
      }
      try {
        symToString.call(obj);
        return true;
      } catch (e) {
      }
      return false;
    }
    function isBigInt(obj) {
      if (!obj || typeof obj !== "object" || !bigIntValueOf) {
        return false;
      }
      try {
        bigIntValueOf.call(obj);
        return true;
      } catch (e) {
      }
      return false;
    }
    var hasOwn = Object.prototype.hasOwnProperty || function(key) {
      return key in this;
    };
    function has(obj, key) {
      return hasOwn.call(obj, key);
    }
    function toStr(obj) {
      return objectToString.call(obj);
    }
    function nameOf(f) {
      if (f.name) {
        return f.name;
      }
      var m = $match.call(functionToString.call(f), /^function\s*([\w$]+)/);
      if (m) {
        return m[1];
      }
      return null;
    }
    function indexOf(xs, x) {
      if (xs.indexOf) {
        return xs.indexOf(x);
      }
      for (var i = 0, l = xs.length; i < l; i++) {
        if (xs[i] === x) {
          return i;
        }
      }
      return -1;
    }
    function isMap(x) {
      if (!mapSize || !x || typeof x !== "object") {
        return false;
      }
      try {
        mapSize.call(x);
        try {
          setSize.call(x);
        } catch (s) {
          return true;
        }
        return x instanceof Map;
      } catch (e) {
      }
      return false;
    }
    function isWeakMap(x) {
      if (!weakMapHas || !x || typeof x !== "object") {
        return false;
      }
      try {
        weakMapHas.call(x, weakMapHas);
        try {
          weakSetHas.call(x, weakSetHas);
        } catch (s) {
          return true;
        }
        return x instanceof WeakMap;
      } catch (e) {
      }
      return false;
    }
    function isWeakRef(x) {
      if (!weakRefDeref || !x || typeof x !== "object") {
        return false;
      }
      try {
        weakRefDeref.call(x);
        return true;
      } catch (e) {
      }
      return false;
    }
    function isSet(x) {
      if (!setSize || !x || typeof x !== "object") {
        return false;
      }
      try {
        setSize.call(x);
        try {
          mapSize.call(x);
        } catch (m) {
          return true;
        }
        return x instanceof Set;
      } catch (e) {
      }
      return false;
    }
    function isWeakSet(x) {
      if (!weakSetHas || !x || typeof x !== "object") {
        return false;
      }
      try {
        weakSetHas.call(x, weakSetHas);
        try {
          weakMapHas.call(x, weakMapHas);
        } catch (s) {
          return true;
        }
        return x instanceof WeakSet;
      } catch (e) {
      }
      return false;
    }
    function isElement(x) {
      if (!x || typeof x !== "object") {
        return false;
      }
      if (typeof HTMLElement !== "undefined" && x instanceof HTMLElement) {
        return true;
      }
      return typeof x.nodeName === "string" && typeof x.getAttribute === "function";
    }
    function inspectString(str, opts) {
      if (str.length > opts.maxStringLength) {
        var remaining = str.length - opts.maxStringLength;
        var trailer = "... " + remaining + " more character" + (remaining > 1 ? "s" : "");
        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;
      }
      var quoteRE = quoteREs[opts.quoteStyle || "single"];
      quoteRE.lastIndex = 0;
      var s = $replace.call($replace.call(str, quoteRE, "\\$1"), /[\x00-\x1f]/g, lowbyte);
      return wrapQuotes(s, "single", opts);
    }
    function lowbyte(c) {
      var n = c.charCodeAt(0);
      var x = {
        8: "b",
        9: "t",
        10: "n",
        12: "f",
        13: "r"
      }[n];
      if (x) {
        return "\\" + x;
      }
      return "\\x" + (n < 16 ? "0" : "") + $toUpperCase.call(n.toString(16));
    }
    function markBoxed(str) {
      return "Object(" + str + ")";
    }
    function weakCollectionOf(type) {
      return type + " { ? }";
    }
    function collectionOf(type, size, entries, indent) {
      var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ", ");
      return type + " (" + size + ") {" + joinedEntries + "}";
    }
    function singleLineValues(xs) {
      for (var i = 0; i < xs.length; i++) {
        if (indexOf(xs[i], "\n") >= 0) {
          return false;
        }
      }
      return true;
    }
    function getIndent(opts, depth) {
      var baseIndent;
      if (opts.indent === "	") {
        baseIndent = "	";
      } else if (typeof opts.indent === "number" && opts.indent > 0) {
        baseIndent = $join.call(Array(opts.indent + 1), " ");
      } else {
        return null;
      }
      return {
        base: baseIndent,
        prev: $join.call(Array(depth + 1), baseIndent)
      };
    }
    function indentedJoin(xs, indent) {
      if (xs.length === 0) {
        return "";
      }
      var lineJoiner = "\n" + indent.prev + indent.base;
      return lineJoiner + $join.call(xs, "," + lineJoiner) + "\n" + indent.prev;
    }
    function arrObjKeys(obj, inspect) {
      var isArr = isArray(obj);
      var xs = [];
      if (isArr) {
        xs.length = obj.length;
        for (var i = 0; i < obj.length; i++) {
          xs[i] = has(obj, i) ? inspect(obj[i], obj) : "";
        }
      }
      var syms = typeof gOPS === "function" ? gOPS(obj) : [];
      var symMap;
      if (hasShammedSymbols) {
        symMap = {};
        for (var k = 0; k < syms.length; k++) {
          symMap["$" + syms[k]] = syms[k];
        }
      }
      for (var key in obj) {
        if (!has(obj, key)) {
          continue;
        }
        if (isArr && String(Number(key)) === key && key < obj.length) {
          continue;
        }
        if (hasShammedSymbols && symMap["$" + key] instanceof Symbol) {
          continue;
        } else if ($test.call(/[^\w$]/, key)) {
          xs.push(inspect(key, obj) + ": " + inspect(obj[key], obj));
        } else {
          xs.push(key + ": " + inspect(obj[key], obj));
        }
      }
      if (typeof gOPS === "function") {
        for (var j = 0; j < syms.length; j++) {
          if (isEnumerable.call(obj, syms[j])) {
            xs.push("[" + inspect(syms[j]) + "]: " + inspect(obj[syms[j]], obj));
          }
        }
      }
      return xs;
    }
  }
});

// node_modules/side-channel-list/index.js
var require_side_channel_list = __commonJS({
  "node_modules/side-channel-list/index.js"(exports, module) {
    "use strict";
    var inspect = require_object_inspect();
    var $TypeError = require_type();
    var listGetNode = function(list, key, isDelete) {
      var prev = list;
      var curr;
      for (; (curr = prev.next) != null; prev = curr) {
        if (curr.key === key) {
          prev.next = curr.next;
          if (!isDelete) {
            curr.next = /** @type {NonNullable<typeof list.next>} */
            list.next;
            list.next = curr;
          }
          return curr;
        }
      }
    };
    var listGet = function(objects, key) {
      if (!objects) {
        return void 0;
      }
      var node = listGetNode(objects, key);
      return node && node.value;
    };
    var listSet = function(objects, key, value) {
      var node = listGetNode(objects, key);
      if (node) {
        node.value = value;
      } else {
        objects.next = /** @type {import('./list.d.ts').ListNode<typeof value, typeof key>} */
        {
          // eslint-disable-line no-param-reassign, no-extra-parens
          key,
          next: objects.next,
          value
        };
      }
    };
    var listHas = function(objects, key) {
      if (!objects) {
        return false;
      }
      return !!listGetNode(objects, key);
    };
    var listDelete = function(objects, key) {
      if (objects) {
        return listGetNode(objects, key, true);
      }
    };
    module.exports = function getSideChannelList() {
      var $o;
      var channel = {
        assert: function(key) {
          if (!channel.has(key)) {
            throw new $TypeError("Side channel does not contain " + inspect(key));
          }
        },
        "delete": function(key) {
          var root = $o && $o.next;
          var deletedNode = listDelete($o, key);
          if (deletedNode && root && root === deletedNode) {
            $o = void 0;
          }
          return !!deletedNode;
        },
        get: function(key) {
          return listGet($o, key);
        },
        has: function(key) {
          return listHas($o, key);
        },
        set: function(key, value) {
          if (!$o) {
            $o = {
              next: void 0
            };
          }
          listSet(
            /** @type {NonNullable<typeof $o>} */
            $o,
            key,
            value
          );
        }
      };
      return channel;
    };
  }
});

// node_modules/es-object-atoms/index.js
var require_es_object_atoms = __commonJS({
  "node_modules/es-object-atoms/index.js"(exports, module) {
    "use strict";
    module.exports = Object;
  }
});

// node_modules/es-errors/index.js
var require_es_errors = __commonJS({
  "node_modules/es-errors/index.js"(exports, module) {
    "use strict";
    module.exports = Error;
  }
});

// node_modules/es-errors/eval.js
var require_eval = __commonJS({
  "node_modules/es-errors/eval.js"(exports, module) {
    "use strict";
    module.exports = EvalError;
  }
});

// node_modules/es-errors/range.js
var require_range = __commonJS({
  "node_modules/es-errors/range.js"(exports, module) {
    "use strict";
    module.exports = RangeError;
  }
});

// node_modules/es-errors/ref.js
var require_ref = __commonJS({
  "node_modules/es-errors/ref.js"(exports, module) {
    "use strict";
    module.exports = ReferenceError;
  }
});

// node_modules/es-errors/syntax.js
var require_syntax = __commonJS({
  "node_modules/es-errors/syntax.js"(exports, module) {
    "use strict";
    module.exports = SyntaxError;
  }
});

// node_modules/es-errors/uri.js
var require_uri = __commonJS({
  "node_modules/es-errors/uri.js"(exports, module) {
    "use strict";
    module.exports = URIError;
  }
});

// node_modules/math-intrinsics/abs.js
var require_abs = __commonJS({
  "node_modules/math-intrinsics/abs.js"(exports, module) {
    "use strict";
    module.exports = Math.abs;
  }
});

// node_modules/math-intrinsics/floor.js
var require_floor = __commonJS({
  "node_modules/math-intrinsics/floor.js"(exports, module) {
    "use strict";
    module.exports = Math.floor;
  }
});

// node_modules/math-intrinsics/max.js
var require_max = __commonJS({
  "node_modules/math-intrinsics/max.js"(exports, module) {
    "use strict";
    module.exports = Math.max;
  }
});

// node_modules/math-intrinsics/min.js
var require_min = __commonJS({
  "node_modules/math-intrinsics/min.js"(exports, module) {
    "use strict";
    module.exports = Math.min;
  }
});

// node_modules/math-intrinsics/pow.js
var require_pow = __commonJS({
  "node_modules/math-intrinsics/pow.js"(exports, module) {
    "use strict";
    module.exports = Math.pow;
  }
});

// node_modules/math-intrinsics/round.js
var require_round = __commonJS({
  "node_modules/math-intrinsics/round.js"(exports, module) {
    "use strict";
    module.exports = Math.round;
  }
});

// node_modules/math-intrinsics/isNaN.js
var require_isNaN = __commonJS({
  "node_modules/math-intrinsics/isNaN.js"(exports, module) {
    "use strict";
    module.exports = Number.isNaN || function isNaN2(a) {
      return a !== a;
    };
  }
});

// node_modules/math-intrinsics/sign.js
var require_sign = __commonJS({
  "node_modules/math-intrinsics/sign.js"(exports, module) {
    "use strict";
    var $isNaN = require_isNaN();
    module.exports = function sign(number) {
      if ($isNaN(number) || number === 0) {
        return number;
      }
      return number < 0 ? -1 : 1;
    };
  }
});

// node_modules/gopd/gOPD.js
var require_gOPD = __commonJS({
  "node_modules/gopd/gOPD.js"(exports, module) {
    "use strict";
    module.exports = Object.getOwnPropertyDescriptor;
  }
});

// node_modules/gopd/index.js
var require_gopd = __commonJS({
  "node_modules/gopd/index.js"(exports, module) {
    "use strict";
    var $gOPD = require_gOPD();
    if ($gOPD) {
      try {
        $gOPD([], "length");
      } catch (e) {
        $gOPD = null;
      }
    }
    module.exports = $gOPD;
  }
});

// node_modules/es-define-property/index.js
var require_es_define_property = __commonJS({
  "node_modules/es-define-property/index.js"(exports, module) {
    "use strict";
    var $defineProperty = Object.defineProperty || false;
    if ($defineProperty) {
      try {
        $defineProperty({}, "a", { value: 1 });
      } catch (e) {
        $defineProperty = false;
      }
    }
    module.exports = $defineProperty;
  }
});

// node_modules/has-symbols/shams.js
var require_shams = __commonJS({
  "node_modules/has-symbols/shams.js"(exports, module) {
    "use strict";
    module.exports = function hasSymbols() {
      if (typeof Symbol !== "function" || typeof Object.getOwnPropertySymbols !== "function") {
        return false;
      }
      if (typeof Symbol.iterator === "symbol") {
        return true;
      }
      var obj = {};
      var sym = Symbol("test");
      var symObj = Object(sym);
      if (typeof sym === "string") {
        return false;
      }
      if (Object.prototype.toString.call(sym) !== "[object Symbol]") {
        return false;
      }
      if (Object.prototype.toString.call(symObj) !== "[object Symbol]") {
        return false;
      }
      var symVal = 42;
      obj[sym] = symVal;
      for (var _ in obj) {
        return false;
      }
      if (typeof Object.keys === "function" && Object.keys(obj).length !== 0) {
        return false;
      }
      if (typeof Object.getOwnPropertyNames === "function" && Object.getOwnPropertyNames(obj).length !== 0) {
        return false;
      }
      var syms = Object.getOwnPropertySymbols(obj);
      if (syms.length !== 1 || syms[0] !== sym) {
        return false;
      }
      if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
        return false;
      }
      if (typeof Object.getOwnPropertyDescriptor === "function") {
        var descriptor = (
          /** @type {PropertyDescriptor} */
          Object.getOwnPropertyDescriptor(obj, sym)
        );
        if (descriptor.value !== symVal || descriptor.enumerable !== true) {
          return false;
        }
      }
      return true;
    };
  }
});

// node_modules/has-symbols/index.js
var require_has_symbols = __commonJS({
  "node_modules/has-symbols/index.js"(exports, module) {
    "use strict";
    var origSymbol = typeof Symbol !== "undefined" && Symbol;
    var hasSymbolSham = require_shams();
    module.exports = function hasNativeSymbols() {
      if (typeof origSymbol !== "function") {
        return false;
      }
      if (typeof Symbol !== "function") {
        return false;
      }
      if (typeof origSymbol("foo") !== "symbol") {
        return false;
      }
      if (typeof Symbol("bar") !== "symbol") {
        return false;
      }
      return hasSymbolSham();
    };
  }
});

// node_modules/get-proto/Reflect.getPrototypeOf.js
var require_Reflect_getPrototypeOf = __commonJS({
  "node_modules/get-proto/Reflect.getPrototypeOf.js"(exports, module) {
    "use strict";
    module.exports = typeof Reflect !== "undefined" && Reflect.getPrototypeOf || null;
  }
});

// node_modules/get-proto/Object.getPrototypeOf.js
var require_Object_getPrototypeOf = __commonJS({
  "node_modules/get-proto/Object.getPrototypeOf.js"(exports, module) {
    "use strict";
    var $Object = require_es_object_atoms();
    module.exports = $Object.getPrototypeOf || null;
  }
});

// node_modules/function-bind/implementation.js
var require_implementation = __commonJS({
  "node_modules/function-bind/implementation.js"(exports, module) {
    "use strict";
    var ERROR_MESSAGE = "Function.prototype.bind called on incompatible ";
    var toStr = Object.prototype.toString;
    var max = Math.max;
    var funcType = "[object Function]";
    var concatty = function concatty2(a, b) {
      var arr = [];
      for (var i = 0; i < a.length; i += 1) {
        arr[i] = a[i];
      }
      for (var j = 0; j < b.length; j += 1) {
        arr[j + a.length] = b[j];
      }
      return arr;
    };
    var slicy = function slicy2(arrLike, offset) {
      var arr = [];
      for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {
        arr[j] = arrLike[i];
      }
      return arr;
    };
    var joiny = function(arr, joiner) {
      var str = "";
      for (var i = 0; i < arr.length; i += 1) {
        str += arr[i];
        if (i + 1 < arr.length) {
          str += joiner;
        }
      }
      return str;
    };
    module.exports = function bind(that) {
      var target = this;
      if (typeof target !== "function" || toStr.apply(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
      }
      var args = slicy(arguments, 1);
      var bound;
      var binder = function() {
        if (this instanceof bound) {
          var result = target.apply(
            this,
            concatty(args, arguments)
          );
          if (Object(result) === result) {
            return result;
          }
          return this;
        }
        return target.apply(
          that,
          concatty(args, arguments)
        );
      };
      var boundLength = max(0, target.length - args.length);
      var boundArgs = [];
      for (var i = 0; i < boundLength; i++) {
        boundArgs[i] = "$" + i;
      }
      bound = Function("binder", "return function (" + joiny(boundArgs, ",") + "){ return binder.apply(this,arguments); }")(binder);
      if (target.prototype) {
        var Empty = function Empty2() {
        };
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
      }
      return bound;
    };
  }
});

// node_modules/function-bind/index.js
var require_function_bind = __commonJS({
  "node_modules/function-bind/index.js"(exports, module) {
    "use strict";
    var implementation = require_implementation();
    module.exports = Function.prototype.bind || implementation;
  }
});

// node_modules/call-bind-apply-helpers/functionCall.js
var require_functionCall = __commonJS({
  "node_modules/call-bind-apply-helpers/functionCall.js"(exports, module) {
    "use strict";
    module.exports = Function.prototype.call;
  }
});

// node_modules/call-bind-apply-helpers/functionApply.js
var require_functionApply = __commonJS({
  "node_modules/call-bind-apply-helpers/functionApply.js"(exports, module) {
    "use strict";
    module.exports = Function.prototype.apply;
  }
});

// node_modules/call-bind-apply-helpers/reflectApply.js
var require_reflectApply = __commonJS({
  "node_modules/call-bind-apply-helpers/reflectApply.js"(exports, module) {
    "use strict";
    module.exports = typeof Reflect !== "undefined" && Reflect && Reflect.apply;
  }
});

// node_modules/call-bind-apply-helpers/actualApply.js
var require_actualApply = __commonJS({
  "node_modules/call-bind-apply-helpers/actualApply.js"(exports, module) {
    "use strict";
    var bind = require_function_bind();
    var $apply = require_functionApply();
    var $call = require_functionCall();
    var $reflectApply = require_reflectApply();
    module.exports = $reflectApply || bind.call($call, $apply);
  }
});

// node_modules/call-bind-apply-helpers/index.js
var require_call_bind_apply_helpers = __commonJS({
  "node_modules/call-bind-apply-helpers/index.js"(exports, module) {
    "use strict";
    var bind = require_function_bind();
    var $TypeError = require_type();
    var $call = require_functionCall();
    var $actualApply = require_actualApply();
    module.exports = function callBindBasic(args) {
      if (args.length < 1 || typeof args[0] !== "function") {
        throw new $TypeError("a function is required");
      }
      return $actualApply(bind, $call, args);
    };
  }
});

// node_modules/dunder-proto/get.js
var require_get = __commonJS({
  "node_modules/dunder-proto/get.js"(exports, module) {
    "use strict";
    var callBind = require_call_bind_apply_helpers();
    var gOPD = require_gopd();
    var hasProtoAccessor;
    try {
      hasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */
      [].__proto__ === Array.prototype;
    } catch (e) {
      if (!e || typeof e !== "object" || !("code" in e) || e.code !== "ERR_PROTO_ACCESS") {
        throw e;
      }
    }
    var desc = !!hasProtoAccessor && gOPD && gOPD(
      Object.prototype,
      /** @type {keyof typeof Object.prototype} */
      "__proto__"
    );
    var $Object = Object;
    var $getPrototypeOf = $Object.getPrototypeOf;
    module.exports = desc && typeof desc.get === "function" ? callBind([desc.get]) : typeof $getPrototypeOf === "function" ? (
      /** @type {import('./get')} */
      function getDunder(value) {
        return $getPrototypeOf(value == null ? value : $Object(value));
      }
    ) : false;
  }
});

// node_modules/get-proto/index.js
var require_get_proto = __commonJS({
  "node_modules/get-proto/index.js"(exports, module) {
    "use strict";
    var reflectGetProto = require_Reflect_getPrototypeOf();
    var originalGetProto = require_Object_getPrototypeOf();
    var getDunderProto = require_get();
    module.exports = reflectGetProto ? function getProto(O) {
      return reflectGetProto(O);
    } : originalGetProto ? function getProto(O) {
      if (!O || typeof O !== "object" && typeof O !== "function") {
        throw new TypeError("getProto: not an object");
      }
      return originalGetProto(O);
    } : getDunderProto ? function getProto(O) {
      return getDunderProto(O);
    } : null;
  }
});

// node_modules/hasown/index.js
var require_hasown = __commonJS({
  "node_modules/hasown/index.js"(exports, module) {
    "use strict";
    var call = Function.prototype.call;
    var $hasOwn = Object.prototype.hasOwnProperty;
    var bind = require_function_bind();
    module.exports = bind.call(call, $hasOwn);
  }
});

// node_modules/get-intrinsic/index.js
var require_get_intrinsic = __commonJS({
  "node_modules/get-intrinsic/index.js"(exports, module) {
    "use strict";
    var undefined2;
    var $Object = require_es_object_atoms();
    var $Error = require_es_errors();
    var $EvalError = require_eval();
    var $RangeError = require_range();
    var $ReferenceError = require_ref();
    var $SyntaxError = require_syntax();
    var $TypeError = require_type();
    var $URIError = require_uri();
    var abs = require_abs();
    var floor = require_floor();
    var max = require_max();
    var min = require_min();
    var pow = require_pow();
    var round = require_round();
    var sign = require_sign();
    var $Function = Function;
    var getEvalledConstructor = function(expressionSyntax) {
      try {
        return $Function('"use strict"; return (' + expressionSyntax + ").constructor;")();
      } catch (e) {
      }
    };
    var $gOPD = require_gopd();
    var $defineProperty = require_es_define_property();
    var throwTypeError = function() {
      throw new $TypeError();
    };
    var ThrowTypeError = $gOPD ? function() {
      try {
        arguments.callee;
        return throwTypeError;
      } catch (calleeThrows) {
        try {
          return $gOPD(arguments, "callee").get;
        } catch (gOPDthrows) {
          return throwTypeError;
        }
      }
    }() : throwTypeError;
    var hasSymbols = require_has_symbols()();
    var getProto = require_get_proto();
    var $ObjectGPO = require_Object_getPrototypeOf();
    var $ReflectGPO = require_Reflect_getPrototypeOf();
    var $apply = require_functionApply();
    var $call = require_functionCall();
    var needsEval = {};
    var TypedArray = typeof Uint8Array === "undefined" || !getProto ? undefined2 : getProto(Uint8Array);
    var INTRINSICS = {
      __proto__: null,
      "%AggregateError%": typeof AggregateError === "undefined" ? undefined2 : AggregateError,
      "%Array%": Array,
      "%ArrayBuffer%": typeof ArrayBuffer === "undefined" ? undefined2 : ArrayBuffer,
      "%ArrayIteratorPrototype%": hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined2,
      "%AsyncFromSyncIteratorPrototype%": undefined2,
      "%AsyncFunction%": needsEval,
      "%AsyncGenerator%": needsEval,
      "%AsyncGeneratorFunction%": needsEval,
      "%AsyncIteratorPrototype%": needsEval,
      "%Atomics%": typeof Atomics === "undefined" ? undefined2 : Atomics,
      "%BigInt%": typeof BigInt === "undefined" ? undefined2 : BigInt,
      "%BigInt64Array%": typeof BigInt64Array === "undefined" ? undefined2 : BigInt64Array,
      "%BigUint64Array%": typeof BigUint64Array === "undefined" ? undefined2 : BigUint64Array,
      "%Boolean%": Boolean,
      "%DataView%": typeof DataView === "undefined" ? undefined2 : DataView,
      "%Date%": Date,
      "%decodeURI%": decodeURI,
      "%decodeURIComponent%": decodeURIComponent,
      "%encodeURI%": encodeURI,
      "%encodeURIComponent%": encodeURIComponent,
      "%Error%": $Error,
      "%eval%": eval,
      // eslint-disable-line no-eval
      "%EvalError%": $EvalError,
      "%Float16Array%": typeof Float16Array === "undefined" ? undefined2 : Float16Array,
      "%Float32Array%": typeof Float32Array === "undefined" ? undefined2 : Float32Array,
      "%Float64Array%": typeof Float64Array === "undefined" ? undefined2 : Float64Array,
      "%FinalizationRegistry%": typeof FinalizationRegistry === "undefined" ? undefined2 : FinalizationRegistry,
      "%Function%": $Function,
      "%GeneratorFunction%": needsEval,
      "%Int8Array%": typeof Int8Array === "undefined" ? undefined2 : Int8Array,
      "%Int16Array%": typeof Int16Array === "undefined" ? undefined2 : Int16Array,
      "%Int32Array%": typeof Int32Array === "undefined" ? undefined2 : Int32Array,
      "%isFinite%": isFinite,
      "%isNaN%": isNaN,
      "%IteratorPrototype%": hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined2,
      "%JSON%": typeof JSON === "object" ? JSON : undefined2,
      "%Map%": typeof Map === "undefined" ? undefined2 : Map,
      "%MapIteratorPrototype%": typeof Map === "undefined" || !hasSymbols || !getProto ? undefined2 : getProto((/* @__PURE__ */ new Map())[Symbol.iterator]()),
      "%Math%": Math,
      "%Number%": Number,
      "%Object%": $Object,
      "%Object.getOwnPropertyDescriptor%": $gOPD,
      "%parseFloat%": parseFloat,
      "%parseInt%": parseInt,
      "%Promise%": typeof Promise === "undefined" ? undefined2 : Promise,
      "%Proxy%": typeof Proxy === "undefined" ? undefined2 : Proxy,
      "%RangeError%": $RangeError,
      "%ReferenceError%": $ReferenceError,
      "%Reflect%": typeof Reflect === "undefined" ? undefined2 : Reflect,
      "%RegExp%": RegExp,
      "%Set%": typeof Set === "undefined" ? undefined2 : Set,
      "%SetIteratorPrototype%": typeof Set === "undefined" || !hasSymbols || !getProto ? undefined2 : getProto((/* @__PURE__ */ new Set())[Symbol.iterator]()),
      "%SharedArrayBuffer%": typeof SharedArrayBuffer === "undefined" ? undefined2 : SharedArrayBuffer,
      "%String%": String,
      "%StringIteratorPrototype%": hasSymbols && getProto ? getProto(""[Symbol.iterator]()) : undefined2,
      "%Symbol%": hasSymbols ? Symbol : undefined2,
      "%SyntaxError%": $SyntaxError,
      "%ThrowTypeError%": ThrowTypeError,
      "%TypedArray%": TypedArray,
      "%TypeError%": $TypeError,
      "%Uint8Array%": typeof Uint8Array === "undefined" ? undefined2 : Uint8Array,
      "%Uint8ClampedArray%": typeof Uint8ClampedArray === "undefined" ? undefined2 : Uint8ClampedArray,
      "%Uint16Array%": typeof Uint16Array === "undefined" ? undefined2 : Uint16Array,
      "%Uint32Array%": typeof Uint32Array === "undefined" ? undefined2 : Uint32Array,
      "%URIError%": $URIError,
      "%WeakMap%": typeof WeakMap === "undefined" ? undefined2 : WeakMap,
      "%WeakRef%": typeof WeakRef === "undefined" ? undefined2 : WeakRef,
      "%WeakSet%": typeof WeakSet === "undefined" ? undefined2 : WeakSet,
      "%Function.prototype.call%": $call,
      "%Function.prototype.apply%": $apply,
      "%Object.defineProperty%": $defineProperty,
      "%Object.getPrototypeOf%": $ObjectGPO,
      "%Math.abs%": abs,
      "%Math.floor%": floor,
      "%Math.max%": max,
      "%Math.min%": min,
      "%Math.pow%": pow,
      "%Math.round%": round,
      "%Math.sign%": sign,
      "%Reflect.getPrototypeOf%": $ReflectGPO
    };
    if (getProto) {
      try {
        null.error;
      } catch (e) {
        errorProto = getProto(getProto(e));
        INTRINSICS["%Error.prototype%"] = errorProto;
      }
    }
    var errorProto;
    var doEval = function doEval2(name) {
      var value;
      if (name === "%AsyncFunction%") {
        value = getEvalledConstructor("async function () {}");
      } else if (name === "%GeneratorFunction%") {
        value = getEvalledConstructor("function* () {}");
      } else if (name === "%AsyncGeneratorFunction%") {
        value = getEvalledConstructor("async function* () {}");
      } else if (name === "%AsyncGenerator%") {
        var fn = doEval2("%AsyncGeneratorFunction%");
        if (fn) {
          value = fn.prototype;
        }
      } else if (name === "%AsyncIteratorPrototype%") {
        var gen = doEval2("%AsyncGenerator%");
        if (gen && getProto) {
          value = getProto(gen.prototype);
        }
      }
      INTRINSICS[name] = value;
      return value;
    };
    var LEGACY_ALIASES = {
      __proto__: null,
      "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
      "%ArrayPrototype%": ["Array", "prototype"],
      "%ArrayProto_entries%": ["Array", "prototype", "entries"],
      "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
      "%ArrayProto_keys%": ["Array", "prototype", "keys"],
      "%ArrayProto_values%": ["Array", "prototype", "values"],
      "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
      "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
      "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
      "%BooleanPrototype%": ["Boolean", "prototype"],
      "%DataViewPrototype%": ["DataView", "prototype"],
      "%DatePrototype%": ["Date", "prototype"],
      "%ErrorPrototype%": ["Error", "prototype"],
      "%EvalErrorPrototype%": ["EvalError", "prototype"],
      "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
      "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
      "%FunctionPrototype%": ["Function", "prototype"],
      "%Generator%": ["GeneratorFunction", "prototype"],
      "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
      "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
      "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
      "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
      "%JSONParse%": ["JSON", "parse"],
      "%JSONStringify%": ["JSON", "stringify"],
      "%MapPrototype%": ["Map", "prototype"],
      "%NumberPrototype%": ["Number", "prototype"],
      "%ObjectPrototype%": ["Object", "prototype"],
      "%ObjProto_toString%": ["Object", "prototype", "toString"],
      "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
      "%PromisePrototype%": ["Promise", "prototype"],
      "%PromiseProto_then%": ["Promise", "prototype", "then"],
      "%Promise_all%": ["Promise", "all"],
      "%Promise_reject%": ["Promise", "reject"],
      "%Promise_resolve%": ["Promise", "resolve"],
      "%RangeErrorPrototype%": ["RangeError", "prototype"],
      "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
      "%RegExpPrototype%": ["RegExp", "prototype"],
      "%SetPrototype%": ["Set", "prototype"],
      "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
      "%StringPrototype%": ["String", "prototype"],
      "%SymbolPrototype%": ["Symbol", "prototype"],
      "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
      "%TypedArrayPrototype%": ["TypedArray", "prototype"],
      "%TypeErrorPrototype%": ["TypeError", "prototype"],
      "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
      "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
      "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
      "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
      "%URIErrorPrototype%": ["URIError", "prototype"],
      "%WeakMapPrototype%": ["WeakMap", "prototype"],
      "%WeakSetPrototype%": ["WeakSet", "prototype"]
    };
    var bind = require_function_bind();
    var hasOwn = require_hasown();
    var $concat = bind.call($call, Array.prototype.concat);
    var $spliceApply = bind.call($apply, Array.prototype.splice);
    var $replace = bind.call($call, String.prototype.replace);
    var $strSlice = bind.call($call, String.prototype.slice);
    var $exec = bind.call($call, RegExp.prototype.exec);
    var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = function stringToPath2(string) {
      var first = $strSlice(string, 0, 1);
      var last = $strSlice(string, -1);
      if (first === "%" && last !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected closing `%`");
      } else if (last === "%" && first !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected opening `%`");
      }
      var result = [];
      $replace(string, rePropName, function(match, number, quote, subString) {
        result[result.length] = quote ? $replace(subString, reEscapeChar, "$1") : number || match;
      });
      return result;
    };
    var getBaseIntrinsic = function getBaseIntrinsic2(name, allowMissing) {
      var intrinsicName = name;
      var alias;
      if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
        alias = LEGACY_ALIASES[intrinsicName];
        intrinsicName = "%" + alias[0] + "%";
      }
      if (hasOwn(INTRINSICS, intrinsicName)) {
        var value = INTRINSICS[intrinsicName];
        if (value === needsEval) {
          value = doEval(intrinsicName);
        }
        if (typeof value === "undefined" && !allowMissing) {
          throw new $TypeError("intrinsic " + name + " exists, but is not available. Please file an issue!");
        }
        return {
          alias,
          name: intrinsicName,
          value
        };
      }
      throw new $SyntaxError("intrinsic " + name + " does not exist!");
    };
    module.exports = function GetIntrinsic(name, allowMissing) {
      if (typeof name !== "string" || name.length === 0) {
        throw new $TypeError("intrinsic name must be a non-empty string");
      }
      if (arguments.length > 1 && typeof allowMissing !== "boolean") {
        throw new $TypeError('"allowMissing" argument must be a boolean');
      }
      if ($exec(/^%?[^%]*%?$/, name) === null) {
        throw new $SyntaxError("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
      }
      var parts = stringToPath(name);
      var intrinsicBaseName = parts.length > 0 ? parts[0] : "";
      var intrinsic = getBaseIntrinsic("%" + intrinsicBaseName + "%", allowMissing);
      var intrinsicRealName = intrinsic.name;
      var value = intrinsic.value;
      var skipFurtherCaching = false;
      var alias = intrinsic.alias;
      if (alias) {
        intrinsicBaseName = alias[0];
        $spliceApply(parts, $concat([0, 1], alias));
      }
      for (var i = 1, isOwn = true; i < parts.length; i += 1) {
        var part = parts[i];
        var first = $strSlice(part, 0, 1);
        var last = $strSlice(part, -1);
        if ((first === '"' || first === "'" || first === "`" || (last === '"' || last === "'" || last === "`")) && first !== last) {
          throw new $SyntaxError("property names with quotes must have matching quotes");
        }
        if (part === "constructor" || !isOwn) {
          skipFurtherCaching = true;
        }
        intrinsicBaseName += "." + part;
        intrinsicRealName = "%" + intrinsicBaseName + "%";
        if (hasOwn(INTRINSICS, intrinsicRealName)) {
          value = INTRINSICS[intrinsicRealName];
        } else if (value != null) {
          if (!(part in value)) {
            if (!allowMissing) {
              throw new $TypeError("base intrinsic for " + name + " exists, but the property is not available.");
            }
            return void 0;
          }
          if ($gOPD && i + 1 >= parts.length) {
            var desc = $gOPD(value, part);
            isOwn = !!desc;
            if (isOwn && "get" in desc && !("originalValue" in desc.get)) {
              value = desc.get;
            } else {
              value = value[part];
            }
          } else {
            isOwn = hasOwn(value, part);
            value = value[part];
          }
          if (isOwn && !skipFurtherCaching) {
            INTRINSICS[intrinsicRealName] = value;
          }
        }
      }
      return value;
    };
  }
});

// node_modules/call-bound/index.js
var require_call_bound = __commonJS({
  "node_modules/call-bound/index.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var callBindBasic = require_call_bind_apply_helpers();
    var $indexOf = callBindBasic([GetIntrinsic("%String.prototype.indexOf%")]);
    module.exports = function callBoundIntrinsic(name, allowMissing) {
      var intrinsic = (
        /** @type {(this: unknown, ...args: unknown[]) => unknown} */
        GetIntrinsic(name, !!allowMissing)
      );
      if (typeof intrinsic === "function" && $indexOf(name, ".prototype.") > -1) {
        return callBindBasic(
          /** @type {const} */
          [intrinsic]
        );
      }
      return intrinsic;
    };
  }
});

// node_modules/side-channel-map/index.js
var require_side_channel_map = __commonJS({
  "node_modules/side-channel-map/index.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var callBound = require_call_bound();
    var inspect = require_object_inspect();
    var $TypeError = require_type();
    var $Map = GetIntrinsic("%Map%", true);
    var $mapGet = callBound("Map.prototype.get", true);
    var $mapSet = callBound("Map.prototype.set", true);
    var $mapHas = callBound("Map.prototype.has", true);
    var $mapDelete = callBound("Map.prototype.delete", true);
    var $mapSize = callBound("Map.prototype.size", true);
    module.exports = !!$Map && /** @type {Exclude<import('.'), false>} */
    function getSideChannelMap() {
      var $m;
      var channel = {
        assert: function(key) {
          if (!channel.has(key)) {
            throw new $TypeError("Side channel does not contain " + inspect(key));
          }
        },
        "delete": function(key) {
          if ($m) {
            var result = $mapDelete($m, key);
            if ($mapSize($m) === 0) {
              $m = void 0;
            }
            return result;
          }
          return false;
        },
        get: function(key) {
          if ($m) {
            return $mapGet($m, key);
          }
        },
        has: function(key) {
          if ($m) {
            return $mapHas($m, key);
          }
          return false;
        },
        set: function(key, value) {
          if (!$m) {
            $m = new $Map();
          }
          $mapSet($m, key, value);
        }
      };
      return channel;
    };
  }
});

// node_modules/side-channel-weakmap/index.js
var require_side_channel_weakmap = __commonJS({
  "node_modules/side-channel-weakmap/index.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var callBound = require_call_bound();
    var inspect = require_object_inspect();
    var getSideChannelMap = require_side_channel_map();
    var $TypeError = require_type();
    var $WeakMap = GetIntrinsic("%WeakMap%", true);
    var $weakMapGet = callBound("WeakMap.prototype.get", true);
    var $weakMapSet = callBound("WeakMap.prototype.set", true);
    var $weakMapHas = callBound("WeakMap.prototype.has", true);
    var $weakMapDelete = callBound("WeakMap.prototype.delete", true);
    module.exports = $WeakMap ? (
      /** @type {Exclude<import('.'), false>} */
      function getSideChannelWeakMap() {
        var $wm;
        var $m;
        var channel = {
          assert: function(key) {
            if (!channel.has(key)) {
              throw new $TypeError("Side channel does not contain " + inspect(key));
            }
          },
          "delete": function(key) {
            if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
              if ($wm) {
                return $weakMapDelete($wm, key);
              }
            } else if (getSideChannelMap) {
              if ($m) {
                return $m["delete"](key);
              }
            }
            return false;
          },
          get: function(key) {
            if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
              if ($wm) {
                return $weakMapGet($wm, key);
              }
            }
            return $m && $m.get(key);
          },
          has: function(key) {
            if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
              if ($wm) {
                return $weakMapHas($wm, key);
              }
            }
            return !!$m && $m.has(key);
          },
          set: function(key, value) {
            if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
              if (!$wm) {
                $wm = new $WeakMap();
              }
              $weakMapSet($wm, key, value);
            } else if (getSideChannelMap) {
              if (!$m) {
                $m = getSideChannelMap();
              }
              $m.set(key, value);
            }
          }
        };
        return channel;
      }
    ) : getSideChannelMap;
  }
});

// node_modules/side-channel/index.js
var require_side_channel = __commonJS({
  "node_modules/side-channel/index.js"(exports, module) {
    "use strict";
    var $TypeError = require_type();
    var inspect = require_object_inspect();
    var getSideChannelList = require_side_channel_list();
    var getSideChannelMap = require_side_channel_map();
    var getSideChannelWeakMap = require_side_channel_weakmap();
    var makeChannel = getSideChannelWeakMap || getSideChannelMap || getSideChannelList;
    module.exports = function getSideChannel() {
      var $channelData;
      var channel = {
        assert: function(key) {
          if (!channel.has(key)) {
            throw new $TypeError("Side channel does not contain " + inspect(key));
          }
        },
        "delete": function(key) {
          return !!$channelData && $channelData["delete"](key);
        },
        get: function(key) {
          return $channelData && $channelData.get(key);
        },
        has: function(key) {
          return !!$channelData && $channelData.has(key);
        },
        set: function(key, value) {
          if (!$channelData) {
            $channelData = makeChannel();
          }
          $channelData.set(key, value);
        }
      };
      return channel;
    };
  }
});

// node_modules/qs/lib/formats.js
var require_formats = __commonJS({
  "node_modules/qs/lib/formats.js"(exports, module) {
    "use strict";
    var replace = String.prototype.replace;
    var percentTwenties = /%20/g;
    var Format = {
      RFC1738: "RFC1738",
      RFC3986: "RFC3986"
    };
    module.exports = {
      "default": Format.RFC3986,
      formatters: {
        RFC1738: function(value) {
          return replace.call(value, percentTwenties, "+");
        },
        RFC3986: function(value) {
          return String(value);
        }
      },
      RFC1738: Format.RFC1738,
      RFC3986: Format.RFC3986
    };
  }
});

// node_modules/qs/lib/utils.js
var require_utils = __commonJS({
  "node_modules/qs/lib/utils.js"(exports, module) {
    "use strict";
    var formats = require_formats();
    var has = Object.prototype.hasOwnProperty;
    var isArray = Array.isArray;
    var hexTable = function() {
      var array = [];
      for (var i = 0; i < 256; ++i) {
        array.push("%" + ((i < 16 ? "0" : "") + i.toString(16)).toUpperCase());
      }
      return array;
    }();
    var compactQueue = function compactQueue2(queue) {
      while (queue.length > 1) {
        var item = queue.pop();
        var obj = item.obj[item.prop];
        if (isArray(obj)) {
          var compacted = [];
          for (var j = 0; j < obj.length; ++j) {
            if (typeof obj[j] !== "undefined") {
              compacted.push(obj[j]);
            }
          }
          item.obj[item.prop] = compacted;
        }
      }
    };
    var arrayToObject = function arrayToObject2(source, options) {
      var obj = options && options.plainObjects ? { __proto__: null } : {};
      for (var i = 0; i < source.length; ++i) {
        if (typeof source[i] !== "undefined") {
          obj[i] = source[i];
        }
      }
      return obj;
    };
    var merge = function merge2(target, source, options) {
      if (!source) {
        return target;
      }
      if (typeof source !== "object" && typeof source !== "function") {
        if (isArray(target)) {
          target.push(source);
        } else if (target && typeof target === "object") {
          if (options && (options.plainObjects || options.allowPrototypes) || !has.call(Object.prototype, source)) {
            target[source] = true;
          }
        } else {
          return [target, source];
        }
        return target;
      }
      if (!target || typeof target !== "object") {
        return [target].concat(source);
      }
      var mergeTarget = target;
      if (isArray(target) && !isArray(source)) {
        mergeTarget = arrayToObject(target, options);
      }
      if (isArray(target) && isArray(source)) {
        source.forEach(function(item, i) {
          if (has.call(target, i)) {
            var targetItem = target[i];
            if (targetItem && typeof targetItem === "object" && item && typeof item === "object") {
              target[i] = merge2(targetItem, item, options);
            } else {
              target.push(item);
            }
          } else {
            target[i] = item;
          }
        });
        return target;
      }
      return Object.keys(source).reduce(function(acc, key) {
        var value = source[key];
        if (has.call(acc, key)) {
          acc[key] = merge2(acc[key], value, options);
        } else {
          acc[key] = value;
        }
        return acc;
      }, mergeTarget);
    };
    var assign = function assignSingleSource(target, source) {
      return Object.keys(source).reduce(function(acc, key) {
        acc[key] = source[key];
        return acc;
      }, target);
    };
    var decode = function(str, defaultDecoder, charset) {
      var strWithoutPlus = str.replace(/\+/g, " ");
      if (charset === "iso-8859-1") {
        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
      }
      try {
        return decodeURIComponent(strWithoutPlus);
      } catch (e) {
        return strWithoutPlus;
      }
    };
    var limit = 1024;
    var encode = function encode2(str, defaultEncoder, charset, kind, format) {
      if (str.length === 0) {
        return str;
      }
      var string = str;
      if (typeof str === "symbol") {
        string = Symbol.prototype.toString.call(str);
      } else if (typeof str !== "string") {
        string = String(str);
      }
      if (charset === "iso-8859-1") {
        return escape(string).replace(/%u[0-9a-f]{4}/gi, function($0) {
          return "%26%23" + parseInt($0.slice(2), 16) + "%3B";
        });
      }
      var out = "";
      for (var j = 0; j < string.length; j += limit) {
        var segment = string.length >= limit ? string.slice(j, j + limit) : string;
        var arr = [];
        for (var i = 0; i < segment.length; ++i) {
          var c = segment.charCodeAt(i);
          if (c === 45 || c === 46 || c === 95 || c === 126 || c >= 48 && c <= 57 || c >= 65 && c <= 90 || c >= 97 && c <= 122 || format === formats.RFC1738 && (c === 40 || c === 41)) {
            arr[arr.length] = segment.charAt(i);
            continue;
          }
          if (c < 128) {
            arr[arr.length] = hexTable[c];
            continue;
          }
          if (c < 2048) {
            arr[arr.length] = hexTable[192 | c >> 6] + hexTable[128 | c & 63];
            continue;
          }
          if (c < 55296 || c >= 57344) {
            arr[arr.length] = hexTable[224 | c >> 12] + hexTable[128 | c >> 6 & 63] + hexTable[128 | c & 63];
            continue;
          }
          i += 1;
          c = 65536 + ((c & 1023) << 10 | segment.charCodeAt(i) & 1023);
          arr[arr.length] = hexTable[240 | c >> 18] + hexTable[128 | c >> 12 & 63] + hexTable[128 | c >> 6 & 63] + hexTable[128 | c & 63];
        }
        out += arr.join("");
      }
      return out;
    };
    var compact = function compact2(value) {
      var queue = [{ obj: { o: value }, prop: "o" }];
      var refs = [];
      for (var i = 0; i < queue.length; ++i) {
        var item = queue[i];
        var obj = item.obj[item.prop];
        var keys = Object.keys(obj);
        for (var j = 0; j < keys.length; ++j) {
          var key = keys[j];
          var val = obj[key];
          if (typeof val === "object" && val !== null && refs.indexOf(val) === -1) {
            queue.push({ obj, prop: key });
            refs.push(val);
          }
        }
      }
      compactQueue(queue);
      return value;
    };
    var isRegExp = function isRegExp2(obj) {
      return Object.prototype.toString.call(obj) === "[object RegExp]";
    };
    var isBuffer = function isBuffer2(obj) {
      if (!obj || typeof obj !== "object") {
        return false;
      }
      return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
    };
    var combine = function combine2(a, b) {
      return [].concat(a, b);
    };
    var maybeMap = function maybeMap2(val, fn) {
      if (isArray(val)) {
        var mapped = [];
        for (var i = 0; i < val.length; i += 1) {
          mapped.push(fn(val[i]));
        }
        return mapped;
      }
      return fn(val);
    };
    module.exports = {
      arrayToObject,
      assign,
      combine,
      compact,
      decode,
      encode,
      isBuffer,
      isRegExp,
      maybeMap,
      merge
    };
  }
});

// node_modules/qs/lib/stringify.js
var require_stringify = __commonJS({
  "node_modules/qs/lib/stringify.js"(exports, module) {
    "use strict";
    var getSideChannel = require_side_channel();
    var utils = require_utils();
    var formats = require_formats();
    var has = Object.prototype.hasOwnProperty;
    var arrayPrefixGenerators = {
      brackets: function brackets(prefix) {
        return prefix + "[]";
      },
      comma: "comma",
      indices: function indices(prefix, key) {
        return prefix + "[" + key + "]";
      },
      repeat: function repeat(prefix) {
        return prefix;
      }
    };
    var isArray = Array.isArray;
    var push = Array.prototype.push;
    var pushToArray = function(arr, valueOrArray) {
      push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);
    };
    var toISO = Date.prototype.toISOString;
    var defaultFormat = formats["default"];
    var defaults = {
      addQueryPrefix: false,
      allowDots: false,
      allowEmptyArrays: false,
      arrayFormat: "indices",
      charset: "utf-8",
      charsetSentinel: false,
      commaRoundTrip: false,
      delimiter: "&",
      encode: true,
      encodeDotInKeys: false,
      encoder: utils.encode,
      encodeValuesOnly: false,
      filter: void 0,
      format: defaultFormat,
      formatter: formats.formatters[defaultFormat],
      // deprecated
      indices: false,
      serializeDate: function serializeDate(date) {
        return toISO.call(date);
      },
      skipNulls: false,
      strictNullHandling: false
    };
    var isNonNullishPrimitive = function isNonNullishPrimitive2(v) {
      return typeof v === "string" || typeof v === "number" || typeof v === "boolean" || typeof v === "symbol" || typeof v === "bigint";
    };
    var sentinel = {};
    var stringify = function stringify2(object, prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {
      var obj = object;
      var tmpSc = sideChannel;
      var step = 0;
      var findFlag = false;
      while ((tmpSc = tmpSc.get(sentinel)) !== void 0 && !findFlag) {
        var pos = tmpSc.get(object);
        step += 1;
        if (typeof pos !== "undefined") {
          if (pos === step) {
            throw new RangeError("Cyclic object value");
          } else {
            findFlag = true;
          }
        }
        if (typeof tmpSc.get(sentinel) === "undefined") {
          step = 0;
        }
      }
      if (typeof filter === "function") {
        obj = filter(prefix, obj);
      } else if (obj instanceof Date) {
        obj = serializeDate(obj);
      } else if (generateArrayPrefix === "comma" && isArray(obj)) {
        obj = utils.maybeMap(obj, function(value2) {
          if (value2 instanceof Date) {
            return serializeDate(value2);
          }
          return value2;
        });
      }
      if (obj === null) {
        if (strictNullHandling) {
          return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, "key", format) : prefix;
        }
        obj = "";
      }
      if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {
        if (encoder) {
          var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, "key", format);
          return [formatter(keyValue) + "=" + formatter(encoder(obj, defaults.encoder, charset, "value", format))];
        }
        return [formatter(prefix) + "=" + formatter(String(obj))];
      }
      var values = [];
      if (typeof obj === "undefined") {
        return values;
      }
      var objKeys;
      if (generateArrayPrefix === "comma" && isArray(obj)) {
        if (encodeValuesOnly && encoder) {
          obj = utils.maybeMap(obj, encoder);
        }
        objKeys = [{ value: obj.length > 0 ? obj.join(",") || null : void 0 }];
      } else if (isArray(filter)) {
        objKeys = filter;
      } else {
        var keys = Object.keys(obj);
        objKeys = sort ? keys.sort(sort) : keys;
      }
      var encodedPrefix = encodeDotInKeys ? String(prefix).replace(/\./g, "%2E") : String(prefix);
      var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encodedPrefix + "[]" : encodedPrefix;
      if (allowEmptyArrays && isArray(obj) && obj.length === 0) {
        return adjustedPrefix + "[]";
      }
      for (var j = 0; j < objKeys.length; ++j) {
        var key = objKeys[j];
        var value = typeof key === "object" && key && typeof key.value !== "undefined" ? key.value : obj[key];
        if (skipNulls && value === null) {
          continue;
        }
        var encodedKey = allowDots && encodeDotInKeys ? String(key).replace(/\./g, "%2E") : String(key);
        var keyPrefix = isArray(obj) ? typeof generateArrayPrefix === "function" ? generateArrayPrefix(adjustedPrefix, encodedKey) : adjustedPrefix : adjustedPrefix + (allowDots ? "." + encodedKey : "[" + encodedKey + "]");
        sideChannel.set(object, step);
        var valueSideChannel = getSideChannel();
        valueSideChannel.set(sentinel, sideChannel);
        pushToArray(values, stringify2(
          value,
          keyPrefix,
          generateArrayPrefix,
          commaRoundTrip,
          allowEmptyArrays,
          strictNullHandling,
          skipNulls,
          encodeDotInKeys,
          generateArrayPrefix === "comma" && encodeValuesOnly && isArray(obj) ? null : encoder,
          filter,
          sort,
          allowDots,
          serializeDate,
          format,
          formatter,
          encodeValuesOnly,
          charset,
          valueSideChannel
        ));
      }
      return values;
    };
    var normalizeStringifyOptions = function normalizeStringifyOptions2(opts) {
      if (!opts) {
        return defaults;
      }
      if (typeof opts.allowEmptyArrays !== "undefined" && typeof opts.allowEmptyArrays !== "boolean") {
        throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");
      }
      if (typeof opts.encodeDotInKeys !== "undefined" && typeof opts.encodeDotInKeys !== "boolean") {
        throw new TypeError("`encodeDotInKeys` option can only be `true` or `false`, when provided");
      }
      if (opts.encoder !== null && typeof opts.encoder !== "undefined" && typeof opts.encoder !== "function") {
        throw new TypeError("Encoder has to be a function.");
      }
      var charset = opts.charset || defaults.charset;
      if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
        throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
      }
      var format = formats["default"];
      if (typeof opts.format !== "undefined") {
        if (!has.call(formats.formatters, opts.format)) {
          throw new TypeError("Unknown format option provided.");
        }
        format = opts.format;
      }
      var formatter = formats.formatters[format];
      var filter = defaults.filter;
      if (typeof opts.filter === "function" || isArray(opts.filter)) {
        filter = opts.filter;
      }
      var arrayFormat;
      if (opts.arrayFormat in arrayPrefixGenerators) {
        arrayFormat = opts.arrayFormat;
      } else if ("indices" in opts) {
        arrayFormat = opts.indices ? "indices" : "repeat";
      } else {
        arrayFormat = defaults.arrayFormat;
      }
      if ("commaRoundTrip" in opts && typeof opts.commaRoundTrip !== "boolean") {
        throw new TypeError("`commaRoundTrip` must be a boolean, or absent");
      }
      var allowDots = typeof opts.allowDots === "undefined" ? opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;
      return {
        addQueryPrefix: typeof opts.addQueryPrefix === "boolean" ? opts.addQueryPrefix : defaults.addQueryPrefix,
        allowDots,
        allowEmptyArrays: typeof opts.allowEmptyArrays === "boolean" ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,
        arrayFormat,
        charset,
        charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults.charsetSentinel,
        commaRoundTrip: !!opts.commaRoundTrip,
        delimiter: typeof opts.delimiter === "undefined" ? defaults.delimiter : opts.delimiter,
        encode: typeof opts.encode === "boolean" ? opts.encode : defaults.encode,
        encodeDotInKeys: typeof opts.encodeDotInKeys === "boolean" ? opts.encodeDotInKeys : defaults.encodeDotInKeys,
        encoder: typeof opts.encoder === "function" ? opts.encoder : defaults.encoder,
        encodeValuesOnly: typeof opts.encodeValuesOnly === "boolean" ? opts.encodeValuesOnly : defaults.encodeValuesOnly,
        filter,
        format,
        formatter,
        serializeDate: typeof opts.serializeDate === "function" ? opts.serializeDate : defaults.serializeDate,
        skipNulls: typeof opts.skipNulls === "boolean" ? opts.skipNulls : defaults.skipNulls,
        sort: typeof opts.sort === "function" ? opts.sort : null,
        strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults.strictNullHandling
      };
    };
    module.exports = function(object, opts) {
      var obj = object;
      var options = normalizeStringifyOptions(opts);
      var objKeys;
      var filter;
      if (typeof options.filter === "function") {
        filter = options.filter;
        obj = filter("", obj);
      } else if (isArray(options.filter)) {
        filter = options.filter;
        objKeys = filter;
      }
      var keys = [];
      if (typeof obj !== "object" || obj === null) {
        return "";
      }
      var generateArrayPrefix = arrayPrefixGenerators[options.arrayFormat];
      var commaRoundTrip = generateArrayPrefix === "comma" && options.commaRoundTrip;
      if (!objKeys) {
        objKeys = Object.keys(obj);
      }
      if (options.sort) {
        objKeys.sort(options.sort);
      }
      var sideChannel = getSideChannel();
      for (var i = 0; i < objKeys.length; ++i) {
        var key = objKeys[i];
        var value = obj[key];
        if (options.skipNulls && value === null) {
          continue;
        }
        pushToArray(keys, stringify(
          value,
          key,
          generateArrayPrefix,
          commaRoundTrip,
          options.allowEmptyArrays,
          options.strictNullHandling,
          options.skipNulls,
          options.encodeDotInKeys,
          options.encode ? options.encoder : null,
          options.filter,
          options.sort,
          options.allowDots,
          options.serializeDate,
          options.format,
          options.formatter,
          options.encodeValuesOnly,
          options.charset,
          sideChannel
        ));
      }
      var joined = keys.join(options.delimiter);
      var prefix = options.addQueryPrefix === true ? "?" : "";
      if (options.charsetSentinel) {
        if (options.charset === "iso-8859-1") {
          prefix += "utf8=%26%2310003%3B&";
        } else {
          prefix += "utf8=%E2%9C%93&";
        }
      }
      return joined.length > 0 ? prefix + joined : "";
    };
  }
});

// node_modules/qs/lib/parse.js
var require_parse = __commonJS({
  "node_modules/qs/lib/parse.js"(exports, module) {
    "use strict";
    var utils = require_utils();
    var has = Object.prototype.hasOwnProperty;
    var isArray = Array.isArray;
    var defaults = {
      allowDots: false,
      allowEmptyArrays: false,
      allowPrototypes: false,
      allowSparse: false,
      arrayLimit: 20,
      charset: "utf-8",
      charsetSentinel: false,
      comma: false,
      decodeDotInKeys: false,
      decoder: utils.decode,
      delimiter: "&",
      depth: 5,
      duplicates: "combine",
      ignoreQueryPrefix: false,
      interpretNumericEntities: false,
      parameterLimit: 1e3,
      parseArrays: true,
      plainObjects: false,
      strictDepth: false,
      strictNullHandling: false,
      throwOnLimitExceeded: false
    };
    var interpretNumericEntities = function(str) {
      return str.replace(/&#(\d+);/g, function($0, numberStr) {
        return String.fromCharCode(parseInt(numberStr, 10));
      });
    };
    var parseArrayValue = function(val, options, currentArrayLength) {
      if (val && typeof val === "string" && options.comma && val.indexOf(",") > -1) {
        return val.split(",");
      }
      if (options.throwOnLimitExceeded && currentArrayLength >= options.arrayLimit) {
        throw new RangeError("Array limit exceeded. Only " + options.arrayLimit + " element" + (options.arrayLimit === 1 ? "" : "s") + " allowed in an array.");
      }
      return val;
    };
    var isoSentinel = "utf8=%26%2310003%3B";
    var charsetSentinel = "utf8=%E2%9C%93";
    var parseValues = function parseQueryStringValues(str, options) {
      var obj = { __proto__: null };
      var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, "") : str;
      cleanStr = cleanStr.replace(/%5B/gi, "[").replace(/%5D/gi, "]");
      var limit = options.parameterLimit === Infinity ? void 0 : options.parameterLimit;
      var parts = cleanStr.split(
        options.delimiter,
        options.throwOnLimitExceeded ? limit + 1 : limit
      );
      if (options.throwOnLimitExceeded && parts.length > limit) {
        throw new RangeError("Parameter limit exceeded. Only " + limit + " parameter" + (limit === 1 ? "" : "s") + " allowed.");
      }
      var skipIndex = -1;
      var i;
      var charset = options.charset;
      if (options.charsetSentinel) {
        for (i = 0; i < parts.length; ++i) {
          if (parts[i].indexOf("utf8=") === 0) {
            if (parts[i] === charsetSentinel) {
              charset = "utf-8";
            } else if (parts[i] === isoSentinel) {
              charset = "iso-8859-1";
            }
            skipIndex = i;
            i = parts.length;
          }
        }
      }
      for (i = 0; i < parts.length; ++i) {
        if (i === skipIndex) {
          continue;
        }
        var part = parts[i];
        var bracketEqualsPos = part.indexOf("]=");
        var pos = bracketEqualsPos === -1 ? part.indexOf("=") : bracketEqualsPos + 1;
        var key;
        var val;
        if (pos === -1) {
          key = options.decoder(part, defaults.decoder, charset, "key");
          val = options.strictNullHandling ? null : "";
        } else {
          key = options.decoder(part.slice(0, pos), defaults.decoder, charset, "key");
          val = utils.maybeMap(
            parseArrayValue(
              part.slice(pos + 1),
              options,
              isArray(obj[key]) ? obj[key].length : 0
            ),
            function(encodedVal) {
              return options.decoder(encodedVal, defaults.decoder, charset, "value");
            }
          );
        }
        if (val && options.interpretNumericEntities && charset === "iso-8859-1") {
          val = interpretNumericEntities(String(val));
        }
        if (part.indexOf("[]=") > -1) {
          val = isArray(val) ? [val] : val;
        }
        var existing = has.call(obj, key);
        if (existing && options.duplicates === "combine") {
          obj[key] = utils.combine(obj[key], val);
        } else if (!existing || options.duplicates === "last") {
          obj[key] = val;
        }
      }
      return obj;
    };
    var parseObject = function(chain, val, options, valuesParsed) {
      var currentArrayLength = 0;
      if (chain.length > 0 && chain[chain.length - 1] === "[]") {
        var parentKey = chain.slice(0, -1).join("");
        currentArrayLength = Array.isArray(val) && val[parentKey] ? val[parentKey].length : 0;
      }
      var leaf = valuesParsed ? val : parseArrayValue(val, options, currentArrayLength);
      for (var i = chain.length - 1; i >= 0; --i) {
        var obj;
        var root = chain[i];
        if (root === "[]" && options.parseArrays) {
          obj = options.allowEmptyArrays && (leaf === "" || options.strictNullHandling && leaf === null) ? [] : utils.combine([], leaf);
        } else {
          obj = options.plainObjects ? { __proto__: null } : {};
          var cleanRoot = root.charAt(0) === "[" && root.charAt(root.length - 1) === "]" ? root.slice(1, -1) : root;
          var decodedRoot = options.decodeDotInKeys ? cleanRoot.replace(/%2E/g, ".") : cleanRoot;
          var index = parseInt(decodedRoot, 10);
          if (!options.parseArrays && decodedRoot === "") {
            obj = { 0: leaf };
          } else if (!isNaN(index) && root !== decodedRoot && String(index) === decodedRoot && index >= 0 && (options.parseArrays && index <= options.arrayLimit)) {
            obj = [];
            obj[index] = leaf;
          } else if (decodedRoot !== "__proto__") {
            obj[decodedRoot] = leaf;
          }
        }
        leaf = obj;
      }
      return leaf;
    };
    var parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {
      if (!givenKey) {
        return;
      }
      var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, "[$1]") : givenKey;
      var brackets = /(\[[^[\]]*])/;
      var child = /(\[[^[\]]*])/g;
      var segment = options.depth > 0 && brackets.exec(key);
      var parent = segment ? key.slice(0, segment.index) : key;
      var keys = [];
      if (parent) {
        if (!options.plainObjects && has.call(Object.prototype, parent)) {
          if (!options.allowPrototypes) {
            return;
          }
        }
        keys.push(parent);
      }
      var i = 0;
      while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {
        i += 1;
        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
          if (!options.allowPrototypes) {
            return;
          }
        }
        keys.push(segment[1]);
      }
      if (segment) {
        if (options.strictDepth === true) {
          throw new RangeError("Input depth exceeded depth option of " + options.depth + " and strictDepth is true");
        }
        keys.push("[" + key.slice(segment.index) + "]");
      }
      return parseObject(keys, val, options, valuesParsed);
    };
    var normalizeParseOptions = function normalizeParseOptions2(opts) {
      if (!opts) {
        return defaults;
      }
      if (typeof opts.allowEmptyArrays !== "undefined" && typeof opts.allowEmptyArrays !== "boolean") {
        throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");
      }
      if (typeof opts.decodeDotInKeys !== "undefined" && typeof opts.decodeDotInKeys !== "boolean") {
        throw new TypeError("`decodeDotInKeys` option can only be `true` or `false`, when provided");
      }
      if (opts.decoder !== null && typeof opts.decoder !== "undefined" && typeof opts.decoder !== "function") {
        throw new TypeError("Decoder has to be a function.");
      }
      if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
        throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
      }
      if (typeof opts.throwOnLimitExceeded !== "undefined" && typeof opts.throwOnLimitExceeded !== "boolean") {
        throw new TypeError("`throwOnLimitExceeded` option must be a boolean");
      }
      var charset = typeof opts.charset === "undefined" ? defaults.charset : opts.charset;
      var duplicates = typeof opts.duplicates === "undefined" ? defaults.duplicates : opts.duplicates;
      if (duplicates !== "combine" && duplicates !== "first" && duplicates !== "last") {
        throw new TypeError("The duplicates option must be either combine, first, or last");
      }
      var allowDots = typeof opts.allowDots === "undefined" ? opts.decodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;
      return {
        allowDots,
        allowEmptyArrays: typeof opts.allowEmptyArrays === "boolean" ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,
        allowPrototypes: typeof opts.allowPrototypes === "boolean" ? opts.allowPrototypes : defaults.allowPrototypes,
        allowSparse: typeof opts.allowSparse === "boolean" ? opts.allowSparse : defaults.allowSparse,
        arrayLimit: typeof opts.arrayLimit === "number" ? opts.arrayLimit : defaults.arrayLimit,
        charset,
        charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults.charsetSentinel,
        comma: typeof opts.comma === "boolean" ? opts.comma : defaults.comma,
        decodeDotInKeys: typeof opts.decodeDotInKeys === "boolean" ? opts.decodeDotInKeys : defaults.decodeDotInKeys,
        decoder: typeof opts.decoder === "function" ? opts.decoder : defaults.decoder,
        delimiter: typeof opts.delimiter === "string" || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
        // eslint-disable-next-line no-implicit-coercion, no-extra-parens
        depth: typeof opts.depth === "number" || opts.depth === false ? +opts.depth : defaults.depth,
        duplicates,
        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
        interpretNumericEntities: typeof opts.interpretNumericEntities === "boolean" ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
        parameterLimit: typeof opts.parameterLimit === "number" ? opts.parameterLimit : defaults.parameterLimit,
        parseArrays: opts.parseArrays !== false,
        plainObjects: typeof opts.plainObjects === "boolean" ? opts.plainObjects : defaults.plainObjects,
        strictDepth: typeof opts.strictDepth === "boolean" ? !!opts.strictDepth : defaults.strictDepth,
        strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults.strictNullHandling,
        throwOnLimitExceeded: typeof opts.throwOnLimitExceeded === "boolean" ? opts.throwOnLimitExceeded : false
      };
    };
    module.exports = function(str, opts) {
      var options = normalizeParseOptions(opts);
      if (str === "" || str === null || typeof str === "undefined") {
        return options.plainObjects ? { __proto__: null } : {};
      }
      var tempObj = typeof str === "string" ? parseValues(str, options) : str;
      var obj = options.plainObjects ? { __proto__: null } : {};
      var keys = Object.keys(tempObj);
      for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        var newObj = parseKeys(key, tempObj[key], options, typeof str === "string");
        obj = utils.merge(obj, newObj, options);
      }
      if (options.allowSparse === true) {
        return obj;
      }
      return utils.compact(obj);
    };
  }
});

// node_modules/qs/lib/index.js
var require_lib = __commonJS({
  "node_modules/qs/lib/index.js"(exports, module) {
    "use strict";
    var stringify = require_stringify();
    var parse = require_parse();
    var formats = require_formats();
    module.exports = {
      formats,
      parse,
      stringify
    };
  }
});

// node_modules/elevenlabs/core/fetcher/createRequestUrl.js
var require_createRequestUrl = __commonJS({
  "node_modules/elevenlabs/core/fetcher/createRequestUrl.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createRequestUrl = createRequestUrl;
    var qs_1 = __importDefault(require_lib());
    function createRequestUrl(baseUrl, queryParameters) {
      return Object.keys(queryParameters !== null && queryParameters !== void 0 ? queryParameters : {}).length > 0 ? `${baseUrl}?${qs_1.default.stringify(queryParameters, { arrayFormat: "repeat" })}` : baseUrl;
    }
  }
});

// node_modules/elevenlabs/core/runtime/runtime.js
var require_runtime = __commonJS({
  "node_modules/elevenlabs/core/runtime/runtime.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RUNTIME = void 0;
    exports.RUNTIME = evaluateRuntime();
    function evaluateRuntime() {
      var _a, _b, _c, _d, _e;
      const isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined";
      if (isBrowser) {
        return {
          type: "browser",
          version: window.navigator.userAgent
        };
      }
      const isCloudflare = typeof globalThis !== "undefined" && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) === "Cloudflare-Workers";
      if (isCloudflare) {
        return {
          type: "workerd"
        };
      }
      const isEdgeRuntime = typeof EdgeRuntime === "string";
      if (isEdgeRuntime) {
        return {
          type: "edge-runtime"
        };
      }
      const isWebWorker = typeof self === "object" && // @ts-ignore
      typeof (self === null || self === void 0 ? void 0 : self.importScripts) === "function" && (((_b = self.constructor) === null || _b === void 0 ? void 0 : _b.name) === "DedicatedWorkerGlobalScope" || ((_c = self.constructor) === null || _c === void 0 ? void 0 : _c.name) === "ServiceWorkerGlobalScope" || ((_d = self.constructor) === null || _d === void 0 ? void 0 : _d.name) === "SharedWorkerGlobalScope");
      if (isWebWorker) {
        return {
          type: "web-worker"
        };
      }
      const isDeno = typeof Deno !== "undefined" && typeof Deno.version !== "undefined" && typeof Deno.version.deno !== "undefined";
      if (isDeno) {
        return {
          type: "deno",
          version: Deno.version.deno
        };
      }
      const isBun = typeof Bun !== "undefined" && typeof Bun.version !== "undefined";
      if (isBun) {
        return {
          type: "bun",
          version: Bun.version
        };
      }
      const isNode = typeof process !== "undefined" && "version" in process && !!process.version && "versions" in process && !!((_e = process.versions) === null || _e === void 0 ? void 0 : _e.node);
      if (isNode) {
        return {
          type: "node",
          version: process.versions.node,
          parsedVersion: Number(process.versions.node.split(".")[0])
        };
      }
      const isReactNative = typeof navigator !== "undefined" && (navigator === null || navigator === void 0 ? void 0 : navigator.product) === "ReactNative";
      if (isReactNative) {
        return {
          type: "react-native"
        };
      }
      return {
        type: "unknown"
      };
    }
  }
});

// node_modules/elevenlabs/core/runtime/index.js
var require_runtime2 = __commonJS({
  "node_modules/elevenlabs/core/runtime/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RUNTIME = void 0;
    var runtime_1 = require_runtime();
    Object.defineProperty(exports, "RUNTIME", { enumerable: true, get: function() {
      return runtime_1.RUNTIME;
    } });
  }
});

// node_modules/elevenlabs/core/fetcher/getFetchFn.js
var require_getFetchFn = __commonJS({
  "node_modules/elevenlabs/core/fetcher/getFetchFn.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getFetchFn = getFetchFn;
    var runtime_1 = require_runtime2();
    function getFetchFn() {
      return __awaiter(this, void 0, void 0, function* () {
        if (runtime_1.RUNTIME.type === "node" && runtime_1.RUNTIME.parsedVersion != null && runtime_1.RUNTIME.parsedVersion >= 18) {
          return fetch;
        }
        if (runtime_1.RUNTIME.type === "node") {
          return (yield Promise.resolve().then(() => __importStar(require_browser()))).default;
        }
        if (typeof fetch == "function") {
          return fetch;
        }
        return (yield Promise.resolve().then(() => __importStar(require_browser()))).default;
      });
    }
  }
});

// node_modules/elevenlabs/core/fetcher/getRequestBody.js
var require_getRequestBody = __commonJS({
  "node_modules/elevenlabs/core/fetcher/getRequestBody.js"(exports) {
    "use strict";
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getRequestBody = getRequestBody;
    var json_1 = require_json();
    function getRequestBody(_a) {
      return __awaiter(this, arguments, void 0, function* ({ body, type }) {
        if (type.includes("json")) {
          return (0, json_1.toJson)(body);
        } else {
          return body;
        }
      });
    }
  }
});

// node_modules/elevenlabs/core/fetcher/getResponseBody.js
var require_getResponseBody = __commonJS({
  "node_modules/elevenlabs/core/fetcher/getResponseBody.js"(exports) {
    "use strict";
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getResponseBody = getResponseBody;
    function getResponseBody(response, responseType) {
      return __awaiter(this, void 0, void 0, function* () {
        if (response.body != null && responseType === "blob") {
          return yield response.blob();
        } else if (response.body != null && responseType === "arrayBuffer") {
          return yield response.arrayBuffer();
        } else if (response.body != null && responseType === "sse") {
          return response.body;
        } else if (response.body != null && responseType === "streaming") {
          return response.body;
        } else if (response.body != null && responseType === "text") {
          return yield response.text();
        } else {
          const text = yield response.text();
          if (text.length > 0) {
            try {
              let responseBody = JSON.parse(text);
              return responseBody;
            } catch (err) {
              return {
                ok: false,
                error: {
                  reason: "non-json",
                  statusCode: response.status,
                  rawBody: text
                }
              };
            }
          } else {
            return void 0;
          }
        }
      });
    }
  }
});

// node_modules/elevenlabs/core/fetcher/signals.js
var require_signals = __commonJS({
  "node_modules/elevenlabs/core/fetcher/signals.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getTimeoutSignal = getTimeoutSignal;
    exports.anySignal = anySignal;
    var TIMEOUT = "timeout";
    function getTimeoutSignal(timeoutMs) {
      const controller = new AbortController();
      const abortId = setTimeout(() => controller.abort(TIMEOUT), timeoutMs);
      return { signal: controller.signal, abortId };
    }
    function anySignal(...args) {
      const signals = args.length === 1 && Array.isArray(args[0]) ? args[0] : args;
      const controller = new AbortController();
      for (const signal of signals) {
        if (signal.aborted) {
          controller.abort(signal === null || signal === void 0 ? void 0 : signal.reason);
          break;
        }
        signal.addEventListener("abort", () => controller.abort(signal === null || signal === void 0 ? void 0 : signal.reason), {
          signal: controller.signal
        });
      }
      return controller.signal;
    }
  }
});

// node_modules/elevenlabs/core/fetcher/makeRequest.js
var require_makeRequest = __commonJS({
  "node_modules/elevenlabs/core/fetcher/makeRequest.js"(exports) {
    "use strict";
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.makeRequest = void 0;
    var signals_1 = require_signals();
    var makeRequest = (fetchFn, url, method, headers, requestBody, timeoutMs, abortSignal, withCredentials, duplex) => __awaiter(void 0, void 0, void 0, function* () {
      const signals = [];
      let timeoutAbortId = void 0;
      if (timeoutMs != null) {
        const { signal, abortId } = (0, signals_1.getTimeoutSignal)(timeoutMs);
        timeoutAbortId = abortId;
        signals.push(signal);
      }
      if (abortSignal != null) {
        signals.push(abortSignal);
      }
      let newSignals = (0, signals_1.anySignal)(signals);
      const response = yield fetchFn(url, {
        method,
        headers,
        body: requestBody,
        signal: newSignals,
        credentials: withCredentials ? "include" : void 0,
        // @ts-ignore
        duplex
      });
      if (timeoutAbortId != null) {
        clearTimeout(timeoutAbortId);
      }
      return response;
    });
    exports.makeRequest = makeRequest;
  }
});

// node_modules/elevenlabs/core/fetcher/requestWithRetries.js
var require_requestWithRetries = __commonJS({
  "node_modules/elevenlabs/core/fetcher/requestWithRetries.js"(exports) {
    "use strict";
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.requestWithRetries = requestWithRetries;
    var INITIAL_RETRY_DELAY = 1e3;
    var MAX_RETRY_DELAY = 6e4;
    var DEFAULT_MAX_RETRIES = 2;
    var JITTER_FACTOR = 0.2;
    function addJitter(delay) {
      const jitterMultiplier = 1 + (Math.random() * 2 - 1) * JITTER_FACTOR;
      return delay * jitterMultiplier;
    }
    function requestWithRetries(requestFn_1) {
      return __awaiter(this, arguments, void 0, function* (requestFn, maxRetries = DEFAULT_MAX_RETRIES) {
        let response = yield requestFn();
        for (let i = 0; i < maxRetries; ++i) {
          if ([408, 429].includes(response.status) || response.status >= 500) {
            const baseDelay = Math.min(INITIAL_RETRY_DELAY * Math.pow(2, i), MAX_RETRY_DELAY);
            const delayWithJitter = addJitter(baseDelay);
            yield new Promise((resolve) => setTimeout(resolve, delayWithJitter));
            response = yield requestFn();
          } else {
            break;
          }
        }
        return response;
      });
    }
  }
});

// node_modules/elevenlabs/core/fetcher/Fetcher.js
var require_Fetcher = __commonJS({
  "node_modules/elevenlabs/core/fetcher/Fetcher.js"(exports) {
    "use strict";
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fetcher = void 0;
    exports.fetcherImpl = fetcherImpl;
    var json_1 = require_json();
    var createRequestUrl_1 = require_createRequestUrl();
    var getFetchFn_1 = require_getFetchFn();
    var getRequestBody_1 = require_getRequestBody();
    var getResponseBody_1 = require_getResponseBody();
    var makeRequest_1 = require_makeRequest();
    var requestWithRetries_1 = require_requestWithRetries();
    function fetcherImpl(args) {
      return __awaiter(this, void 0, void 0, function* () {
        const headers = {};
        if (args.body !== void 0 && args.contentType != null) {
          headers["Content-Type"] = args.contentType;
        }
        if (args.headers != null) {
          for (const [key, value] of Object.entries(args.headers)) {
            if (value != null) {
              headers[key] = value;
            }
          }
        }
        const url = (0, createRequestUrl_1.createRequestUrl)(args.url, args.queryParameters);
        const requestBody = yield (0, getRequestBody_1.getRequestBody)({
          body: args.body,
          type: args.requestType === "json" ? "json" : "other"
        });
        const fetchFn = yield (0, getFetchFn_1.getFetchFn)();
        try {
          const response = yield (0, requestWithRetries_1.requestWithRetries)(() => __awaiter(this, void 0, void 0, function* () {
            return (0, makeRequest_1.makeRequest)(fetchFn, url, args.method, headers, requestBody, args.timeoutMs, args.abortSignal, args.withCredentials, args.duplex);
          }), args.maxRetries);
          const responseBody = yield (0, getResponseBody_1.getResponseBody)(response, args.responseType);
          if (response.status >= 200 && response.status < 400) {
            return {
              ok: true,
              body: responseBody,
              headers: response.headers
            };
          } else {
            return {
              ok: false,
              error: {
                reason: "status-code",
                statusCode: response.status,
                body: responseBody
              }
            };
          }
        } catch (error) {
          if (args.abortSignal != null && args.abortSignal.aborted) {
            return {
              ok: false,
              error: {
                reason: "unknown",
                errorMessage: "The user aborted a request"
              }
            };
          } else if (error instanceof Error && error.name === "AbortError") {
            return {
              ok: false,
              error: {
                reason: "timeout"
              }
            };
          } else if (error instanceof Error) {
            return {
              ok: false,
              error: {
                reason: "unknown",
                errorMessage: error.message
              }
            };
          }
          return {
            ok: false,
            error: {
              reason: "unknown",
              errorMessage: (0, json_1.toJson)(error)
            }
          };
        }
      });
    }
    exports.fetcher = fetcherImpl;
  }
});

// node_modules/elevenlabs/core/fetcher/getHeader.js
var require_getHeader = __commonJS({
  "node_modules/elevenlabs/core/fetcher/getHeader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getHeader = getHeader;
    function getHeader(headers, header) {
      for (const [headerKey, headerValue] of Object.entries(headers)) {
        if (headerKey.toLowerCase() === header.toLowerCase()) {
          return headerValue;
        }
      }
      return void 0;
    }
  }
});

// node_modules/elevenlabs/core/fetcher/Supplier.js
var require_Supplier = __commonJS({
  "node_modules/elevenlabs/core/fetcher/Supplier.js"(exports) {
    "use strict";
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Supplier = void 0;
    exports.Supplier = {
      get: (supplier) => __awaiter(void 0, void 0, void 0, function* () {
        if (typeof supplier === "function") {
          return supplier();
        } else {
          return supplier;
        }
      })
    };
  }
});

// node_modules/elevenlabs/core/fetcher/index.js
var require_fetcher = __commonJS({
  "node_modules/elevenlabs/core/fetcher/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Supplier = exports.getHeader = exports.fetcher = void 0;
    var Fetcher_1 = require_Fetcher();
    Object.defineProperty(exports, "fetcher", { enumerable: true, get: function() {
      return Fetcher_1.fetcher;
    } });
    var getHeader_1 = require_getHeader();
    Object.defineProperty(exports, "getHeader", { enumerable: true, get: function() {
      return getHeader_1.getHeader;
    } });
    var Supplier_1 = require_Supplier();
    Object.defineProperty(exports, "Supplier", { enumerable: true, get: function() {
      return Supplier_1.Supplier;
    } });
  }
});

// node_modules/elevenlabs/node_modules/formdata-node/lib/browser.cjs
var require_browser3 = __commonJS({
  "node_modules/elevenlabs/node_modules/formdata-node/lib/browser.cjs"(exports, module) {
    "use strict";
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var browser_exports = {};
    __export(browser_exports, {
      Blob: () => Blob2,
      File: () => File,
      FormData: () => FormData2
    });
    module.exports = __toCommonJS(browser_exports);
    var globalObject = function() {
      if (typeof globalThis !== "undefined") {
        return globalThis;
      }
      if (typeof self !== "undefined") {
        return self;
      }
      return window;
    }();
    var { FormData: FormData2, Blob: Blob2, File } = globalObject;
  }
});

// node_modules/elevenlabs/node_modules/form-data-encoder/lib/index.cjs
var require_lib2 = __commonJS({
  "node_modules/elevenlabs/node_modules/form-data-encoder/lib/index.cjs"(exports, module) {
    "use strict";
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __typeError = (msg) => {
      throw TypeError(msg);
    };
    var __export = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var __accessCheck = (obj, member, msg) => member.has(obj) || __typeError("Cannot " + msg);
    var __privateGet = (obj, member, getter) => (__accessCheck(obj, member, "read from private field"), getter ? getter.call(obj) : member.get(obj));
    var __privateAdd = (obj, member, value) => member.has(obj) ? __typeError("Cannot add the same private member more than once") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
    var __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, "write to private field"), setter ? setter.call(obj, value) : member.set(obj, value), value);
    var __privateMethod = (obj, member, method) => (__accessCheck(obj, member, "access private method"), method);
    var src_exports = {};
    __export(src_exports, {
      FormDataEncoder: () => FormDataEncoder,
      isFile: () => isFile,
      isFormData: () => isFormData
    });
    module.exports = __toCommonJS(src_exports);
    var MAX_CHUNK_SIZE = 65536;
    function* chunk(value) {
      if (value.byteLength <= MAX_CHUNK_SIZE) {
        yield value;
        return;
      }
      let offset = 0;
      while (offset < value.byteLength) {
        const size = Math.min(value.byteLength - offset, MAX_CHUNK_SIZE);
        const buffer = value.buffer.slice(offset, offset + size);
        offset += buffer.byteLength;
        yield new Uint8Array(buffer);
      }
    }
    var alphabet = "abcdefghijklmnopqrstuvwxyz0123456789";
    function createBoundary() {
      let size = 16;
      let res = "";
      while (size--) {
        res += alphabet[Math.random() * alphabet.length << 0];
      }
      return res;
    }
    var escapeName = (name) => String(name).replace(/\r/g, "%0D").replace(/\n/g, "%0A").replace(/"/g, "%22");
    var isFunction = (value) => typeof value === "function";
    var isReadableStreamFallback = (value) => !!value && typeof value === "object" && !Array.isArray(value) && isFunction(value.getReader);
    var isAsyncIterable = (value) => isFunction(value[Symbol.asyncIterator]);
    async function* readStream(readable) {
      const reader = readable.getReader();
      while (true) {
        const { done, value } = await reader.read();
        if (done) {
          break;
        }
        yield value;
      }
    }
    async function* chunkStream(stream) {
      for await (const value of stream) {
        yield* chunk(value);
      }
    }
    var getStreamIterator = (source) => {
      if (isAsyncIterable(source)) {
        return chunkStream(source);
      }
      if (isReadableStreamFallback(source)) {
        return chunkStream(readStream(source));
      }
      throw new TypeError(
        "Unsupported data source: Expected either ReadableStream or async iterable."
      );
    };
    var isFile = (value) => Boolean(
      value && typeof value === "object" && isFunction(value.constructor) && value[Symbol.toStringTag] === "File" && isFunction(value.stream) && value.name != null
    );
    var isFormData = (value) => Boolean(
      value && isFunction(value.constructor) && value[Symbol.toStringTag] === "FormData" && isFunction(value.append) && isFunction(value.getAll) && isFunction(value.entries) && isFunction(value[Symbol.iterator])
    );
    var getType = (value) => Object.prototype.toString.call(value).slice(8, -1).toLowerCase();
    function isPlainObject(value) {
      var _a, _b;
      if (getType(value) !== "object") {
        return false;
      }
      const pp = Object.getPrototypeOf(value);
      if (pp === null || pp === void 0) {
        return true;
      }
      return ((_b = (_a = pp.constructor) == null ? void 0 : _a.toString) == null ? void 0 : _b.call(_a)) === Object.toString();
    }
    var normalizeValue = (value) => String(value).replace(/\r|\n/g, (match, i, str) => {
      if (match === "\r" && str[i + 1] !== "\n" || match === "\n" && str[i - 1] !== "\r") {
        return "\r\n";
      }
      return match;
    });
    function getProperty(target, prop) {
      if (typeof prop === "string") {
        for (const [name, value] of Object.entries(target)) {
          if (prop.toLowerCase() === name.toLowerCase()) {
            return value;
          }
        }
      }
      return void 0;
    }
    var proxyHeaders = (object) => new Proxy(
      object,
      {
        get: (target, prop) => getProperty(target, prop),
        has: (target, prop) => getProperty(target, prop) !== void 0
      }
    );
    var defaultOptions = {
      enableAdditionalHeaders: false
    };
    var readonlyProp = { writable: false, configurable: false };
    var _CRLF;
    var _CRLF_BYTES;
    var _CRLF_BYTES_LENGTH;
    var _DASHES;
    var _encoder;
    var _footer;
    var _form;
    var _options;
    var _FormDataEncoder_instances;
    var getFieldHeader_fn;
    var getContentLength_fn;
    var FormDataEncoder = class {
      constructor(form, boundaryOrOptions, options) {
        __privateAdd(this, _FormDataEncoder_instances);
        __privateAdd(this, _CRLF, "\r\n");
        __privateAdd(this, _CRLF_BYTES);
        __privateAdd(this, _CRLF_BYTES_LENGTH);
        __privateAdd(this, _DASHES, "-".repeat(2));
        __privateAdd(this, _encoder, new TextEncoder());
        __privateAdd(this, _footer);
        __privateAdd(this, _form);
        __privateAdd(this, _options);
        if (!isFormData(form)) {
          throw new TypeError("Expected first argument to be a FormData instance.");
        }
        let boundary;
        if (isPlainObject(boundaryOrOptions)) {
          options = boundaryOrOptions;
        } else {
          boundary = boundaryOrOptions;
        }
        if (!boundary) {
          boundary = `form-data-encoder-${createBoundary()}`;
        }
        if (typeof boundary !== "string") {
          throw new TypeError("Expected boundary argument to be a string.");
        }
        if (options && !isPlainObject(options)) {
          throw new TypeError("Expected options argument to be an object.");
        }
        __privateSet(this, _form, Array.from(form.entries()));
        __privateSet(this, _options, { ...defaultOptions, ...options });
        __privateSet(this, _CRLF_BYTES, __privateGet(this, _encoder).encode(__privateGet(this, _CRLF)));
        __privateSet(this, _CRLF_BYTES_LENGTH, __privateGet(this, _CRLF_BYTES).byteLength);
        this.boundary = boundary;
        this.contentType = `multipart/form-data; boundary=${this.boundary}`;
        __privateSet(this, _footer, __privateGet(this, _encoder).encode(
          `${__privateGet(this, _DASHES)}${this.boundary}${__privateGet(this, _DASHES)}${__privateGet(this, _CRLF).repeat(2)}`
        ));
        const headers = {
          "Content-Type": this.contentType
        };
        const contentLength = __privateMethod(this, _FormDataEncoder_instances, getContentLength_fn).call(this);
        if (contentLength) {
          this.contentLength = contentLength;
          headers["Content-Length"] = contentLength;
        }
        this.headers = proxyHeaders(Object.freeze(headers));
        Object.defineProperties(this, {
          boundary: readonlyProp,
          contentType: readonlyProp,
          contentLength: readonlyProp,
          headers: readonlyProp
        });
      }
      /**
       * Creates an iterator allowing to go through form-data parts (with metadata).
       * This method **will not** read the files and **will not** split values big into smaller chunks.
       *
       * Using this method, you can convert form-data content into Blob:
       *
       * @example
       *
       * ```ts
       * import {Readable} from "stream"
       *
       * import {FormDataEncoder} from "form-data-encoder"
       *
       * import {FormData} from "formdata-polyfill/esm-min.js"
       * import {fileFrom} from "fetch-blob/form.js"
       * import {File} from "fetch-blob/file.js"
       * import {Blob} from "fetch-blob"
       *
       * import fetch from "node-fetch"
       *
       * const form = new FormData()
       *
       * form.set("field", "Just a random string")
       * form.set("file", new File(["Using files is class amazing"]))
       * form.set("fileFromPath", await fileFrom("path/to/a/file.txt"))
       *
       * const encoder = new FormDataEncoder(form)
       *
       * const options = {
       *   method: "post",
       *   body: new Blob(encoder, {type: encoder.contentType})
       * }
       *
       * const response = await fetch("https://httpbin.org/post", options)
       *
       * console.log(await response.json())
       * ```
       */
      *values() {
        for (const [name, raw] of __privateGet(this, _form)) {
          const value = isFile(raw) ? raw : __privateGet(this, _encoder).encode(normalizeValue(raw));
          yield __privateMethod(this, _FormDataEncoder_instances, getFieldHeader_fn).call(this, name, value);
          yield value;
          yield __privateGet(this, _CRLF_BYTES);
        }
        yield __privateGet(this, _footer);
      }
      /**
       * Creates an async iterator allowing to perform the encoding by portions.
       * This method reads through files and splits big values into smaller pieces (65536 bytes per each).
       *
       * @example
       *
       * ```ts
       * import {Readable} from "stream"
       *
       * import {FormData, File, fileFromPath} from "formdata-node"
       * import {FormDataEncoder} from "form-data-encoder"
       *
       * import fetch from "node-fetch"
       *
       * const form = new FormData()
       *
       * form.set("field", "Just a random string")
       * form.set("file", new File(["Using files is class amazing"], "file.txt"))
       * form.set("fileFromPath", await fileFromPath("path/to/a/file.txt"))
       *
       * const encoder = new FormDataEncoder(form)
       *
       * const options = {
       *   method: "post",
       *   headers: encoder.headers,
       *   body: Readable.from(encoder.encode()) // or Readable.from(encoder)
       * }
       *
       * const response = await fetch("https://httpbin.org/post", options)
       *
       * console.log(await response.json())
       * ```
       */
      async *encode() {
        for (const part of this.values()) {
          if (isFile(part)) {
            yield* getStreamIterator(part.stream());
          } else {
            yield* chunk(part);
          }
        }
      }
      /**
       * Creates an iterator allowing to read through the encoder data using for...of loops
       */
      [Symbol.iterator]() {
        return this.values();
      }
      /**
       * Creates an **async** iterator allowing to read through the encoder data using for-await...of loops
       */
      [Symbol.asyncIterator]() {
        return this.encode();
      }
    };
    _CRLF = /* @__PURE__ */ new WeakMap();
    _CRLF_BYTES = /* @__PURE__ */ new WeakMap();
    _CRLF_BYTES_LENGTH = /* @__PURE__ */ new WeakMap();
    _DASHES = /* @__PURE__ */ new WeakMap();
    _encoder = /* @__PURE__ */ new WeakMap();
    _footer = /* @__PURE__ */ new WeakMap();
    _form = /* @__PURE__ */ new WeakMap();
    _options = /* @__PURE__ */ new WeakMap();
    _FormDataEncoder_instances = /* @__PURE__ */ new WeakSet();
    getFieldHeader_fn = function(name, value) {
      let header = "";
      header += `${__privateGet(this, _DASHES)}${this.boundary}${__privateGet(this, _CRLF)}`;
      header += `Content-Disposition: form-data; name="${escapeName(name)}"`;
      if (isFile(value)) {
        header += `; filename="${escapeName(value.name)}"${__privateGet(this, _CRLF)}`;
        header += `Content-Type: ${value.type || "application/octet-stream"}`;
      }
      if (__privateGet(this, _options).enableAdditionalHeaders === true) {
        const size = isFile(value) ? value.size : value.byteLength;
        if (size != null && !isNaN(size)) {
          header += `${__privateGet(this, _CRLF)}Content-Length: ${size}`;
        }
      }
      return __privateGet(this, _encoder).encode(`${header}${__privateGet(this, _CRLF).repeat(2)}`);
    };
    getContentLength_fn = function() {
      let length = 0;
      for (const [name, raw] of __privateGet(this, _form)) {
        const value = isFile(raw) ? raw : __privateGet(this, _encoder).encode(normalizeValue(raw));
        const size = isFile(value) ? value.size : value.byteLength;
        if (size == null || isNaN(size)) {
          return void 0;
        }
        length += __privateMethod(this, _FormDataEncoder_instances, getFieldHeader_fn).call(this, name, value).byteLength;
        length += size;
        length += __privateGet(this, _CRLF_BYTES_LENGTH);
      }
      return String(length + __privateGet(this, _footer).byteLength);
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/ours/primordials.js
var require_primordials = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/ours/primordials.js"(exports, module) {
    "use strict";
    var AggregateError2 = class extends Error {
      constructor(errors) {
        if (!Array.isArray(errors)) {
          throw new TypeError(`Expected input to be an Array, got ${typeof errors}`);
        }
        let message = "";
        for (let i = 0; i < errors.length; i++) {
          message += `    ${errors[i].stack}
`;
        }
        super(message);
        this.name = "AggregateError";
        this.errors = errors;
      }
    };
    module.exports = {
      AggregateError: AggregateError2,
      ArrayIsArray(self2) {
        return Array.isArray(self2);
      },
      ArrayPrototypeIncludes(self2, el) {
        return self2.includes(el);
      },
      ArrayPrototypeIndexOf(self2, el) {
        return self2.indexOf(el);
      },
      ArrayPrototypeJoin(self2, sep) {
        return self2.join(sep);
      },
      ArrayPrototypeMap(self2, fn) {
        return self2.map(fn);
      },
      ArrayPrototypePop(self2, el) {
        return self2.pop(el);
      },
      ArrayPrototypePush(self2, el) {
        return self2.push(el);
      },
      ArrayPrototypeSlice(self2, start, end) {
        return self2.slice(start, end);
      },
      Error,
      FunctionPrototypeCall(fn, thisArgs, ...args) {
        return fn.call(thisArgs, ...args);
      },
      FunctionPrototypeSymbolHasInstance(self2, instance) {
        return Function.prototype[Symbol.hasInstance].call(self2, instance);
      },
      MathFloor: Math.floor,
      Number,
      NumberIsInteger: Number.isInteger,
      NumberIsNaN: Number.isNaN,
      NumberMAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER,
      NumberMIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER,
      NumberParseInt: Number.parseInt,
      ObjectDefineProperties(self2, props) {
        return Object.defineProperties(self2, props);
      },
      ObjectDefineProperty(self2, name, prop) {
        return Object.defineProperty(self2, name, prop);
      },
      ObjectGetOwnPropertyDescriptor(self2, name) {
        return Object.getOwnPropertyDescriptor(self2, name);
      },
      ObjectKeys(obj) {
        return Object.keys(obj);
      },
      ObjectSetPrototypeOf(target, proto) {
        return Object.setPrototypeOf(target, proto);
      },
      Promise,
      PromisePrototypeCatch(self2, fn) {
        return self2.catch(fn);
      },
      PromisePrototypeThen(self2, thenFn, catchFn) {
        return self2.then(thenFn, catchFn);
      },
      PromiseReject(err) {
        return Promise.reject(err);
      },
      PromiseResolve(val) {
        return Promise.resolve(val);
      },
      ReflectApply: Reflect.apply,
      RegExpPrototypeTest(self2, value) {
        return self2.test(value);
      },
      SafeSet: Set,
      String,
      StringPrototypeSlice(self2, start, end) {
        return self2.slice(start, end);
      },
      StringPrototypeToLowerCase(self2) {
        return self2.toLowerCase();
      },
      StringPrototypeToUpperCase(self2) {
        return self2.toUpperCase();
      },
      StringPrototypeTrim(self2) {
        return self2.trim();
      },
      Symbol,
      SymbolFor: Symbol.for,
      SymbolAsyncIterator: Symbol.asyncIterator,
      SymbolHasInstance: Symbol.hasInstance,
      SymbolIterator: Symbol.iterator,
      SymbolDispose: Symbol.dispose || Symbol("Symbol.dispose"),
      SymbolAsyncDispose: Symbol.asyncDispose || Symbol("Symbol.asyncDispose"),
      TypedArrayPrototypeSet(self2, buf, len) {
        return self2.set(buf, len);
      },
      Boolean,
      Uint8Array
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/ours/util/inspect.js
var require_inspect = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/ours/util/inspect.js"(exports, module) {
    "use strict";
    module.exports = {
      format(format, ...args) {
        return format.replace(/%([sdifj])/g, function(...[_unused, type]) {
          const replacement = args.shift();
          if (type === "f") {
            return replacement.toFixed(6);
          } else if (type === "j") {
            return JSON.stringify(replacement);
          } else if (type === "s" && typeof replacement === "object") {
            const ctor = replacement.constructor !== Object ? replacement.constructor.name : "";
            return `${ctor} {}`.trim();
          } else {
            return replacement.toString();
          }
        });
      },
      inspect(value) {
        switch (typeof value) {
          case "string":
            if (value.includes("'")) {
              if (!value.includes('"')) {
                return `"${value}"`;
              } else if (!value.includes("`") && !value.includes("${")) {
                return `\`${value}\``;
              }
            }
            return `'${value}'`;
          case "number":
            if (isNaN(value)) {
              return "NaN";
            } else if (Object.is(value, -0)) {
              return String(value);
            }
            return value;
          case "bigint":
            return `${String(value)}n`;
          case "boolean":
          case "undefined":
            return String(value);
          case "object":
            return "{}";
        }
      }
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/ours/errors.js
var require_errors3 = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/ours/errors.js"(exports, module) {
    "use strict";
    var { format, inspect } = require_inspect();
    var { AggregateError: CustomAggregateError } = require_primordials();
    var AggregateError2 = globalThis.AggregateError || CustomAggregateError;
    var kIsNodeError = Symbol("kIsNodeError");
    var kTypes = [
      "string",
      "function",
      "number",
      "object",
      // Accept 'Function' and 'Object' as alternative to the lower cased version.
      "Function",
      "Object",
      "boolean",
      "bigint",
      "symbol"
    ];
    var classRegExp = /^([A-Z][a-z0-9]*)+$/;
    var nodeInternalPrefix = "__node_internal_";
    var codes = {};
    function assert(value, message) {
      if (!value) {
        throw new codes.ERR_INTERNAL_ASSERTION(message);
      }
    }
    function addNumericalSeparator(val) {
      let res = "";
      let i = val.length;
      const start = val[0] === "-" ? 1 : 0;
      for (; i >= start + 4; i -= 3) {
        res = `_${val.slice(i - 3, i)}${res}`;
      }
      return `${val.slice(0, i)}${res}`;
    }
    function getMessage(key, msg, args) {
      if (typeof msg === "function") {
        assert(
          msg.length <= args.length,
          // Default options do not count.
          `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${msg.length}).`
        );
        return msg(...args);
      }
      const expectedLength = (msg.match(/%[dfijoOs]/g) || []).length;
      assert(
        expectedLength === args.length,
        `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${expectedLength}).`
      );
      if (args.length === 0) {
        return msg;
      }
      return format(msg, ...args);
    }
    function E(code, message, Base) {
      if (!Base) {
        Base = Error;
      }
      class NodeError extends Base {
        constructor(...args) {
          super(getMessage(code, message, args));
        }
        toString() {
          return `${this.name} [${code}]: ${this.message}`;
        }
      }
      Object.defineProperties(NodeError.prototype, {
        name: {
          value: Base.name,
          writable: true,
          enumerable: false,
          configurable: true
        },
        toString: {
          value() {
            return `${this.name} [${code}]: ${this.message}`;
          },
          writable: true,
          enumerable: false,
          configurable: true
        }
      });
      NodeError.prototype.code = code;
      NodeError.prototype[kIsNodeError] = true;
      codes[code] = NodeError;
    }
    function hideStackFrames(fn) {
      const hidden = nodeInternalPrefix + fn.name;
      Object.defineProperty(fn, "name", {
        value: hidden
      });
      return fn;
    }
    function aggregateTwoErrors(innerError, outerError) {
      if (innerError && outerError && innerError !== outerError) {
        if (Array.isArray(outerError.errors)) {
          outerError.errors.push(innerError);
          return outerError;
        }
        const err = new AggregateError2([outerError, innerError], outerError.message);
        err.code = outerError.code;
        return err;
      }
      return innerError || outerError;
    }
    var AbortError = class extends Error {
      constructor(message = "The operation was aborted", options = void 0) {
        if (options !== void 0 && typeof options !== "object") {
          throw new codes.ERR_INVALID_ARG_TYPE("options", "Object", options);
        }
        super(message, options);
        this.code = "ABORT_ERR";
        this.name = "AbortError";
      }
    };
    E("ERR_ASSERTION", "%s", Error);
    E(
      "ERR_INVALID_ARG_TYPE",
      (name, expected, actual) => {
        assert(typeof name === "string", "'name' must be a string");
        if (!Array.isArray(expected)) {
          expected = [expected];
        }
        let msg = "The ";
        if (name.endsWith(" argument")) {
          msg += `${name} `;
        } else {
          msg += `"${name}" ${name.includes(".") ? "property" : "argument"} `;
        }
        msg += "must be ";
        const types = [];
        const instances = [];
        const other = [];
        for (const value of expected) {
          assert(typeof value === "string", "All expected entries have to be of type string");
          if (kTypes.includes(value)) {
            types.push(value.toLowerCase());
          } else if (classRegExp.test(value)) {
            instances.push(value);
          } else {
            assert(value !== "object", 'The value "object" should be written as "Object"');
            other.push(value);
          }
        }
        if (instances.length > 0) {
          const pos = types.indexOf("object");
          if (pos !== -1) {
            types.splice(types, pos, 1);
            instances.push("Object");
          }
        }
        if (types.length > 0) {
          switch (types.length) {
            case 1:
              msg += `of type ${types[0]}`;
              break;
            case 2:
              msg += `one of type ${types[0]} or ${types[1]}`;
              break;
            default: {
              const last = types.pop();
              msg += `one of type ${types.join(", ")}, or ${last}`;
            }
          }
          if (instances.length > 0 || other.length > 0) {
            msg += " or ";
          }
        }
        if (instances.length > 0) {
          switch (instances.length) {
            case 1:
              msg += `an instance of ${instances[0]}`;
              break;
            case 2:
              msg += `an instance of ${instances[0]} or ${instances[1]}`;
              break;
            default: {
              const last = instances.pop();
              msg += `an instance of ${instances.join(", ")}, or ${last}`;
            }
          }
          if (other.length > 0) {
            msg += " or ";
          }
        }
        switch (other.length) {
          case 0:
            break;
          case 1:
            if (other[0].toLowerCase() !== other[0]) {
              msg += "an ";
            }
            msg += `${other[0]}`;
            break;
          case 2:
            msg += `one of ${other[0]} or ${other[1]}`;
            break;
          default: {
            const last = other.pop();
            msg += `one of ${other.join(", ")}, or ${last}`;
          }
        }
        if (actual == null) {
          msg += `. Received ${actual}`;
        } else if (typeof actual === "function" && actual.name) {
          msg += `. Received function ${actual.name}`;
        } else if (typeof actual === "object") {
          var _actual$constructor;
          if ((_actual$constructor = actual.constructor) !== null && _actual$constructor !== void 0 && _actual$constructor.name) {
            msg += `. Received an instance of ${actual.constructor.name}`;
          } else {
            const inspected = inspect(actual, {
              depth: -1
            });
            msg += `. Received ${inspected}`;
          }
        } else {
          let inspected = inspect(actual, {
            colors: false
          });
          if (inspected.length > 25) {
            inspected = `${inspected.slice(0, 25)}...`;
          }
          msg += `. Received type ${typeof actual} (${inspected})`;
        }
        return msg;
      },
      TypeError
    );
    E(
      "ERR_INVALID_ARG_VALUE",
      (name, value, reason = "is invalid") => {
        let inspected = inspect(value);
        if (inspected.length > 128) {
          inspected = inspected.slice(0, 128) + "...";
        }
        const type = name.includes(".") ? "property" : "argument";
        return `The ${type} '${name}' ${reason}. Received ${inspected}`;
      },
      TypeError
    );
    E(
      "ERR_INVALID_RETURN_VALUE",
      (input, name, value) => {
        var _value$constructor;
        const type = value !== null && value !== void 0 && (_value$constructor = value.constructor) !== null && _value$constructor !== void 0 && _value$constructor.name ? `instance of ${value.constructor.name}` : `type ${typeof value}`;
        return `Expected ${input} to be returned from the "${name}" function but got ${type}.`;
      },
      TypeError
    );
    E(
      "ERR_MISSING_ARGS",
      (...args) => {
        assert(args.length > 0, "At least one arg needs to be specified");
        let msg;
        const len = args.length;
        args = (Array.isArray(args) ? args : [args]).map((a) => `"${a}"`).join(" or ");
        switch (len) {
          case 1:
            msg += `The ${args[0]} argument`;
            break;
          case 2:
            msg += `The ${args[0]} and ${args[1]} arguments`;
            break;
          default:
            {
              const last = args.pop();
              msg += `The ${args.join(", ")}, and ${last} arguments`;
            }
            break;
        }
        return `${msg} must be specified`;
      },
      TypeError
    );
    E(
      "ERR_OUT_OF_RANGE",
      (str, range, input) => {
        assert(range, 'Missing "range" argument');
        let received;
        if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {
          received = addNumericalSeparator(String(input));
        } else if (typeof input === "bigint") {
          received = String(input);
          const limit = BigInt(2) ** BigInt(32);
          if (input > limit || input < -limit) {
            received = addNumericalSeparator(received);
          }
          received += "n";
        } else {
          received = inspect(input);
        }
        return `The value of "${str}" is out of range. It must be ${range}. Received ${received}`;
      },
      RangeError
    );
    E("ERR_MULTIPLE_CALLBACK", "Callback called multiple times", Error);
    E("ERR_METHOD_NOT_IMPLEMENTED", "The %s method is not implemented", Error);
    E("ERR_STREAM_ALREADY_FINISHED", "Cannot call %s after a stream was finished", Error);
    E("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable", Error);
    E("ERR_STREAM_DESTROYED", "Cannot call %s after a stream was destroyed", Error);
    E("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
    E("ERR_STREAM_PREMATURE_CLOSE", "Premature close", Error);
    E("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF", Error);
    E("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event", Error);
    E("ERR_STREAM_WRITE_AFTER_END", "write after end", Error);
    E("ERR_UNKNOWN_ENCODING", "Unknown encoding: %s", TypeError);
    module.exports = {
      AbortError,
      aggregateTwoErrors: hideStackFrames(aggregateTwoErrors),
      hideStackFrames,
      codes
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/ours/util.js
var require_util2 = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/ours/util.js"(exports, module) {
    "use strict";
    var bufferModule = require_buffer();
    var { format, inspect } = require_inspect();
    var {
      codes: { ERR_INVALID_ARG_TYPE }
    } = require_errors3();
    var { kResistStopPropagation, AggregateError: AggregateError2, SymbolDispose } = require_primordials();
    var AbortSignal = globalThis.AbortSignal || require_browser2().AbortSignal;
    var AbortController2 = globalThis.AbortController || require_browser2().AbortController;
    var AsyncFunction = Object.getPrototypeOf(async function() {
    }).constructor;
    var Blob2 = globalThis.Blob || bufferModule.Blob;
    var isBlob = typeof Blob2 !== "undefined" ? function isBlob2(b) {
      return b instanceof Blob2;
    } : function isBlob2(b) {
      return false;
    };
    var validateAbortSignal = (signal, name) => {
      if (signal !== void 0 && (signal === null || typeof signal !== "object" || !("aborted" in signal))) {
        throw new ERR_INVALID_ARG_TYPE(name, "AbortSignal", signal);
      }
    };
    var validateFunction = (value, name) => {
      if (typeof value !== "function") {
        throw new ERR_INVALID_ARG_TYPE(name, "Function", value);
      }
    };
    module.exports = {
      AggregateError: AggregateError2,
      kEmptyObject: Object.freeze({}),
      once(callback) {
        let called = false;
        return function(...args) {
          if (called) {
            return;
          }
          called = true;
          callback.apply(this, args);
        };
      },
      createDeferredPromise: function() {
        let resolve;
        let reject;
        const promise = new Promise((res, rej) => {
          resolve = res;
          reject = rej;
        });
        return {
          promise,
          resolve,
          reject
        };
      },
      promisify(fn) {
        return new Promise((resolve, reject) => {
          fn((err, ...args) => {
            if (err) {
              return reject(err);
            }
            return resolve(...args);
          });
        });
      },
      debuglog() {
        return function() {
        };
      },
      format,
      inspect,
      types: {
        isAsyncFunction(fn) {
          return fn instanceof AsyncFunction;
        },
        isArrayBufferView(arr) {
          return ArrayBuffer.isView(arr);
        }
      },
      isBlob,
      deprecate(fn, message) {
        return fn;
      },
      addAbortListener: require_events().addAbortListener || function addAbortListener(signal, listener) {
        if (signal === void 0) {
          throw new ERR_INVALID_ARG_TYPE("signal", "AbortSignal", signal);
        }
        validateAbortSignal(signal, "signal");
        validateFunction(listener, "listener");
        let removeEventListener;
        if (signal.aborted) {
          queueMicrotask(() => listener());
        } else {
          signal.addEventListener("abort", listener, {
            __proto__: null,
            once: true,
            [kResistStopPropagation]: true
          });
          removeEventListener = () => {
            signal.removeEventListener("abort", listener);
          };
        }
        return {
          __proto__: null,
          [SymbolDispose]() {
            var _removeEventListener;
            (_removeEventListener = removeEventListener) === null || _removeEventListener === void 0 ? void 0 : _removeEventListener();
          }
        };
      },
      AbortSignalAny: AbortSignal.any || function AbortSignalAny(signals) {
        if (signals.length === 1) {
          return signals[0];
        }
        const ac = new AbortController2();
        const abort = () => ac.abort();
        signals.forEach((signal) => {
          validateAbortSignal(signal, "signals");
          signal.addEventListener("abort", abort, {
            once: true
          });
        });
        ac.signal.addEventListener(
          "abort",
          () => {
            signals.forEach((signal) => signal.removeEventListener("abort", abort));
          },
          {
            once: true
          }
        );
        return ac.signal;
      }
    };
    module.exports.promisify.custom = Symbol.for("nodejs.util.promisify.custom");
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/internal/validators.js
var require_validators = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/internal/validators.js"(exports, module) {
    "use strict";
    var {
      ArrayIsArray,
      ArrayPrototypeIncludes,
      ArrayPrototypeJoin,
      ArrayPrototypeMap,
      NumberIsInteger,
      NumberIsNaN,
      NumberMAX_SAFE_INTEGER,
      NumberMIN_SAFE_INTEGER,
      NumberParseInt,
      ObjectPrototypeHasOwnProperty,
      RegExpPrototypeExec,
      String: String2,
      StringPrototypeToUpperCase,
      StringPrototypeTrim
    } = require_primordials();
    var {
      hideStackFrames,
      codes: { ERR_SOCKET_BAD_PORT, ERR_INVALID_ARG_TYPE, ERR_INVALID_ARG_VALUE, ERR_OUT_OF_RANGE, ERR_UNKNOWN_SIGNAL }
    } = require_errors3();
    var { normalizeEncoding } = require_util2();
    var { isAsyncFunction, isArrayBufferView } = require_util2().types;
    var signals = {};
    function isInt32(value) {
      return value === (value | 0);
    }
    function isUint32(value) {
      return value === value >>> 0;
    }
    var octalReg = /^[0-7]+$/;
    var modeDesc = "must be a 32-bit unsigned integer or an octal string";
    function parseFileMode(value, name, def) {
      if (typeof value === "undefined") {
        value = def;
      }
      if (typeof value === "string") {
        if (RegExpPrototypeExec(octalReg, value) === null) {
          throw new ERR_INVALID_ARG_VALUE(name, value, modeDesc);
        }
        value = NumberParseInt(value, 8);
      }
      validateUint32(value, name);
      return value;
    }
    var validateInteger = hideStackFrames((value, name, min = NumberMIN_SAFE_INTEGER, max = NumberMAX_SAFE_INTEGER) => {
      if (typeof value !== "number")
        throw new ERR_INVALID_ARG_TYPE(name, "number", value);
      if (!NumberIsInteger(value))
        throw new ERR_OUT_OF_RANGE(name, "an integer", value);
      if (value < min || value > max)
        throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value);
    });
    var validateInt32 = hideStackFrames((value, name, min = -2147483648, max = 2147483647) => {
      if (typeof value !== "number") {
        throw new ERR_INVALID_ARG_TYPE(name, "number", value);
      }
      if (!NumberIsInteger(value)) {
        throw new ERR_OUT_OF_RANGE(name, "an integer", value);
      }
      if (value < min || value > max) {
        throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value);
      }
    });
    var validateUint32 = hideStackFrames((value, name, positive = false) => {
      if (typeof value !== "number") {
        throw new ERR_INVALID_ARG_TYPE(name, "number", value);
      }
      if (!NumberIsInteger(value)) {
        throw new ERR_OUT_OF_RANGE(name, "an integer", value);
      }
      const min = positive ? 1 : 0;
      const max = 4294967295;
      if (value < min || value > max) {
        throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value);
      }
    });
    function validateString(value, name) {
      if (typeof value !== "string")
        throw new ERR_INVALID_ARG_TYPE(name, "string", value);
    }
    function validateNumber(value, name, min = void 0, max) {
      if (typeof value !== "number")
        throw new ERR_INVALID_ARG_TYPE(name, "number", value);
      if (min != null && value < min || max != null && value > max || (min != null || max != null) && NumberIsNaN(value)) {
        throw new ERR_OUT_OF_RANGE(
          name,
          `${min != null ? `>= ${min}` : ""}${min != null && max != null ? " && " : ""}${max != null ? `<= ${max}` : ""}`,
          value
        );
      }
    }
    var validateOneOf = hideStackFrames((value, name, oneOf) => {
      if (!ArrayPrototypeIncludes(oneOf, value)) {
        const allowed = ArrayPrototypeJoin(
          ArrayPrototypeMap(oneOf, (v) => typeof v === "string" ? `'${v}'` : String2(v)),
          ", "
        );
        const reason = "must be one of: " + allowed;
        throw new ERR_INVALID_ARG_VALUE(name, value, reason);
      }
    });
    function validateBoolean(value, name) {
      if (typeof value !== "boolean")
        throw new ERR_INVALID_ARG_TYPE(name, "boolean", value);
    }
    function getOwnPropertyValueOrDefault(options, key, defaultValue) {
      return options == null || !ObjectPrototypeHasOwnProperty(options, key) ? defaultValue : options[key];
    }
    var validateObject = hideStackFrames((value, name, options = null) => {
      const allowArray = getOwnPropertyValueOrDefault(options, "allowArray", false);
      const allowFunction = getOwnPropertyValueOrDefault(options, "allowFunction", false);
      const nullable = getOwnPropertyValueOrDefault(options, "nullable", false);
      if (!nullable && value === null || !allowArray && ArrayIsArray(value) || typeof value !== "object" && (!allowFunction || typeof value !== "function")) {
        throw new ERR_INVALID_ARG_TYPE(name, "Object", value);
      }
    });
    var validateDictionary = hideStackFrames((value, name) => {
      if (value != null && typeof value !== "object" && typeof value !== "function") {
        throw new ERR_INVALID_ARG_TYPE(name, "a dictionary", value);
      }
    });
    var validateArray = hideStackFrames((value, name, minLength = 0) => {
      if (!ArrayIsArray(value)) {
        throw new ERR_INVALID_ARG_TYPE(name, "Array", value);
      }
      if (value.length < minLength) {
        const reason = `must be longer than ${minLength}`;
        throw new ERR_INVALID_ARG_VALUE(name, value, reason);
      }
    });
    function validateStringArray(value, name) {
      validateArray(value, name);
      for (let i = 0; i < value.length; i++) {
        validateString(value[i], `${name}[${i}]`);
      }
    }
    function validateBooleanArray(value, name) {
      validateArray(value, name);
      for (let i = 0; i < value.length; i++) {
        validateBoolean(value[i], `${name}[${i}]`);
      }
    }
    function validateAbortSignalArray(value, name) {
      validateArray(value, name);
      for (let i = 0; i < value.length; i++) {
        const signal = value[i];
        const indexedName = `${name}[${i}]`;
        if (signal == null) {
          throw new ERR_INVALID_ARG_TYPE(indexedName, "AbortSignal", signal);
        }
        validateAbortSignal(signal, indexedName);
      }
    }
    function validateSignalName(signal, name = "signal") {
      validateString(signal, name);
      if (signals[signal] === void 0) {
        if (signals[StringPrototypeToUpperCase(signal)] !== void 0) {
          throw new ERR_UNKNOWN_SIGNAL(signal + " (signals must use all capital letters)");
        }
        throw new ERR_UNKNOWN_SIGNAL(signal);
      }
    }
    var validateBuffer = hideStackFrames((buffer, name = "buffer") => {
      if (!isArrayBufferView(buffer)) {
        throw new ERR_INVALID_ARG_TYPE(name, ["Buffer", "TypedArray", "DataView"], buffer);
      }
    });
    function validateEncoding(data, encoding) {
      const normalizedEncoding = normalizeEncoding(encoding);
      const length = data.length;
      if (normalizedEncoding === "hex" && length % 2 !== 0) {
        throw new ERR_INVALID_ARG_VALUE("encoding", encoding, `is invalid for data of length ${length}`);
      }
    }
    function validatePort(port, name = "Port", allowZero = true) {
      if (typeof port !== "number" && typeof port !== "string" || typeof port === "string" && StringPrototypeTrim(port).length === 0 || +port !== +port >>> 0 || port > 65535 || port === 0 && !allowZero) {
        throw new ERR_SOCKET_BAD_PORT(name, port, allowZero);
      }
      return port | 0;
    }
    var validateAbortSignal = hideStackFrames((signal, name) => {
      if (signal !== void 0 && (signal === null || typeof signal !== "object" || !("aborted" in signal))) {
        throw new ERR_INVALID_ARG_TYPE(name, "AbortSignal", signal);
      }
    });
    var validateFunction = hideStackFrames((value, name) => {
      if (typeof value !== "function")
        throw new ERR_INVALID_ARG_TYPE(name, "Function", value);
    });
    var validatePlainFunction = hideStackFrames((value, name) => {
      if (typeof value !== "function" || isAsyncFunction(value))
        throw new ERR_INVALID_ARG_TYPE(name, "Function", value);
    });
    var validateUndefined = hideStackFrames((value, name) => {
      if (value !== void 0)
        throw new ERR_INVALID_ARG_TYPE(name, "undefined", value);
    });
    function validateUnion(value, name, union) {
      if (!ArrayPrototypeIncludes(union, value)) {
        throw new ERR_INVALID_ARG_TYPE(name, `('${ArrayPrototypeJoin(union, "|")}')`, value);
      }
    }
    var linkValueRegExp = /^(?:<[^>]*>)(?:\s*;\s*[^;"\s]+(?:=(")?[^;"\s]*\1)?)*$/;
    function validateLinkHeaderFormat(value, name) {
      if (typeof value === "undefined" || !RegExpPrototypeExec(linkValueRegExp, value)) {
        throw new ERR_INVALID_ARG_VALUE(
          name,
          value,
          'must be an array or string of format "</styles.css>; rel=preload; as=style"'
        );
      }
    }
    function validateLinkHeaderValue(hints) {
      if (typeof hints === "string") {
        validateLinkHeaderFormat(hints, "hints");
        return hints;
      } else if (ArrayIsArray(hints)) {
        const hintsLength = hints.length;
        let result = "";
        if (hintsLength === 0) {
          return result;
        }
        for (let i = 0; i < hintsLength; i++) {
          const link = hints[i];
          validateLinkHeaderFormat(link, "hints");
          result += link;
          if (i !== hintsLength - 1) {
            result += ", ";
          }
        }
        return result;
      }
      throw new ERR_INVALID_ARG_VALUE(
        "hints",
        hints,
        'must be an array or string of format "</styles.css>; rel=preload; as=style"'
      );
    }
    module.exports = {
      isInt32,
      isUint32,
      parseFileMode,
      validateArray,
      validateStringArray,
      validateBooleanArray,
      validateAbortSignalArray,
      validateBoolean,
      validateBuffer,
      validateDictionary,
      validateEncoding,
      validateFunction,
      validateInt32,
      validateInteger,
      validateNumber,
      validateObject,
      validateOneOf,
      validatePlainFunction,
      validatePort,
      validateSignalName,
      validateString,
      validateUint32,
      validateUndefined,
      validateUnion,
      validateAbortSignal,
      validateLinkHeaderValue
    };
  }
});

// node_modules/process/browser.js
var require_browser4 = __commonJS({
  "node_modules/process/browser.js"(exports, module) {
    var process2 = module.exports = {};
    var cachedSetTimeout;
    var cachedClearTimeout;
    function defaultSetTimout() {
      throw new Error("setTimeout has not been defined");
    }
    function defaultClearTimeout() {
      throw new Error("clearTimeout has not been defined");
    }
    (function() {
      try {
        if (typeof setTimeout === "function") {
          cachedSetTimeout = setTimeout;
        } else {
          cachedSetTimeout = defaultSetTimout;
        }
      } catch (e) {
        cachedSetTimeout = defaultSetTimout;
      }
      try {
        if (typeof clearTimeout === "function") {
          cachedClearTimeout = clearTimeout;
        } else {
          cachedClearTimeout = defaultClearTimeout;
        }
      } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
      }
    })();
    function runTimeout(fun) {
      if (cachedSetTimeout === setTimeout) {
        return setTimeout(fun, 0);
      }
      if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
      }
      try {
        return cachedSetTimeout(fun, 0);
      } catch (e) {
        try {
          return cachedSetTimeout.call(null, fun, 0);
        } catch (e2) {
          return cachedSetTimeout.call(this, fun, 0);
        }
      }
    }
    function runClearTimeout(marker) {
      if (cachedClearTimeout === clearTimeout) {
        return clearTimeout(marker);
      }
      if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
      }
      try {
        return cachedClearTimeout(marker);
      } catch (e) {
        try {
          return cachedClearTimeout.call(null, marker);
        } catch (e2) {
          return cachedClearTimeout.call(this, marker);
        }
      }
    }
    var queue = [];
    var draining = false;
    var currentQueue;
    var queueIndex = -1;
    function cleanUpNextTick() {
      if (!draining || !currentQueue) {
        return;
      }
      draining = false;
      if (currentQueue.length) {
        queue = currentQueue.concat(queue);
      } else {
        queueIndex = -1;
      }
      if (queue.length) {
        drainQueue();
      }
    }
    function drainQueue() {
      if (draining) {
        return;
      }
      var timeout = runTimeout(cleanUpNextTick);
      draining = true;
      var len = queue.length;
      while (len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
          if (currentQueue) {
            currentQueue[queueIndex].run();
          }
        }
        queueIndex = -1;
        len = queue.length;
      }
      currentQueue = null;
      draining = false;
      runClearTimeout(timeout);
    }
    process2.nextTick = function(fun) {
      var args = new Array(arguments.length - 1);
      if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
          args[i - 1] = arguments[i];
        }
      }
      queue.push(new Item(fun, args));
      if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
      }
    };
    function Item(fun, array) {
      this.fun = fun;
      this.array = array;
    }
    Item.prototype.run = function() {
      this.fun.apply(null, this.array);
    };
    process2.title = "browser";
    process2.browser = true;
    process2.env = {};
    process2.argv = [];
    process2.version = "";
    process2.versions = {};
    function noop() {
    }
    process2.on = noop;
    process2.addListener = noop;
    process2.once = noop;
    process2.off = noop;
    process2.removeListener = noop;
    process2.removeAllListeners = noop;
    process2.emit = noop;
    process2.prependListener = noop;
    process2.prependOnceListener = noop;
    process2.listeners = function(name) {
      return [];
    };
    process2.binding = function(name) {
      throw new Error("process.binding is not supported");
    };
    process2.cwd = function() {
      return "/";
    };
    process2.chdir = function(dir) {
      throw new Error("process.chdir is not supported");
    };
    process2.umask = function() {
      return 0;
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/utils.js
var require_utils2 = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/utils.js"(exports, module) {
    "use strict";
    var { SymbolAsyncIterator, SymbolIterator, SymbolFor } = require_primordials();
    var kIsDestroyed = SymbolFor("nodejs.stream.destroyed");
    var kIsErrored = SymbolFor("nodejs.stream.errored");
    var kIsReadable = SymbolFor("nodejs.stream.readable");
    var kIsWritable = SymbolFor("nodejs.stream.writable");
    var kIsDisturbed = SymbolFor("nodejs.stream.disturbed");
    var kIsClosedPromise = SymbolFor("nodejs.webstream.isClosedPromise");
    var kControllerErrorFunction = SymbolFor("nodejs.webstream.controllerErrorFunction");
    function isReadableNodeStream(obj, strict = false) {
      var _obj$_readableState;
      return !!(obj && typeof obj.pipe === "function" && typeof obj.on === "function" && (!strict || typeof obj.pause === "function" && typeof obj.resume === "function") && (!obj._writableState || ((_obj$_readableState = obj._readableState) === null || _obj$_readableState === void 0 ? void 0 : _obj$_readableState.readable) !== false) && // Duplex
      (!obj._writableState || obj._readableState));
    }
    function isWritableNodeStream(obj) {
      var _obj$_writableState;
      return !!(obj && typeof obj.write === "function" && typeof obj.on === "function" && (!obj._readableState || ((_obj$_writableState = obj._writableState) === null || _obj$_writableState === void 0 ? void 0 : _obj$_writableState.writable) !== false));
    }
    function isDuplexNodeStream(obj) {
      return !!(obj && typeof obj.pipe === "function" && obj._readableState && typeof obj.on === "function" && typeof obj.write === "function");
    }
    function isNodeStream(obj) {
      return obj && (obj._readableState || obj._writableState || typeof obj.write === "function" && typeof obj.on === "function" || typeof obj.pipe === "function" && typeof obj.on === "function");
    }
    function isReadableStream(obj) {
      return !!(obj && !isNodeStream(obj) && typeof obj.pipeThrough === "function" && typeof obj.getReader === "function" && typeof obj.cancel === "function");
    }
    function isWritableStream(obj) {
      return !!(obj && !isNodeStream(obj) && typeof obj.getWriter === "function" && typeof obj.abort === "function");
    }
    function isTransformStream(obj) {
      return !!(obj && !isNodeStream(obj) && typeof obj.readable === "object" && typeof obj.writable === "object");
    }
    function isWebStream(obj) {
      return isReadableStream(obj) || isWritableStream(obj) || isTransformStream(obj);
    }
    function isIterable(obj, isAsync) {
      if (obj == null)
        return false;
      if (isAsync === true)
        return typeof obj[SymbolAsyncIterator] === "function";
      if (isAsync === false)
        return typeof obj[SymbolIterator] === "function";
      return typeof obj[SymbolAsyncIterator] === "function" || typeof obj[SymbolIterator] === "function";
    }
    function isDestroyed(stream) {
      if (!isNodeStream(stream))
        return null;
      const wState = stream._writableState;
      const rState = stream._readableState;
      const state = wState || rState;
      return !!(stream.destroyed || stream[kIsDestroyed] || state !== null && state !== void 0 && state.destroyed);
    }
    function isWritableEnded(stream) {
      if (!isWritableNodeStream(stream))
        return null;
      if (stream.writableEnded === true)
        return true;
      const wState = stream._writableState;
      if (wState !== null && wState !== void 0 && wState.errored)
        return false;
      if (typeof (wState === null || wState === void 0 ? void 0 : wState.ended) !== "boolean")
        return null;
      return wState.ended;
    }
    function isWritableFinished(stream, strict) {
      if (!isWritableNodeStream(stream))
        return null;
      if (stream.writableFinished === true)
        return true;
      const wState = stream._writableState;
      if (wState !== null && wState !== void 0 && wState.errored)
        return false;
      if (typeof (wState === null || wState === void 0 ? void 0 : wState.finished) !== "boolean")
        return null;
      return !!(wState.finished || strict === false && wState.ended === true && wState.length === 0);
    }
    function isReadableEnded(stream) {
      if (!isReadableNodeStream(stream))
        return null;
      if (stream.readableEnded === true)
        return true;
      const rState = stream._readableState;
      if (!rState || rState.errored)
        return false;
      if (typeof (rState === null || rState === void 0 ? void 0 : rState.ended) !== "boolean")
        return null;
      return rState.ended;
    }
    function isReadableFinished(stream, strict) {
      if (!isReadableNodeStream(stream))
        return null;
      const rState = stream._readableState;
      if (rState !== null && rState !== void 0 && rState.errored)
        return false;
      if (typeof (rState === null || rState === void 0 ? void 0 : rState.endEmitted) !== "boolean")
        return null;
      return !!(rState.endEmitted || strict === false && rState.ended === true && rState.length === 0);
    }
    function isReadable(stream) {
      if (stream && stream[kIsReadable] != null)
        return stream[kIsReadable];
      if (typeof (stream === null || stream === void 0 ? void 0 : stream.readable) !== "boolean")
        return null;
      if (isDestroyed(stream))
        return false;
      return isReadableNodeStream(stream) && stream.readable && !isReadableFinished(stream);
    }
    function isWritable(stream) {
      if (stream && stream[kIsWritable] != null)
        return stream[kIsWritable];
      if (typeof (stream === null || stream === void 0 ? void 0 : stream.writable) !== "boolean")
        return null;
      if (isDestroyed(stream))
        return false;
      return isWritableNodeStream(stream) && stream.writable && !isWritableEnded(stream);
    }
    function isFinished(stream, opts) {
      if (!isNodeStream(stream)) {
        return null;
      }
      if (isDestroyed(stream)) {
        return true;
      }
      if ((opts === null || opts === void 0 ? void 0 : opts.readable) !== false && isReadable(stream)) {
        return false;
      }
      if ((opts === null || opts === void 0 ? void 0 : opts.writable) !== false && isWritable(stream)) {
        return false;
      }
      return true;
    }
    function isWritableErrored(stream) {
      var _stream$_writableStat, _stream$_writableStat2;
      if (!isNodeStream(stream)) {
        return null;
      }
      if (stream.writableErrored) {
        return stream.writableErrored;
      }
      return (_stream$_writableStat = (_stream$_writableStat2 = stream._writableState) === null || _stream$_writableStat2 === void 0 ? void 0 : _stream$_writableStat2.errored) !== null && _stream$_writableStat !== void 0 ? _stream$_writableStat : null;
    }
    function isReadableErrored(stream) {
      var _stream$_readableStat, _stream$_readableStat2;
      if (!isNodeStream(stream)) {
        return null;
      }
      if (stream.readableErrored) {
        return stream.readableErrored;
      }
      return (_stream$_readableStat = (_stream$_readableStat2 = stream._readableState) === null || _stream$_readableStat2 === void 0 ? void 0 : _stream$_readableStat2.errored) !== null && _stream$_readableStat !== void 0 ? _stream$_readableStat : null;
    }
    function isClosed(stream) {
      if (!isNodeStream(stream)) {
        return null;
      }
      if (typeof stream.closed === "boolean") {
        return stream.closed;
      }
      const wState = stream._writableState;
      const rState = stream._readableState;
      if (typeof (wState === null || wState === void 0 ? void 0 : wState.closed) === "boolean" || typeof (rState === null || rState === void 0 ? void 0 : rState.closed) === "boolean") {
        return (wState === null || wState === void 0 ? void 0 : wState.closed) || (rState === null || rState === void 0 ? void 0 : rState.closed);
      }
      if (typeof stream._closed === "boolean" && isOutgoingMessage(stream)) {
        return stream._closed;
      }
      return null;
    }
    function isOutgoingMessage(stream) {
      return typeof stream._closed === "boolean" && typeof stream._defaultKeepAlive === "boolean" && typeof stream._removedConnection === "boolean" && typeof stream._removedContLen === "boolean";
    }
    function isServerResponse(stream) {
      return typeof stream._sent100 === "boolean" && isOutgoingMessage(stream);
    }
    function isServerRequest(stream) {
      var _stream$req;
      return typeof stream._consuming === "boolean" && typeof stream._dumped === "boolean" && ((_stream$req = stream.req) === null || _stream$req === void 0 ? void 0 : _stream$req.upgradeOrConnect) === void 0;
    }
    function willEmitClose(stream) {
      if (!isNodeStream(stream))
        return null;
      const wState = stream._writableState;
      const rState = stream._readableState;
      const state = wState || rState;
      return !state && isServerResponse(stream) || !!(state && state.autoDestroy && state.emitClose && state.closed === false);
    }
    function isDisturbed(stream) {
      var _stream$kIsDisturbed;
      return !!(stream && ((_stream$kIsDisturbed = stream[kIsDisturbed]) !== null && _stream$kIsDisturbed !== void 0 ? _stream$kIsDisturbed : stream.readableDidRead || stream.readableAborted));
    }
    function isErrored(stream) {
      var _ref, _ref2, _ref3, _ref4, _ref5, _stream$kIsErrored, _stream$_readableStat3, _stream$_writableStat3, _stream$_readableStat4, _stream$_writableStat4;
      return !!(stream && ((_ref = (_ref2 = (_ref3 = (_ref4 = (_ref5 = (_stream$kIsErrored = stream[kIsErrored]) !== null && _stream$kIsErrored !== void 0 ? _stream$kIsErrored : stream.readableErrored) !== null && _ref5 !== void 0 ? _ref5 : stream.writableErrored) !== null && _ref4 !== void 0 ? _ref4 : (_stream$_readableStat3 = stream._readableState) === null || _stream$_readableStat3 === void 0 ? void 0 : _stream$_readableStat3.errorEmitted) !== null && _ref3 !== void 0 ? _ref3 : (_stream$_writableStat3 = stream._writableState) === null || _stream$_writableStat3 === void 0 ? void 0 : _stream$_writableStat3.errorEmitted) !== null && _ref2 !== void 0 ? _ref2 : (_stream$_readableStat4 = stream._readableState) === null || _stream$_readableStat4 === void 0 ? void 0 : _stream$_readableStat4.errored) !== null && _ref !== void 0 ? _ref : (_stream$_writableStat4 = stream._writableState) === null || _stream$_writableStat4 === void 0 ? void 0 : _stream$_writableStat4.errored));
    }
    module.exports = {
      isDestroyed,
      kIsDestroyed,
      isDisturbed,
      kIsDisturbed,
      isErrored,
      kIsErrored,
      isReadable,
      kIsReadable,
      kIsClosedPromise,
      kControllerErrorFunction,
      kIsWritable,
      isClosed,
      isDuplexNodeStream,
      isFinished,
      isIterable,
      isReadableNodeStream,
      isReadableStream,
      isReadableEnded,
      isReadableFinished,
      isReadableErrored,
      isNodeStream,
      isWebStream,
      isWritable,
      isWritableNodeStream,
      isWritableStream,
      isWritableEnded,
      isWritableFinished,
      isWritableErrored,
      isServerRequest,
      isServerResponse,
      willEmitClose,
      isTransformStream
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/end-of-stream.js
var require_end_of_stream = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/end-of-stream.js"(exports, module) {
    "use strict";
    var process2 = require_browser4();
    var { AbortError, codes } = require_errors3();
    var { ERR_INVALID_ARG_TYPE, ERR_STREAM_PREMATURE_CLOSE } = codes;
    var { kEmptyObject, once } = require_util2();
    var { validateAbortSignal, validateFunction, validateObject, validateBoolean } = require_validators();
    var { Promise: Promise2, PromisePrototypeThen, SymbolDispose } = require_primordials();
    var {
      isClosed,
      isReadable,
      isReadableNodeStream,
      isReadableStream,
      isReadableFinished,
      isReadableErrored,
      isWritable,
      isWritableNodeStream,
      isWritableStream,
      isWritableFinished,
      isWritableErrored,
      isNodeStream,
      willEmitClose: _willEmitClose,
      kIsClosedPromise
    } = require_utils2();
    var addAbortListener;
    function isRequest(stream) {
      return stream.setHeader && typeof stream.abort === "function";
    }
    var nop = () => {
    };
    function eos(stream, options, callback) {
      var _options$readable, _options$writable;
      if (arguments.length === 2) {
        callback = options;
        options = kEmptyObject;
      } else if (options == null) {
        options = kEmptyObject;
      } else {
        validateObject(options, "options");
      }
      validateFunction(callback, "callback");
      validateAbortSignal(options.signal, "options.signal");
      callback = once(callback);
      if (isReadableStream(stream) || isWritableStream(stream)) {
        return eosWeb(stream, options, callback);
      }
      if (!isNodeStream(stream)) {
        throw new ERR_INVALID_ARG_TYPE("stream", ["ReadableStream", "WritableStream", "Stream"], stream);
      }
      const readable = (_options$readable = options.readable) !== null && _options$readable !== void 0 ? _options$readable : isReadableNodeStream(stream);
      const writable = (_options$writable = options.writable) !== null && _options$writable !== void 0 ? _options$writable : isWritableNodeStream(stream);
      const wState = stream._writableState;
      const rState = stream._readableState;
      const onlegacyfinish = () => {
        if (!stream.writable) {
          onfinish();
        }
      };
      let willEmitClose = _willEmitClose(stream) && isReadableNodeStream(stream) === readable && isWritableNodeStream(stream) === writable;
      let writableFinished = isWritableFinished(stream, false);
      const onfinish = () => {
        writableFinished = true;
        if (stream.destroyed) {
          willEmitClose = false;
        }
        if (willEmitClose && (!stream.readable || readable)) {
          return;
        }
        if (!readable || readableFinished) {
          callback.call(stream);
        }
      };
      let readableFinished = isReadableFinished(stream, false);
      const onend = () => {
        readableFinished = true;
        if (stream.destroyed) {
          willEmitClose = false;
        }
        if (willEmitClose && (!stream.writable || writable)) {
          return;
        }
        if (!writable || writableFinished) {
          callback.call(stream);
        }
      };
      const onerror = (err) => {
        callback.call(stream, err);
      };
      let closed = isClosed(stream);
      const onclose = () => {
        closed = true;
        const errored = isWritableErrored(stream) || isReadableErrored(stream);
        if (errored && typeof errored !== "boolean") {
          return callback.call(stream, errored);
        }
        if (readable && !readableFinished && isReadableNodeStream(stream, true)) {
          if (!isReadableFinished(stream, false))
            return callback.call(stream, new ERR_STREAM_PREMATURE_CLOSE());
        }
        if (writable && !writableFinished) {
          if (!isWritableFinished(stream, false))
            return callback.call(stream, new ERR_STREAM_PREMATURE_CLOSE());
        }
        callback.call(stream);
      };
      const onclosed = () => {
        closed = true;
        const errored = isWritableErrored(stream) || isReadableErrored(stream);
        if (errored && typeof errored !== "boolean") {
          return callback.call(stream, errored);
        }
        callback.call(stream);
      };
      const onrequest = () => {
        stream.req.on("finish", onfinish);
      };
      if (isRequest(stream)) {
        stream.on("complete", onfinish);
        if (!willEmitClose) {
          stream.on("abort", onclose);
        }
        if (stream.req) {
          onrequest();
        } else {
          stream.on("request", onrequest);
        }
      } else if (writable && !wState) {
        stream.on("end", onlegacyfinish);
        stream.on("close", onlegacyfinish);
      }
      if (!willEmitClose && typeof stream.aborted === "boolean") {
        stream.on("aborted", onclose);
      }
      stream.on("end", onend);
      stream.on("finish", onfinish);
      if (options.error !== false) {
        stream.on("error", onerror);
      }
      stream.on("close", onclose);
      if (closed) {
        process2.nextTick(onclose);
      } else if (wState !== null && wState !== void 0 && wState.errorEmitted || rState !== null && rState !== void 0 && rState.errorEmitted) {
        if (!willEmitClose) {
          process2.nextTick(onclosed);
        }
      } else if (!readable && (!willEmitClose || isReadable(stream)) && (writableFinished || isWritable(stream) === false)) {
        process2.nextTick(onclosed);
      } else if (!writable && (!willEmitClose || isWritable(stream)) && (readableFinished || isReadable(stream) === false)) {
        process2.nextTick(onclosed);
      } else if (rState && stream.req && stream.aborted) {
        process2.nextTick(onclosed);
      }
      const cleanup = () => {
        callback = nop;
        stream.removeListener("aborted", onclose);
        stream.removeListener("complete", onfinish);
        stream.removeListener("abort", onclose);
        stream.removeListener("request", onrequest);
        if (stream.req)
          stream.req.removeListener("finish", onfinish);
        stream.removeListener("end", onlegacyfinish);
        stream.removeListener("close", onlegacyfinish);
        stream.removeListener("finish", onfinish);
        stream.removeListener("end", onend);
        stream.removeListener("error", onerror);
        stream.removeListener("close", onclose);
      };
      if (options.signal && !closed) {
        const abort = () => {
          const endCallback = callback;
          cleanup();
          endCallback.call(
            stream,
            new AbortError(void 0, {
              cause: options.signal.reason
            })
          );
        };
        if (options.signal.aborted) {
          process2.nextTick(abort);
        } else {
          addAbortListener = addAbortListener || require_util2().addAbortListener;
          const disposable = addAbortListener(options.signal, abort);
          const originalCallback = callback;
          callback = once((...args) => {
            disposable[SymbolDispose]();
            originalCallback.apply(stream, args);
          });
        }
      }
      return cleanup;
    }
    function eosWeb(stream, options, callback) {
      let isAborted = false;
      let abort = nop;
      if (options.signal) {
        abort = () => {
          isAborted = true;
          callback.call(
            stream,
            new AbortError(void 0, {
              cause: options.signal.reason
            })
          );
        };
        if (options.signal.aborted) {
          process2.nextTick(abort);
        } else {
          addAbortListener = addAbortListener || require_util2().addAbortListener;
          const disposable = addAbortListener(options.signal, abort);
          const originalCallback = callback;
          callback = once((...args) => {
            disposable[SymbolDispose]();
            originalCallback.apply(stream, args);
          });
        }
      }
      const resolverFn = (...args) => {
        if (!isAborted) {
          process2.nextTick(() => callback.apply(stream, args));
        }
      };
      PromisePrototypeThen(stream[kIsClosedPromise].promise, resolverFn, resolverFn);
      return nop;
    }
    function finished(stream, opts) {
      var _opts;
      let autoCleanup = false;
      if (opts === null) {
        opts = kEmptyObject;
      }
      if ((_opts = opts) !== null && _opts !== void 0 && _opts.cleanup) {
        validateBoolean(opts.cleanup, "cleanup");
        autoCleanup = opts.cleanup;
      }
      return new Promise2((resolve, reject) => {
        const cleanup = eos(stream, opts, (err) => {
          if (autoCleanup) {
            cleanup();
          }
          if (err) {
            reject(err);
          } else {
            resolve();
          }
        });
      });
    }
    module.exports = eos;
    module.exports.finished = finished;
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/destroy.js
var require_destroy = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/destroy.js"(exports, module) {
    "use strict";
    var process2 = require_browser4();
    var {
      aggregateTwoErrors,
      codes: { ERR_MULTIPLE_CALLBACK },
      AbortError
    } = require_errors3();
    var { Symbol: Symbol2 } = require_primordials();
    var { kIsDestroyed, isDestroyed, isFinished, isServerRequest } = require_utils2();
    var kDestroy = Symbol2("kDestroy");
    var kConstruct = Symbol2("kConstruct");
    function checkError(err, w, r) {
      if (err) {
        err.stack;
        if (w && !w.errored) {
          w.errored = err;
        }
        if (r && !r.errored) {
          r.errored = err;
        }
      }
    }
    function destroy(err, cb) {
      const r = this._readableState;
      const w = this._writableState;
      const s = w || r;
      if (w !== null && w !== void 0 && w.destroyed || r !== null && r !== void 0 && r.destroyed) {
        if (typeof cb === "function") {
          cb();
        }
        return this;
      }
      checkError(err, w, r);
      if (w) {
        w.destroyed = true;
      }
      if (r) {
        r.destroyed = true;
      }
      if (!s.constructed) {
        this.once(kDestroy, function(er) {
          _destroy(this, aggregateTwoErrors(er, err), cb);
        });
      } else {
        _destroy(this, err, cb);
      }
      return this;
    }
    function _destroy(self2, err, cb) {
      let called = false;
      function onDestroy(err2) {
        if (called) {
          return;
        }
        called = true;
        const r = self2._readableState;
        const w = self2._writableState;
        checkError(err2, w, r);
        if (w) {
          w.closed = true;
        }
        if (r) {
          r.closed = true;
        }
        if (typeof cb === "function") {
          cb(err2);
        }
        if (err2) {
          process2.nextTick(emitErrorCloseNT, self2, err2);
        } else {
          process2.nextTick(emitCloseNT, self2);
        }
      }
      try {
        self2._destroy(err || null, onDestroy);
      } catch (err2) {
        onDestroy(err2);
      }
    }
    function emitErrorCloseNT(self2, err) {
      emitErrorNT(self2, err);
      emitCloseNT(self2);
    }
    function emitCloseNT(self2) {
      const r = self2._readableState;
      const w = self2._writableState;
      if (w) {
        w.closeEmitted = true;
      }
      if (r) {
        r.closeEmitted = true;
      }
      if (w !== null && w !== void 0 && w.emitClose || r !== null && r !== void 0 && r.emitClose) {
        self2.emit("close");
      }
    }
    function emitErrorNT(self2, err) {
      const r = self2._readableState;
      const w = self2._writableState;
      if (w !== null && w !== void 0 && w.errorEmitted || r !== null && r !== void 0 && r.errorEmitted) {
        return;
      }
      if (w) {
        w.errorEmitted = true;
      }
      if (r) {
        r.errorEmitted = true;
      }
      self2.emit("error", err);
    }
    function undestroy() {
      const r = this._readableState;
      const w = this._writableState;
      if (r) {
        r.constructed = true;
        r.closed = false;
        r.closeEmitted = false;
        r.destroyed = false;
        r.errored = null;
        r.errorEmitted = false;
        r.reading = false;
        r.ended = r.readable === false;
        r.endEmitted = r.readable === false;
      }
      if (w) {
        w.constructed = true;
        w.destroyed = false;
        w.closed = false;
        w.closeEmitted = false;
        w.errored = null;
        w.errorEmitted = false;
        w.finalCalled = false;
        w.prefinished = false;
        w.ended = w.writable === false;
        w.ending = w.writable === false;
        w.finished = w.writable === false;
      }
    }
    function errorOrDestroy(stream, err, sync) {
      const r = stream._readableState;
      const w = stream._writableState;
      if (w !== null && w !== void 0 && w.destroyed || r !== null && r !== void 0 && r.destroyed) {
        return this;
      }
      if (r !== null && r !== void 0 && r.autoDestroy || w !== null && w !== void 0 && w.autoDestroy)
        stream.destroy(err);
      else if (err) {
        err.stack;
        if (w && !w.errored) {
          w.errored = err;
        }
        if (r && !r.errored) {
          r.errored = err;
        }
        if (sync) {
          process2.nextTick(emitErrorNT, stream, err);
        } else {
          emitErrorNT(stream, err);
        }
      }
    }
    function construct(stream, cb) {
      if (typeof stream._construct !== "function") {
        return;
      }
      const r = stream._readableState;
      const w = stream._writableState;
      if (r) {
        r.constructed = false;
      }
      if (w) {
        w.constructed = false;
      }
      stream.once(kConstruct, cb);
      if (stream.listenerCount(kConstruct) > 1) {
        return;
      }
      process2.nextTick(constructNT, stream);
    }
    function constructNT(stream) {
      let called = false;
      function onConstruct(err) {
        if (called) {
          errorOrDestroy(stream, err !== null && err !== void 0 ? err : new ERR_MULTIPLE_CALLBACK());
          return;
        }
        called = true;
        const r = stream._readableState;
        const w = stream._writableState;
        const s = w || r;
        if (r) {
          r.constructed = true;
        }
        if (w) {
          w.constructed = true;
        }
        if (s.destroyed) {
          stream.emit(kDestroy, err);
        } else if (err) {
          errorOrDestroy(stream, err, true);
        } else {
          process2.nextTick(emitConstructNT, stream);
        }
      }
      try {
        stream._construct((err) => {
          process2.nextTick(onConstruct, err);
        });
      } catch (err) {
        process2.nextTick(onConstruct, err);
      }
    }
    function emitConstructNT(stream) {
      stream.emit(kConstruct);
    }
    function isRequest(stream) {
      return (stream === null || stream === void 0 ? void 0 : stream.setHeader) && typeof stream.abort === "function";
    }
    function emitCloseLegacy(stream) {
      stream.emit("close");
    }
    function emitErrorCloseLegacy(stream, err) {
      stream.emit("error", err);
      process2.nextTick(emitCloseLegacy, stream);
    }
    function destroyer(stream, err) {
      if (!stream || isDestroyed(stream)) {
        return;
      }
      if (!err && !isFinished(stream)) {
        err = new AbortError();
      }
      if (isServerRequest(stream)) {
        stream.socket = null;
        stream.destroy(err);
      } else if (isRequest(stream)) {
        stream.abort();
      } else if (isRequest(stream.req)) {
        stream.req.abort();
      } else if (typeof stream.destroy === "function") {
        stream.destroy(err);
      } else if (typeof stream.close === "function") {
        stream.close();
      } else if (err) {
        process2.nextTick(emitErrorCloseLegacy, stream, err);
      } else {
        process2.nextTick(emitCloseLegacy, stream);
      }
      if (!stream.destroyed) {
        stream[kIsDestroyed] = true;
      }
    }
    module.exports = {
      construct,
      destroyer,
      destroy,
      undestroy,
      errorOrDestroy
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/legacy.js
var require_legacy = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/legacy.js"(exports, module) {
    "use strict";
    var { ArrayIsArray, ObjectSetPrototypeOf } = require_primordials();
    var { EventEmitter: EE } = require_events();
    function Stream(opts) {
      EE.call(this, opts);
    }
    ObjectSetPrototypeOf(Stream.prototype, EE.prototype);
    ObjectSetPrototypeOf(Stream, EE);
    Stream.prototype.pipe = function(dest, options) {
      const source = this;
      function ondata(chunk) {
        if (dest.writable && dest.write(chunk) === false && source.pause) {
          source.pause();
        }
      }
      source.on("data", ondata);
      function ondrain() {
        if (source.readable && source.resume) {
          source.resume();
        }
      }
      dest.on("drain", ondrain);
      if (!dest._isStdio && (!options || options.end !== false)) {
        source.on("end", onend);
        source.on("close", onclose);
      }
      let didOnEnd = false;
      function onend() {
        if (didOnEnd)
          return;
        didOnEnd = true;
        dest.end();
      }
      function onclose() {
        if (didOnEnd)
          return;
        didOnEnd = true;
        if (typeof dest.destroy === "function")
          dest.destroy();
      }
      function onerror(er) {
        cleanup();
        if (EE.listenerCount(this, "error") === 0) {
          this.emit("error", er);
        }
      }
      prependListener(source, "error", onerror);
      prependListener(dest, "error", onerror);
      function cleanup() {
        source.removeListener("data", ondata);
        dest.removeListener("drain", ondrain);
        source.removeListener("end", onend);
        source.removeListener("close", onclose);
        source.removeListener("error", onerror);
        dest.removeListener("error", onerror);
        source.removeListener("end", cleanup);
        source.removeListener("close", cleanup);
        dest.removeListener("close", cleanup);
      }
      source.on("end", cleanup);
      source.on("close", cleanup);
      dest.on("close", cleanup);
      dest.emit("pipe", source);
      return dest;
    };
    function prependListener(emitter, event, fn) {
      if (typeof emitter.prependListener === "function")
        return emitter.prependListener(event, fn);
      if (!emitter._events || !emitter._events[event])
        emitter.on(event, fn);
      else if (ArrayIsArray(emitter._events[event]))
        emitter._events[event].unshift(fn);
      else
        emitter._events[event] = [fn, emitter._events[event]];
    }
    module.exports = {
      Stream,
      prependListener
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/add-abort-signal.js
var require_add_abort_signal = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/add-abort-signal.js"(exports, module) {
    "use strict";
    var { SymbolDispose } = require_primordials();
    var { AbortError, codes } = require_errors3();
    var { isNodeStream, isWebStream, kControllerErrorFunction } = require_utils2();
    var eos = require_end_of_stream();
    var { ERR_INVALID_ARG_TYPE } = codes;
    var addAbortListener;
    var validateAbortSignal = (signal, name) => {
      if (typeof signal !== "object" || !("aborted" in signal)) {
        throw new ERR_INVALID_ARG_TYPE(name, "AbortSignal", signal);
      }
    };
    module.exports.addAbortSignal = function addAbortSignal(signal, stream) {
      validateAbortSignal(signal, "signal");
      if (!isNodeStream(stream) && !isWebStream(stream)) {
        throw new ERR_INVALID_ARG_TYPE("stream", ["ReadableStream", "WritableStream", "Stream"], stream);
      }
      return module.exports.addAbortSignalNoValidate(signal, stream);
    };
    module.exports.addAbortSignalNoValidate = function(signal, stream) {
      if (typeof signal !== "object" || !("aborted" in signal)) {
        return stream;
      }
      const onAbort = isNodeStream(stream) ? () => {
        stream.destroy(
          new AbortError(void 0, {
            cause: signal.reason
          })
        );
      } : () => {
        stream[kControllerErrorFunction](
          new AbortError(void 0, {
            cause: signal.reason
          })
        );
      };
      if (signal.aborted) {
        onAbort();
      } else {
        addAbortListener = addAbortListener || require_util2().addAbortListener;
        const disposable = addAbortListener(signal, onAbort);
        eos(stream, disposable[SymbolDispose]);
      }
      return stream;
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/buffer_list.js
var require_buffer_list = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/buffer_list.js"(exports, module) {
    "use strict";
    var { StringPrototypeSlice, SymbolIterator, TypedArrayPrototypeSet, Uint8Array: Uint8Array2 } = require_primordials();
    var { Buffer: Buffer2 } = require_buffer();
    var { inspect } = require_util2();
    module.exports = class BufferList {
      constructor() {
        this.head = null;
        this.tail = null;
        this.length = 0;
      }
      push(v) {
        const entry = {
          data: v,
          next: null
        };
        if (this.length > 0)
          this.tail.next = entry;
        else
          this.head = entry;
        this.tail = entry;
        ++this.length;
      }
      unshift(v) {
        const entry = {
          data: v,
          next: this.head
        };
        if (this.length === 0)
          this.tail = entry;
        this.head = entry;
        ++this.length;
      }
      shift() {
        if (this.length === 0)
          return;
        const ret = this.head.data;
        if (this.length === 1)
          this.head = this.tail = null;
        else
          this.head = this.head.next;
        --this.length;
        return ret;
      }
      clear() {
        this.head = this.tail = null;
        this.length = 0;
      }
      join(s) {
        if (this.length === 0)
          return "";
        let p = this.head;
        let ret = "" + p.data;
        while ((p = p.next) !== null)
          ret += s + p.data;
        return ret;
      }
      concat(n) {
        if (this.length === 0)
          return Buffer2.alloc(0);
        const ret = Buffer2.allocUnsafe(n >>> 0);
        let p = this.head;
        let i = 0;
        while (p) {
          TypedArrayPrototypeSet(ret, p.data, i);
          i += p.data.length;
          p = p.next;
        }
        return ret;
      }
      // Consumes a specified amount of bytes or characters from the buffered data.
      consume(n, hasStrings) {
        const data = this.head.data;
        if (n < data.length) {
          const slice = data.slice(0, n);
          this.head.data = data.slice(n);
          return slice;
        }
        if (n === data.length) {
          return this.shift();
        }
        return hasStrings ? this._getString(n) : this._getBuffer(n);
      }
      first() {
        return this.head.data;
      }
      *[SymbolIterator]() {
        for (let p = this.head; p; p = p.next) {
          yield p.data;
        }
      }
      // Consumes a specified amount of characters from the buffered data.
      _getString(n) {
        let ret = "";
        let p = this.head;
        let c = 0;
        do {
          const str = p.data;
          if (n > str.length) {
            ret += str;
            n -= str.length;
          } else {
            if (n === str.length) {
              ret += str;
              ++c;
              if (p.next)
                this.head = p.next;
              else
                this.head = this.tail = null;
            } else {
              ret += StringPrototypeSlice(str, 0, n);
              this.head = p;
              p.data = StringPrototypeSlice(str, n);
            }
            break;
          }
          ++c;
        } while ((p = p.next) !== null);
        this.length -= c;
        return ret;
      }
      // Consumes a specified amount of bytes from the buffered data.
      _getBuffer(n) {
        const ret = Buffer2.allocUnsafe(n);
        const retLen = n;
        let p = this.head;
        let c = 0;
        do {
          const buf = p.data;
          if (n > buf.length) {
            TypedArrayPrototypeSet(ret, buf, retLen - n);
            n -= buf.length;
          } else {
            if (n === buf.length) {
              TypedArrayPrototypeSet(ret, buf, retLen - n);
              ++c;
              if (p.next)
                this.head = p.next;
              else
                this.head = this.tail = null;
            } else {
              TypedArrayPrototypeSet(ret, new Uint8Array2(buf.buffer, buf.byteOffset, n), retLen - n);
              this.head = p;
              p.data = buf.slice(n);
            }
            break;
          }
          ++c;
        } while ((p = p.next) !== null);
        this.length -= c;
        return ret;
      }
      // Make sure the linked list only shows the minimal necessary information.
      [Symbol.for("nodejs.util.inspect.custom")](_, options) {
        return inspect(this, {
          ...options,
          // Only inspect one level.
          depth: 0,
          // It should not recurse.
          customInspect: false
        });
      }
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/state.js
var require_state = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/state.js"(exports, module) {
    "use strict";
    var { MathFloor, NumberIsInteger } = require_primordials();
    var { validateInteger } = require_validators();
    var { ERR_INVALID_ARG_VALUE } = require_errors3().codes;
    var defaultHighWaterMarkBytes = 16 * 1024;
    var defaultHighWaterMarkObjectMode = 16;
    function highWaterMarkFrom(options, isDuplex, duplexKey) {
      return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
    }
    function getDefaultHighWaterMark(objectMode) {
      return objectMode ? defaultHighWaterMarkObjectMode : defaultHighWaterMarkBytes;
    }
    function setDefaultHighWaterMark(objectMode, value) {
      validateInteger(value, "value", 0);
      if (objectMode) {
        defaultHighWaterMarkObjectMode = value;
      } else {
        defaultHighWaterMarkBytes = value;
      }
    }
    function getHighWaterMark(state, options, duplexKey, isDuplex) {
      const hwm = highWaterMarkFrom(options, isDuplex, duplexKey);
      if (hwm != null) {
        if (!NumberIsInteger(hwm) || hwm < 0) {
          const name = isDuplex ? `options.${duplexKey}` : "options.highWaterMark";
          throw new ERR_INVALID_ARG_VALUE(name, hwm);
        }
        return MathFloor(hwm);
      }
      return getDefaultHighWaterMark(state.objectMode);
    }
    module.exports = {
      getHighWaterMark,
      getDefaultHighWaterMark,
      setDefaultHighWaterMark
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/from.js
var require_from = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/from.js"(exports, module) {
    "use strict";
    var process2 = require_browser4();
    var { PromisePrototypeThen, SymbolAsyncIterator, SymbolIterator } = require_primordials();
    var { Buffer: Buffer2 } = require_buffer();
    var { ERR_INVALID_ARG_TYPE, ERR_STREAM_NULL_VALUES } = require_errors3().codes;
    function from(Readable, iterable, opts) {
      let iterator;
      if (typeof iterable === "string" || iterable instanceof Buffer2) {
        return new Readable({
          objectMode: true,
          ...opts,
          read() {
            this.push(iterable);
            this.push(null);
          }
        });
      }
      let isAsync;
      if (iterable && iterable[SymbolAsyncIterator]) {
        isAsync = true;
        iterator = iterable[SymbolAsyncIterator]();
      } else if (iterable && iterable[SymbolIterator]) {
        isAsync = false;
        iterator = iterable[SymbolIterator]();
      } else {
        throw new ERR_INVALID_ARG_TYPE("iterable", ["Iterable"], iterable);
      }
      const readable = new Readable({
        objectMode: true,
        highWaterMark: 1,
        // TODO(ronag): What options should be allowed?
        ...opts
      });
      let reading = false;
      readable._read = function() {
        if (!reading) {
          reading = true;
          next();
        }
      };
      readable._destroy = function(error, cb) {
        PromisePrototypeThen(
          close(error),
          () => process2.nextTick(cb, error),
          // nextTick is here in case cb throws
          (e) => process2.nextTick(cb, e || error)
        );
      };
      async function close(error) {
        const hadError = error !== void 0 && error !== null;
        const hasThrow = typeof iterator.throw === "function";
        if (hadError && hasThrow) {
          const { value, done } = await iterator.throw(error);
          await value;
          if (done) {
            return;
          }
        }
        if (typeof iterator.return === "function") {
          const { value } = await iterator.return();
          await value;
        }
      }
      async function next() {
        for (; ; ) {
          try {
            const { value, done } = isAsync ? await iterator.next() : iterator.next();
            if (done) {
              readable.push(null);
            } else {
              const res = value && typeof value.then === "function" ? await value : value;
              if (res === null) {
                reading = false;
                throw new ERR_STREAM_NULL_VALUES();
              } else if (readable.push(res)) {
                continue;
              } else {
                reading = false;
              }
            }
          } catch (err) {
            readable.destroy(err);
          }
          break;
        }
      }
      return readable;
    }
    module.exports = from;
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/readable.js
var require_readable = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/readable.js"(exports, module) {
    "use strict";
    var process2 = require_browser4();
    var {
      ArrayPrototypeIndexOf,
      NumberIsInteger,
      NumberIsNaN,
      NumberParseInt,
      ObjectDefineProperties,
      ObjectKeys,
      ObjectSetPrototypeOf,
      Promise: Promise2,
      SafeSet,
      SymbolAsyncDispose,
      SymbolAsyncIterator,
      Symbol: Symbol2
    } = require_primordials();
    module.exports = Readable;
    Readable.ReadableState = ReadableState;
    var { EventEmitter: EE } = require_events();
    var { Stream, prependListener } = require_legacy();
    var { Buffer: Buffer2 } = require_buffer();
    var { addAbortSignal } = require_add_abort_signal();
    var eos = require_end_of_stream();
    var debug = require_util2().debuglog("stream", (fn) => {
      debug = fn;
    });
    var BufferList = require_buffer_list();
    var destroyImpl = require_destroy();
    var { getHighWaterMark, getDefaultHighWaterMark } = require_state();
    var {
      aggregateTwoErrors,
      codes: {
        ERR_INVALID_ARG_TYPE,
        ERR_METHOD_NOT_IMPLEMENTED,
        ERR_OUT_OF_RANGE,
        ERR_STREAM_PUSH_AFTER_EOF,
        ERR_STREAM_UNSHIFT_AFTER_END_EVENT
      },
      AbortError
    } = require_errors3();
    var { validateObject } = require_validators();
    var kPaused = Symbol2("kPaused");
    var { StringDecoder } = require_string_decoder();
    var from = require_from();
    ObjectSetPrototypeOf(Readable.prototype, Stream.prototype);
    ObjectSetPrototypeOf(Readable, Stream);
    var nop = () => {
    };
    var { errorOrDestroy } = destroyImpl;
    var kObjectMode = 1 << 0;
    var kEnded = 1 << 1;
    var kEndEmitted = 1 << 2;
    var kReading = 1 << 3;
    var kConstructed = 1 << 4;
    var kSync = 1 << 5;
    var kNeedReadable = 1 << 6;
    var kEmittedReadable = 1 << 7;
    var kReadableListening = 1 << 8;
    var kResumeScheduled = 1 << 9;
    var kErrorEmitted = 1 << 10;
    var kEmitClose = 1 << 11;
    var kAutoDestroy = 1 << 12;
    var kDestroyed = 1 << 13;
    var kClosed = 1 << 14;
    var kCloseEmitted = 1 << 15;
    var kMultiAwaitDrain = 1 << 16;
    var kReadingMore = 1 << 17;
    var kDataEmitted = 1 << 18;
    function makeBitMapDescriptor(bit) {
      return {
        enumerable: false,
        get() {
          return (this.state & bit) !== 0;
        },
        set(value) {
          if (value)
            this.state |= bit;
          else
            this.state &= ~bit;
        }
      };
    }
    ObjectDefineProperties(ReadableState.prototype, {
      objectMode: makeBitMapDescriptor(kObjectMode),
      ended: makeBitMapDescriptor(kEnded),
      endEmitted: makeBitMapDescriptor(kEndEmitted),
      reading: makeBitMapDescriptor(kReading),
      // Stream is still being constructed and cannot be
      // destroyed until construction finished or failed.
      // Async construction is opt in, therefore we start as
      // constructed.
      constructed: makeBitMapDescriptor(kConstructed),
      // A flag to be able to tell if the event 'readable'/'data' is emitted
      // immediately, or on a later tick.  We set this to true at first, because
      // any actions that shouldn't happen until "later" should generally also
      // not happen before the first read call.
      sync: makeBitMapDescriptor(kSync),
      // Whenever we return null, then we set a flag to say
      // that we're awaiting a 'readable' event emission.
      needReadable: makeBitMapDescriptor(kNeedReadable),
      emittedReadable: makeBitMapDescriptor(kEmittedReadable),
      readableListening: makeBitMapDescriptor(kReadableListening),
      resumeScheduled: makeBitMapDescriptor(kResumeScheduled),
      // True if the error was already emitted and should not be thrown again.
      errorEmitted: makeBitMapDescriptor(kErrorEmitted),
      emitClose: makeBitMapDescriptor(kEmitClose),
      autoDestroy: makeBitMapDescriptor(kAutoDestroy),
      // Has it been destroyed.
      destroyed: makeBitMapDescriptor(kDestroyed),
      // Indicates whether the stream has finished destroying.
      closed: makeBitMapDescriptor(kClosed),
      // True if close has been emitted or would have been emitted
      // depending on emitClose.
      closeEmitted: makeBitMapDescriptor(kCloseEmitted),
      multiAwaitDrain: makeBitMapDescriptor(kMultiAwaitDrain),
      // If true, a maybeReadMore has been scheduled.
      readingMore: makeBitMapDescriptor(kReadingMore),
      dataEmitted: makeBitMapDescriptor(kDataEmitted)
    });
    function ReadableState(options, stream, isDuplex) {
      if (typeof isDuplex !== "boolean")
        isDuplex = stream instanceof require_duplex();
      this.state = kEmitClose | kAutoDestroy | kConstructed | kSync;
      if (options && options.objectMode)
        this.state |= kObjectMode;
      if (isDuplex && options && options.readableObjectMode)
        this.state |= kObjectMode;
      this.highWaterMark = options ? getHighWaterMark(this, options, "readableHighWaterMark", isDuplex) : getDefaultHighWaterMark(false);
      this.buffer = new BufferList();
      this.length = 0;
      this.pipes = [];
      this.flowing = null;
      this[kPaused] = null;
      if (options && options.emitClose === false)
        this.state &= ~kEmitClose;
      if (options && options.autoDestroy === false)
        this.state &= ~kAutoDestroy;
      this.errored = null;
      this.defaultEncoding = options && options.defaultEncoding || "utf8";
      this.awaitDrainWriters = null;
      this.decoder = null;
      this.encoding = null;
      if (options && options.encoding) {
        this.decoder = new StringDecoder(options.encoding);
        this.encoding = options.encoding;
      }
    }
    function Readable(options) {
      if (!(this instanceof Readable))
        return new Readable(options);
      const isDuplex = this instanceof require_duplex();
      this._readableState = new ReadableState(options, this, isDuplex);
      if (options) {
        if (typeof options.read === "function")
          this._read = options.read;
        if (typeof options.destroy === "function")
          this._destroy = options.destroy;
        if (typeof options.construct === "function")
          this._construct = options.construct;
        if (options.signal && !isDuplex)
          addAbortSignal(options.signal, this);
      }
      Stream.call(this, options);
      destroyImpl.construct(this, () => {
        if (this._readableState.needReadable) {
          maybeReadMore(this, this._readableState);
        }
      });
    }
    Readable.prototype.destroy = destroyImpl.destroy;
    Readable.prototype._undestroy = destroyImpl.undestroy;
    Readable.prototype._destroy = function(err, cb) {
      cb(err);
    };
    Readable.prototype[EE.captureRejectionSymbol] = function(err) {
      this.destroy(err);
    };
    Readable.prototype[SymbolAsyncDispose] = function() {
      let error;
      if (!this.destroyed) {
        error = this.readableEnded ? null : new AbortError();
        this.destroy(error);
      }
      return new Promise2((resolve, reject) => eos(this, (err) => err && err !== error ? reject(err) : resolve(null)));
    };
    Readable.prototype.push = function(chunk, encoding) {
      return readableAddChunk(this, chunk, encoding, false);
    };
    Readable.prototype.unshift = function(chunk, encoding) {
      return readableAddChunk(this, chunk, encoding, true);
    };
    function readableAddChunk(stream, chunk, encoding, addToFront) {
      debug("readableAddChunk", chunk);
      const state = stream._readableState;
      let err;
      if ((state.state & kObjectMode) === 0) {
        if (typeof chunk === "string") {
          encoding = encoding || state.defaultEncoding;
          if (state.encoding !== encoding) {
            if (addToFront && state.encoding) {
              chunk = Buffer2.from(chunk, encoding).toString(state.encoding);
            } else {
              chunk = Buffer2.from(chunk, encoding);
              encoding = "";
            }
          }
        } else if (chunk instanceof Buffer2) {
          encoding = "";
        } else if (Stream._isUint8Array(chunk)) {
          chunk = Stream._uint8ArrayToBuffer(chunk);
          encoding = "";
        } else if (chunk != null) {
          err = new ERR_INVALID_ARG_TYPE("chunk", ["string", "Buffer", "Uint8Array"], chunk);
        }
      }
      if (err) {
        errorOrDestroy(stream, err);
      } else if (chunk === null) {
        state.state &= ~kReading;
        onEofChunk(stream, state);
      } else if ((state.state & kObjectMode) !== 0 || chunk && chunk.length > 0) {
        if (addToFront) {
          if ((state.state & kEndEmitted) !== 0)
            errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());
          else if (state.destroyed || state.errored)
            return false;
          else
            addChunk(stream, state, chunk, true);
        } else if (state.ended) {
          errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
        } else if (state.destroyed || state.errored) {
          return false;
        } else {
          state.state &= ~kReading;
          if (state.decoder && !encoding) {
            chunk = state.decoder.write(chunk);
            if (state.objectMode || chunk.length !== 0)
              addChunk(stream, state, chunk, false);
            else
              maybeReadMore(stream, state);
          } else {
            addChunk(stream, state, chunk, false);
          }
        }
      } else if (!addToFront) {
        state.state &= ~kReading;
        maybeReadMore(stream, state);
      }
      return !state.ended && (state.length < state.highWaterMark || state.length === 0);
    }
    function addChunk(stream, state, chunk, addToFront) {
      if (state.flowing && state.length === 0 && !state.sync && stream.listenerCount("data") > 0) {
        if ((state.state & kMultiAwaitDrain) !== 0) {
          state.awaitDrainWriters.clear();
        } else {
          state.awaitDrainWriters = null;
        }
        state.dataEmitted = true;
        stream.emit("data", chunk);
      } else {
        state.length += state.objectMode ? 1 : chunk.length;
        if (addToFront)
          state.buffer.unshift(chunk);
        else
          state.buffer.push(chunk);
        if ((state.state & kNeedReadable) !== 0)
          emitReadable(stream);
      }
      maybeReadMore(stream, state);
    }
    Readable.prototype.isPaused = function() {
      const state = this._readableState;
      return state[kPaused] === true || state.flowing === false;
    };
    Readable.prototype.setEncoding = function(enc) {
      const decoder = new StringDecoder(enc);
      this._readableState.decoder = decoder;
      this._readableState.encoding = this._readableState.decoder.encoding;
      const buffer = this._readableState.buffer;
      let content = "";
      for (const data of buffer) {
        content += decoder.write(data);
      }
      buffer.clear();
      if (content !== "")
        buffer.push(content);
      this._readableState.length = content.length;
      return this;
    };
    var MAX_HWM = 1073741824;
    function computeNewHighWaterMark(n) {
      if (n > MAX_HWM) {
        throw new ERR_OUT_OF_RANGE("size", "<= 1GiB", n);
      } else {
        n--;
        n |= n >>> 1;
        n |= n >>> 2;
        n |= n >>> 4;
        n |= n >>> 8;
        n |= n >>> 16;
        n++;
      }
      return n;
    }
    function howMuchToRead(n, state) {
      if (n <= 0 || state.length === 0 && state.ended)
        return 0;
      if ((state.state & kObjectMode) !== 0)
        return 1;
      if (NumberIsNaN(n)) {
        if (state.flowing && state.length)
          return state.buffer.first().length;
        return state.length;
      }
      if (n <= state.length)
        return n;
      return state.ended ? state.length : 0;
    }
    Readable.prototype.read = function(n) {
      debug("read", n);
      if (n === void 0) {
        n = NaN;
      } else if (!NumberIsInteger(n)) {
        n = NumberParseInt(n, 10);
      }
      const state = this._readableState;
      const nOrig = n;
      if (n > state.highWaterMark)
        state.highWaterMark = computeNewHighWaterMark(n);
      if (n !== 0)
        state.state &= ~kEmittedReadable;
      if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
        debug("read: emitReadable", state.length, state.ended);
        if (state.length === 0 && state.ended)
          endReadable(this);
        else
          emitReadable(this);
        return null;
      }
      n = howMuchToRead(n, state);
      if (n === 0 && state.ended) {
        if (state.length === 0)
          endReadable(this);
        return null;
      }
      let doRead = (state.state & kNeedReadable) !== 0;
      debug("need readable", doRead);
      if (state.length === 0 || state.length - n < state.highWaterMark) {
        doRead = true;
        debug("length less than watermark", doRead);
      }
      if (state.ended || state.reading || state.destroyed || state.errored || !state.constructed) {
        doRead = false;
        debug("reading, ended or constructing", doRead);
      } else if (doRead) {
        debug("do read");
        state.state |= kReading | kSync;
        if (state.length === 0)
          state.state |= kNeedReadable;
        try {
          this._read(state.highWaterMark);
        } catch (err) {
          errorOrDestroy(this, err);
        }
        state.state &= ~kSync;
        if (!state.reading)
          n = howMuchToRead(nOrig, state);
      }
      let ret;
      if (n > 0)
        ret = fromList(n, state);
      else
        ret = null;
      if (ret === null) {
        state.needReadable = state.length <= state.highWaterMark;
        n = 0;
      } else {
        state.length -= n;
        if (state.multiAwaitDrain) {
          state.awaitDrainWriters.clear();
        } else {
          state.awaitDrainWriters = null;
        }
      }
      if (state.length === 0) {
        if (!state.ended)
          state.needReadable = true;
        if (nOrig !== n && state.ended)
          endReadable(this);
      }
      if (ret !== null && !state.errorEmitted && !state.closeEmitted) {
        state.dataEmitted = true;
        this.emit("data", ret);
      }
      return ret;
    };
    function onEofChunk(stream, state) {
      debug("onEofChunk");
      if (state.ended)
        return;
      if (state.decoder) {
        const chunk = state.decoder.end();
        if (chunk && chunk.length) {
          state.buffer.push(chunk);
          state.length += state.objectMode ? 1 : chunk.length;
        }
      }
      state.ended = true;
      if (state.sync) {
        emitReadable(stream);
      } else {
        state.needReadable = false;
        state.emittedReadable = true;
        emitReadable_(stream);
      }
    }
    function emitReadable(stream) {
      const state = stream._readableState;
      debug("emitReadable", state.needReadable, state.emittedReadable);
      state.needReadable = false;
      if (!state.emittedReadable) {
        debug("emitReadable", state.flowing);
        state.emittedReadable = true;
        process2.nextTick(emitReadable_, stream);
      }
    }
    function emitReadable_(stream) {
      const state = stream._readableState;
      debug("emitReadable_", state.destroyed, state.length, state.ended);
      if (!state.destroyed && !state.errored && (state.length || state.ended)) {
        stream.emit("readable");
        state.emittedReadable = false;
      }
      state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
      flow(stream);
    }
    function maybeReadMore(stream, state) {
      if (!state.readingMore && state.constructed) {
        state.readingMore = true;
        process2.nextTick(maybeReadMore_, stream, state);
      }
    }
    function maybeReadMore_(stream, state) {
      while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
        const len = state.length;
        debug("maybeReadMore read 0");
        stream.read(0);
        if (len === state.length)
          break;
      }
      state.readingMore = false;
    }
    Readable.prototype._read = function(n) {
      throw new ERR_METHOD_NOT_IMPLEMENTED("_read()");
    };
    Readable.prototype.pipe = function(dest, pipeOpts) {
      const src = this;
      const state = this._readableState;
      if (state.pipes.length === 1) {
        if (!state.multiAwaitDrain) {
          state.multiAwaitDrain = true;
          state.awaitDrainWriters = new SafeSet(state.awaitDrainWriters ? [state.awaitDrainWriters] : []);
        }
      }
      state.pipes.push(dest);
      debug("pipe count=%d opts=%j", state.pipes.length, pipeOpts);
      const doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process2.stdout && dest !== process2.stderr;
      const endFn = doEnd ? onend : unpipe;
      if (state.endEmitted)
        process2.nextTick(endFn);
      else
        src.once("end", endFn);
      dest.on("unpipe", onunpipe);
      function onunpipe(readable, unpipeInfo) {
        debug("onunpipe");
        if (readable === src) {
          if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
            unpipeInfo.hasUnpiped = true;
            cleanup();
          }
        }
      }
      function onend() {
        debug("onend");
        dest.end();
      }
      let ondrain;
      let cleanedUp = false;
      function cleanup() {
        debug("cleanup");
        dest.removeListener("close", onclose);
        dest.removeListener("finish", onfinish);
        if (ondrain) {
          dest.removeListener("drain", ondrain);
        }
        dest.removeListener("error", onerror);
        dest.removeListener("unpipe", onunpipe);
        src.removeListener("end", onend);
        src.removeListener("end", unpipe);
        src.removeListener("data", ondata);
        cleanedUp = true;
        if (ondrain && state.awaitDrainWriters && (!dest._writableState || dest._writableState.needDrain))
          ondrain();
      }
      function pause() {
        if (!cleanedUp) {
          if (state.pipes.length === 1 && state.pipes[0] === dest) {
            debug("false write response, pause", 0);
            state.awaitDrainWriters = dest;
            state.multiAwaitDrain = false;
          } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {
            debug("false write response, pause", state.awaitDrainWriters.size);
            state.awaitDrainWriters.add(dest);
          }
          src.pause();
        }
        if (!ondrain) {
          ondrain = pipeOnDrain(src, dest);
          dest.on("drain", ondrain);
        }
      }
      src.on("data", ondata);
      function ondata(chunk) {
        debug("ondata");
        const ret = dest.write(chunk);
        debug("dest.write", ret);
        if (ret === false) {
          pause();
        }
      }
      function onerror(er) {
        debug("onerror", er);
        unpipe();
        dest.removeListener("error", onerror);
        if (dest.listenerCount("error") === 0) {
          const s = dest._writableState || dest._readableState;
          if (s && !s.errorEmitted) {
            errorOrDestroy(dest, er);
          } else {
            dest.emit("error", er);
          }
        }
      }
      prependListener(dest, "error", onerror);
      function onclose() {
        dest.removeListener("finish", onfinish);
        unpipe();
      }
      dest.once("close", onclose);
      function onfinish() {
        debug("onfinish");
        dest.removeListener("close", onclose);
        unpipe();
      }
      dest.once("finish", onfinish);
      function unpipe() {
        debug("unpipe");
        src.unpipe(dest);
      }
      dest.emit("pipe", src);
      if (dest.writableNeedDrain === true) {
        pause();
      } else if (!state.flowing) {
        debug("pipe resume");
        src.resume();
      }
      return dest;
    };
    function pipeOnDrain(src, dest) {
      return function pipeOnDrainFunctionResult() {
        const state = src._readableState;
        if (state.awaitDrainWriters === dest) {
          debug("pipeOnDrain", 1);
          state.awaitDrainWriters = null;
        } else if (state.multiAwaitDrain) {
          debug("pipeOnDrain", state.awaitDrainWriters.size);
          state.awaitDrainWriters.delete(dest);
        }
        if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) && src.listenerCount("data")) {
          src.resume();
        }
      };
    }
    Readable.prototype.unpipe = function(dest) {
      const state = this._readableState;
      const unpipeInfo = {
        hasUnpiped: false
      };
      if (state.pipes.length === 0)
        return this;
      if (!dest) {
        const dests = state.pipes;
        state.pipes = [];
        this.pause();
        for (let i = 0; i < dests.length; i++)
          dests[i].emit("unpipe", this, {
            hasUnpiped: false
          });
        return this;
      }
      const index = ArrayPrototypeIndexOf(state.pipes, dest);
      if (index === -1)
        return this;
      state.pipes.splice(index, 1);
      if (state.pipes.length === 0)
        this.pause();
      dest.emit("unpipe", this, unpipeInfo);
      return this;
    };
    Readable.prototype.on = function(ev, fn) {
      const res = Stream.prototype.on.call(this, ev, fn);
      const state = this._readableState;
      if (ev === "data") {
        state.readableListening = this.listenerCount("readable") > 0;
        if (state.flowing !== false)
          this.resume();
      } else if (ev === "readable") {
        if (!state.endEmitted && !state.readableListening) {
          state.readableListening = state.needReadable = true;
          state.flowing = false;
          state.emittedReadable = false;
          debug("on readable", state.length, state.reading);
          if (state.length) {
            emitReadable(this);
          } else if (!state.reading) {
            process2.nextTick(nReadingNextTick, this);
          }
        }
      }
      return res;
    };
    Readable.prototype.addListener = Readable.prototype.on;
    Readable.prototype.removeListener = function(ev, fn) {
      const res = Stream.prototype.removeListener.call(this, ev, fn);
      if (ev === "readable") {
        process2.nextTick(updateReadableListening, this);
      }
      return res;
    };
    Readable.prototype.off = Readable.prototype.removeListener;
    Readable.prototype.removeAllListeners = function(ev) {
      const res = Stream.prototype.removeAllListeners.apply(this, arguments);
      if (ev === "readable" || ev === void 0) {
        process2.nextTick(updateReadableListening, this);
      }
      return res;
    };
    function updateReadableListening(self2) {
      const state = self2._readableState;
      state.readableListening = self2.listenerCount("readable") > 0;
      if (state.resumeScheduled && state[kPaused] === false) {
        state.flowing = true;
      } else if (self2.listenerCount("data") > 0) {
        self2.resume();
      } else if (!state.readableListening) {
        state.flowing = null;
      }
    }
    function nReadingNextTick(self2) {
      debug("readable nexttick read 0");
      self2.read(0);
    }
    Readable.prototype.resume = function() {
      const state = this._readableState;
      if (!state.flowing) {
        debug("resume");
        state.flowing = !state.readableListening;
        resume(this, state);
      }
      state[kPaused] = false;
      return this;
    };
    function resume(stream, state) {
      if (!state.resumeScheduled) {
        state.resumeScheduled = true;
        process2.nextTick(resume_, stream, state);
      }
    }
    function resume_(stream, state) {
      debug("resume", state.reading);
      if (!state.reading) {
        stream.read(0);
      }
      state.resumeScheduled = false;
      stream.emit("resume");
      flow(stream);
      if (state.flowing && !state.reading)
        stream.read(0);
    }
    Readable.prototype.pause = function() {
      debug("call pause flowing=%j", this._readableState.flowing);
      if (this._readableState.flowing !== false) {
        debug("pause");
        this._readableState.flowing = false;
        this.emit("pause");
      }
      this._readableState[kPaused] = true;
      return this;
    };
    function flow(stream) {
      const state = stream._readableState;
      debug("flow", state.flowing);
      while (state.flowing && stream.read() !== null)
        ;
    }
    Readable.prototype.wrap = function(stream) {
      let paused = false;
      stream.on("data", (chunk) => {
        if (!this.push(chunk) && stream.pause) {
          paused = true;
          stream.pause();
        }
      });
      stream.on("end", () => {
        this.push(null);
      });
      stream.on("error", (err) => {
        errorOrDestroy(this, err);
      });
      stream.on("close", () => {
        this.destroy();
      });
      stream.on("destroy", () => {
        this.destroy();
      });
      this._read = () => {
        if (paused && stream.resume) {
          paused = false;
          stream.resume();
        }
      };
      const streamKeys = ObjectKeys(stream);
      for (let j = 1; j < streamKeys.length; j++) {
        const i = streamKeys[j];
        if (this[i] === void 0 && typeof stream[i] === "function") {
          this[i] = stream[i].bind(stream);
        }
      }
      return this;
    };
    Readable.prototype[SymbolAsyncIterator] = function() {
      return streamToAsyncIterator(this);
    };
    Readable.prototype.iterator = function(options) {
      if (options !== void 0) {
        validateObject(options, "options");
      }
      return streamToAsyncIterator(this, options);
    };
    function streamToAsyncIterator(stream, options) {
      if (typeof stream.read !== "function") {
        stream = Readable.wrap(stream, {
          objectMode: true
        });
      }
      const iter = createAsyncIterator(stream, options);
      iter.stream = stream;
      return iter;
    }
    async function* createAsyncIterator(stream, options) {
      let callback = nop;
      function next(resolve) {
        if (this === stream) {
          callback();
          callback = nop;
        } else {
          callback = resolve;
        }
      }
      stream.on("readable", next);
      let error;
      const cleanup = eos(
        stream,
        {
          writable: false
        },
        (err) => {
          error = err ? aggregateTwoErrors(error, err) : null;
          callback();
          callback = nop;
        }
      );
      try {
        while (true) {
          const chunk = stream.destroyed ? null : stream.read();
          if (chunk !== null) {
            yield chunk;
          } else if (error) {
            throw error;
          } else if (error === null) {
            return;
          } else {
            await new Promise2(next);
          }
        }
      } catch (err) {
        error = aggregateTwoErrors(error, err);
        throw error;
      } finally {
        if ((error || (options === null || options === void 0 ? void 0 : options.destroyOnReturn) !== false) && (error === void 0 || stream._readableState.autoDestroy)) {
          destroyImpl.destroyer(stream, null);
        } else {
          stream.off("readable", next);
          cleanup();
        }
      }
    }
    ObjectDefineProperties(Readable.prototype, {
      readable: {
        __proto__: null,
        get() {
          const r = this._readableState;
          return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted && !r.endEmitted;
        },
        set(val) {
          if (this._readableState) {
            this._readableState.readable = !!val;
          }
        }
      },
      readableDidRead: {
        __proto__: null,
        enumerable: false,
        get: function() {
          return this._readableState.dataEmitted;
        }
      },
      readableAborted: {
        __proto__: null,
        enumerable: false,
        get: function() {
          return !!(this._readableState.readable !== false && (this._readableState.destroyed || this._readableState.errored) && !this._readableState.endEmitted);
        }
      },
      readableHighWaterMark: {
        __proto__: null,
        enumerable: false,
        get: function() {
          return this._readableState.highWaterMark;
        }
      },
      readableBuffer: {
        __proto__: null,
        enumerable: false,
        get: function() {
          return this._readableState && this._readableState.buffer;
        }
      },
      readableFlowing: {
        __proto__: null,
        enumerable: false,
        get: function() {
          return this._readableState.flowing;
        },
        set: function(state) {
          if (this._readableState) {
            this._readableState.flowing = state;
          }
        }
      },
      readableLength: {
        __proto__: null,
        enumerable: false,
        get() {
          return this._readableState.length;
        }
      },
      readableObjectMode: {
        __proto__: null,
        enumerable: false,
        get() {
          return this._readableState ? this._readableState.objectMode : false;
        }
      },
      readableEncoding: {
        __proto__: null,
        enumerable: false,
        get() {
          return this._readableState ? this._readableState.encoding : null;
        }
      },
      errored: {
        __proto__: null,
        enumerable: false,
        get() {
          return this._readableState ? this._readableState.errored : null;
        }
      },
      closed: {
        __proto__: null,
        get() {
          return this._readableState ? this._readableState.closed : false;
        }
      },
      destroyed: {
        __proto__: null,
        enumerable: false,
        get() {
          return this._readableState ? this._readableState.destroyed : false;
        },
        set(value) {
          if (!this._readableState) {
            return;
          }
          this._readableState.destroyed = value;
        }
      },
      readableEnded: {
        __proto__: null,
        enumerable: false,
        get() {
          return this._readableState ? this._readableState.endEmitted : false;
        }
      }
    });
    ObjectDefineProperties(ReadableState.prototype, {
      // Legacy getter for `pipesCount`.
      pipesCount: {
        __proto__: null,
        get() {
          return this.pipes.length;
        }
      },
      // Legacy property for `paused`.
      paused: {
        __proto__: null,
        get() {
          return this[kPaused] !== false;
        },
        set(value) {
          this[kPaused] = !!value;
        }
      }
    });
    Readable._fromList = fromList;
    function fromList(n, state) {
      if (state.length === 0)
        return null;
      let ret;
      if (state.objectMode)
        ret = state.buffer.shift();
      else if (!n || n >= state.length) {
        if (state.decoder)
          ret = state.buffer.join("");
        else if (state.buffer.length === 1)
          ret = state.buffer.first();
        else
          ret = state.buffer.concat(state.length);
        state.buffer.clear();
      } else {
        ret = state.buffer.consume(n, state.decoder);
      }
      return ret;
    }
    function endReadable(stream) {
      const state = stream._readableState;
      debug("endReadable", state.endEmitted);
      if (!state.endEmitted) {
        state.ended = true;
        process2.nextTick(endReadableNT, state, stream);
      }
    }
    function endReadableNT(state, stream) {
      debug("endReadableNT", state.endEmitted, state.length);
      if (!state.errored && !state.closeEmitted && !state.endEmitted && state.length === 0) {
        state.endEmitted = true;
        stream.emit("end");
        if (stream.writable && stream.allowHalfOpen === false) {
          process2.nextTick(endWritableNT, stream);
        } else if (state.autoDestroy) {
          const wState = stream._writableState;
          const autoDestroy = !wState || wState.autoDestroy && // We don't expect the writable to ever 'finish'
          // if writable is explicitly set to false.
          (wState.finished || wState.writable === false);
          if (autoDestroy) {
            stream.destroy();
          }
        }
      }
    }
    function endWritableNT(stream) {
      const writable = stream.writable && !stream.writableEnded && !stream.destroyed;
      if (writable) {
        stream.end();
      }
    }
    Readable.from = function(iterable, opts) {
      return from(Readable, iterable, opts);
    };
    var webStreamsAdapters;
    function lazyWebStreams() {
      if (webStreamsAdapters === void 0)
        webStreamsAdapters = {};
      return webStreamsAdapters;
    }
    Readable.fromWeb = function(readableStream, options) {
      return lazyWebStreams().newStreamReadableFromReadableStream(readableStream, options);
    };
    Readable.toWeb = function(streamReadable, options) {
      return lazyWebStreams().newReadableStreamFromStreamReadable(streamReadable, options);
    };
    Readable.wrap = function(src, options) {
      var _ref, _src$readableObjectMo;
      return new Readable({
        objectMode: (_ref = (_src$readableObjectMo = src.readableObjectMode) !== null && _src$readableObjectMo !== void 0 ? _src$readableObjectMo : src.objectMode) !== null && _ref !== void 0 ? _ref : true,
        ...options,
        destroy(err, callback) {
          destroyImpl.destroyer(src, err);
          callback(err);
        }
      }).wrap(src);
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/writable.js
var require_writable = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/writable.js"(exports, module) {
    "use strict";
    var process2 = require_browser4();
    var {
      ArrayPrototypeSlice,
      Error: Error2,
      FunctionPrototypeSymbolHasInstance,
      ObjectDefineProperty,
      ObjectDefineProperties,
      ObjectSetPrototypeOf,
      StringPrototypeToLowerCase,
      Symbol: Symbol2,
      SymbolHasInstance
    } = require_primordials();
    module.exports = Writable;
    Writable.WritableState = WritableState;
    var { EventEmitter: EE } = require_events();
    var Stream = require_legacy().Stream;
    var { Buffer: Buffer2 } = require_buffer();
    var destroyImpl = require_destroy();
    var { addAbortSignal } = require_add_abort_signal();
    var { getHighWaterMark, getDefaultHighWaterMark } = require_state();
    var {
      ERR_INVALID_ARG_TYPE,
      ERR_METHOD_NOT_IMPLEMENTED,
      ERR_MULTIPLE_CALLBACK,
      ERR_STREAM_CANNOT_PIPE,
      ERR_STREAM_DESTROYED,
      ERR_STREAM_ALREADY_FINISHED,
      ERR_STREAM_NULL_VALUES,
      ERR_STREAM_WRITE_AFTER_END,
      ERR_UNKNOWN_ENCODING
    } = require_errors3().codes;
    var { errorOrDestroy } = destroyImpl;
    ObjectSetPrototypeOf(Writable.prototype, Stream.prototype);
    ObjectSetPrototypeOf(Writable, Stream);
    function nop() {
    }
    var kOnFinished = Symbol2("kOnFinished");
    function WritableState(options, stream, isDuplex) {
      if (typeof isDuplex !== "boolean")
        isDuplex = stream instanceof require_duplex();
      this.objectMode = !!(options && options.objectMode);
      if (isDuplex)
        this.objectMode = this.objectMode || !!(options && options.writableObjectMode);
      this.highWaterMark = options ? getHighWaterMark(this, options, "writableHighWaterMark", isDuplex) : getDefaultHighWaterMark(false);
      this.finalCalled = false;
      this.needDrain = false;
      this.ending = false;
      this.ended = false;
      this.finished = false;
      this.destroyed = false;
      const noDecode = !!(options && options.decodeStrings === false);
      this.decodeStrings = !noDecode;
      this.defaultEncoding = options && options.defaultEncoding || "utf8";
      this.length = 0;
      this.writing = false;
      this.corked = 0;
      this.sync = true;
      this.bufferProcessing = false;
      this.onwrite = onwrite.bind(void 0, stream);
      this.writecb = null;
      this.writelen = 0;
      this.afterWriteTickInfo = null;
      resetBuffer(this);
      this.pendingcb = 0;
      this.constructed = true;
      this.prefinished = false;
      this.errorEmitted = false;
      this.emitClose = !options || options.emitClose !== false;
      this.autoDestroy = !options || options.autoDestroy !== false;
      this.errored = null;
      this.closed = false;
      this.closeEmitted = false;
      this[kOnFinished] = [];
    }
    function resetBuffer(state) {
      state.buffered = [];
      state.bufferedIndex = 0;
      state.allBuffers = true;
      state.allNoop = true;
    }
    WritableState.prototype.getBuffer = function getBuffer() {
      return ArrayPrototypeSlice(this.buffered, this.bufferedIndex);
    };
    ObjectDefineProperty(WritableState.prototype, "bufferedRequestCount", {
      __proto__: null,
      get() {
        return this.buffered.length - this.bufferedIndex;
      }
    });
    function Writable(options) {
      const isDuplex = this instanceof require_duplex();
      if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable, this))
        return new Writable(options);
      this._writableState = new WritableState(options, this, isDuplex);
      if (options) {
        if (typeof options.write === "function")
          this._write = options.write;
        if (typeof options.writev === "function")
          this._writev = options.writev;
        if (typeof options.destroy === "function")
          this._destroy = options.destroy;
        if (typeof options.final === "function")
          this._final = options.final;
        if (typeof options.construct === "function")
          this._construct = options.construct;
        if (options.signal)
          addAbortSignal(options.signal, this);
      }
      Stream.call(this, options);
      destroyImpl.construct(this, () => {
        const state = this._writableState;
        if (!state.writing) {
          clearBuffer(this, state);
        }
        finishMaybe(this, state);
      });
    }
    ObjectDefineProperty(Writable, SymbolHasInstance, {
      __proto__: null,
      value: function(object) {
        if (FunctionPrototypeSymbolHasInstance(this, object))
          return true;
        if (this !== Writable)
          return false;
        return object && object._writableState instanceof WritableState;
      }
    });
    Writable.prototype.pipe = function() {
      errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
    };
    function _write(stream, chunk, encoding, cb) {
      const state = stream._writableState;
      if (typeof encoding === "function") {
        cb = encoding;
        encoding = state.defaultEncoding;
      } else {
        if (!encoding)
          encoding = state.defaultEncoding;
        else if (encoding !== "buffer" && !Buffer2.isEncoding(encoding))
          throw new ERR_UNKNOWN_ENCODING(encoding);
        if (typeof cb !== "function")
          cb = nop;
      }
      if (chunk === null) {
        throw new ERR_STREAM_NULL_VALUES();
      } else if (!state.objectMode) {
        if (typeof chunk === "string") {
          if (state.decodeStrings !== false) {
            chunk = Buffer2.from(chunk, encoding);
            encoding = "buffer";
          }
        } else if (chunk instanceof Buffer2) {
          encoding = "buffer";
        } else if (Stream._isUint8Array(chunk)) {
          chunk = Stream._uint8ArrayToBuffer(chunk);
          encoding = "buffer";
        } else {
          throw new ERR_INVALID_ARG_TYPE("chunk", ["string", "Buffer", "Uint8Array"], chunk);
        }
      }
      let err;
      if (state.ending) {
        err = new ERR_STREAM_WRITE_AFTER_END();
      } else if (state.destroyed) {
        err = new ERR_STREAM_DESTROYED("write");
      }
      if (err) {
        process2.nextTick(cb, err);
        errorOrDestroy(stream, err, true);
        return err;
      }
      state.pendingcb++;
      return writeOrBuffer(stream, state, chunk, encoding, cb);
    }
    Writable.prototype.write = function(chunk, encoding, cb) {
      return _write(this, chunk, encoding, cb) === true;
    };
    Writable.prototype.cork = function() {
      this._writableState.corked++;
    };
    Writable.prototype.uncork = function() {
      const state = this._writableState;
      if (state.corked) {
        state.corked--;
        if (!state.writing)
          clearBuffer(this, state);
      }
    };
    Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
      if (typeof encoding === "string")
        encoding = StringPrototypeToLowerCase(encoding);
      if (!Buffer2.isEncoding(encoding))
        throw new ERR_UNKNOWN_ENCODING(encoding);
      this._writableState.defaultEncoding = encoding;
      return this;
    };
    function writeOrBuffer(stream, state, chunk, encoding, callback) {
      const len = state.objectMode ? 1 : chunk.length;
      state.length += len;
      const ret = state.length < state.highWaterMark;
      if (!ret)
        state.needDrain = true;
      if (state.writing || state.corked || state.errored || !state.constructed) {
        state.buffered.push({
          chunk,
          encoding,
          callback
        });
        if (state.allBuffers && encoding !== "buffer") {
          state.allBuffers = false;
        }
        if (state.allNoop && callback !== nop) {
          state.allNoop = false;
        }
      } else {
        state.writelen = len;
        state.writecb = callback;
        state.writing = true;
        state.sync = true;
        stream._write(chunk, encoding, state.onwrite);
        state.sync = false;
      }
      return ret && !state.errored && !state.destroyed;
    }
    function doWrite(stream, state, writev, len, chunk, encoding, cb) {
      state.writelen = len;
      state.writecb = cb;
      state.writing = true;
      state.sync = true;
      if (state.destroyed)
        state.onwrite(new ERR_STREAM_DESTROYED("write"));
      else if (writev)
        stream._writev(chunk, state.onwrite);
      else
        stream._write(chunk, encoding, state.onwrite);
      state.sync = false;
    }
    function onwriteError(stream, state, er, cb) {
      --state.pendingcb;
      cb(er);
      errorBuffer(state);
      errorOrDestroy(stream, er);
    }
    function onwrite(stream, er) {
      const state = stream._writableState;
      const sync = state.sync;
      const cb = state.writecb;
      if (typeof cb !== "function") {
        errorOrDestroy(stream, new ERR_MULTIPLE_CALLBACK());
        return;
      }
      state.writing = false;
      state.writecb = null;
      state.length -= state.writelen;
      state.writelen = 0;
      if (er) {
        er.stack;
        if (!state.errored) {
          state.errored = er;
        }
        if (stream._readableState && !stream._readableState.errored) {
          stream._readableState.errored = er;
        }
        if (sync) {
          process2.nextTick(onwriteError, stream, state, er, cb);
        } else {
          onwriteError(stream, state, er, cb);
        }
      } else {
        if (state.buffered.length > state.bufferedIndex) {
          clearBuffer(stream, state);
        }
        if (sync) {
          if (state.afterWriteTickInfo !== null && state.afterWriteTickInfo.cb === cb) {
            state.afterWriteTickInfo.count++;
          } else {
            state.afterWriteTickInfo = {
              count: 1,
              cb,
              stream,
              state
            };
            process2.nextTick(afterWriteTick, state.afterWriteTickInfo);
          }
        } else {
          afterWrite(stream, state, 1, cb);
        }
      }
    }
    function afterWriteTick({ stream, state, count, cb }) {
      state.afterWriteTickInfo = null;
      return afterWrite(stream, state, count, cb);
    }
    function afterWrite(stream, state, count, cb) {
      const needDrain = !state.ending && !stream.destroyed && state.length === 0 && state.needDrain;
      if (needDrain) {
        state.needDrain = false;
        stream.emit("drain");
      }
      while (count-- > 0) {
        state.pendingcb--;
        cb();
      }
      if (state.destroyed) {
        errorBuffer(state);
      }
      finishMaybe(stream, state);
    }
    function errorBuffer(state) {
      if (state.writing) {
        return;
      }
      for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {
        var _state$errored;
        const { chunk, callback } = state.buffered[n];
        const len = state.objectMode ? 1 : chunk.length;
        state.length -= len;
        callback(
          (_state$errored = state.errored) !== null && _state$errored !== void 0 ? _state$errored : new ERR_STREAM_DESTROYED("write")
        );
      }
      const onfinishCallbacks = state[kOnFinished].splice(0);
      for (let i = 0; i < onfinishCallbacks.length; i++) {
        var _state$errored2;
        onfinishCallbacks[i](
          (_state$errored2 = state.errored) !== null && _state$errored2 !== void 0 ? _state$errored2 : new ERR_STREAM_DESTROYED("end")
        );
      }
      resetBuffer(state);
    }
    function clearBuffer(stream, state) {
      if (state.corked || state.bufferProcessing || state.destroyed || !state.constructed) {
        return;
      }
      const { buffered, bufferedIndex, objectMode } = state;
      const bufferedLength = buffered.length - bufferedIndex;
      if (!bufferedLength) {
        return;
      }
      let i = bufferedIndex;
      state.bufferProcessing = true;
      if (bufferedLength > 1 && stream._writev) {
        state.pendingcb -= bufferedLength - 1;
        const callback = state.allNoop ? nop : (err) => {
          for (let n = i; n < buffered.length; ++n) {
            buffered[n].callback(err);
          }
        };
        const chunks = state.allNoop && i === 0 ? buffered : ArrayPrototypeSlice(buffered, i);
        chunks.allBuffers = state.allBuffers;
        doWrite(stream, state, true, state.length, chunks, "", callback);
        resetBuffer(state);
      } else {
        do {
          const { chunk, encoding, callback } = buffered[i];
          buffered[i++] = null;
          const len = objectMode ? 1 : chunk.length;
          doWrite(stream, state, false, len, chunk, encoding, callback);
        } while (i < buffered.length && !state.writing);
        if (i === buffered.length) {
          resetBuffer(state);
        } else if (i > 256) {
          buffered.splice(0, i);
          state.bufferedIndex = 0;
        } else {
          state.bufferedIndex = i;
        }
      }
      state.bufferProcessing = false;
    }
    Writable.prototype._write = function(chunk, encoding, cb) {
      if (this._writev) {
        this._writev(
          [
            {
              chunk,
              encoding
            }
          ],
          cb
        );
      } else {
        throw new ERR_METHOD_NOT_IMPLEMENTED("_write()");
      }
    };
    Writable.prototype._writev = null;
    Writable.prototype.end = function(chunk, encoding, cb) {
      const state = this._writableState;
      if (typeof chunk === "function") {
        cb = chunk;
        chunk = null;
        encoding = null;
      } else if (typeof encoding === "function") {
        cb = encoding;
        encoding = null;
      }
      let err;
      if (chunk !== null && chunk !== void 0) {
        const ret = _write(this, chunk, encoding);
        if (ret instanceof Error2) {
          err = ret;
        }
      }
      if (state.corked) {
        state.corked = 1;
        this.uncork();
      }
      if (err) {
      } else if (!state.errored && !state.ending) {
        state.ending = true;
        finishMaybe(this, state, true);
        state.ended = true;
      } else if (state.finished) {
        err = new ERR_STREAM_ALREADY_FINISHED("end");
      } else if (state.destroyed) {
        err = new ERR_STREAM_DESTROYED("end");
      }
      if (typeof cb === "function") {
        if (err || state.finished) {
          process2.nextTick(cb, err);
        } else {
          state[kOnFinished].push(cb);
        }
      }
      return this;
    };
    function needFinish(state) {
      return state.ending && !state.destroyed && state.constructed && state.length === 0 && !state.errored && state.buffered.length === 0 && !state.finished && !state.writing && !state.errorEmitted && !state.closeEmitted;
    }
    function callFinal(stream, state) {
      let called = false;
      function onFinish(err) {
        if (called) {
          errorOrDestroy(stream, err !== null && err !== void 0 ? err : ERR_MULTIPLE_CALLBACK());
          return;
        }
        called = true;
        state.pendingcb--;
        if (err) {
          const onfinishCallbacks = state[kOnFinished].splice(0);
          for (let i = 0; i < onfinishCallbacks.length; i++) {
            onfinishCallbacks[i](err);
          }
          errorOrDestroy(stream, err, state.sync);
        } else if (needFinish(state)) {
          state.prefinished = true;
          stream.emit("prefinish");
          state.pendingcb++;
          process2.nextTick(finish, stream, state);
        }
      }
      state.sync = true;
      state.pendingcb++;
      try {
        stream._final(onFinish);
      } catch (err) {
        onFinish(err);
      }
      state.sync = false;
    }
    function prefinish(stream, state) {
      if (!state.prefinished && !state.finalCalled) {
        if (typeof stream._final === "function" && !state.destroyed) {
          state.finalCalled = true;
          callFinal(stream, state);
        } else {
          state.prefinished = true;
          stream.emit("prefinish");
        }
      }
    }
    function finishMaybe(stream, state, sync) {
      if (needFinish(state)) {
        prefinish(stream, state);
        if (state.pendingcb === 0) {
          if (sync) {
            state.pendingcb++;
            process2.nextTick(
              (stream2, state2) => {
                if (needFinish(state2)) {
                  finish(stream2, state2);
                } else {
                  state2.pendingcb--;
                }
              },
              stream,
              state
            );
          } else if (needFinish(state)) {
            state.pendingcb++;
            finish(stream, state);
          }
        }
      }
    }
    function finish(stream, state) {
      state.pendingcb--;
      state.finished = true;
      const onfinishCallbacks = state[kOnFinished].splice(0);
      for (let i = 0; i < onfinishCallbacks.length; i++) {
        onfinishCallbacks[i]();
      }
      stream.emit("finish");
      if (state.autoDestroy) {
        const rState = stream._readableState;
        const autoDestroy = !rState || rState.autoDestroy && // We don't expect the readable to ever 'end'
        // if readable is explicitly set to false.
        (rState.endEmitted || rState.readable === false);
        if (autoDestroy) {
          stream.destroy();
        }
      }
    }
    ObjectDefineProperties(Writable.prototype, {
      closed: {
        __proto__: null,
        get() {
          return this._writableState ? this._writableState.closed : false;
        }
      },
      destroyed: {
        __proto__: null,
        get() {
          return this._writableState ? this._writableState.destroyed : false;
        },
        set(value) {
          if (this._writableState) {
            this._writableState.destroyed = value;
          }
        }
      },
      writable: {
        __proto__: null,
        get() {
          const w = this._writableState;
          return !!w && w.writable !== false && !w.destroyed && !w.errored && !w.ending && !w.ended;
        },
        set(val) {
          if (this._writableState) {
            this._writableState.writable = !!val;
          }
        }
      },
      writableFinished: {
        __proto__: null,
        get() {
          return this._writableState ? this._writableState.finished : false;
        }
      },
      writableObjectMode: {
        __proto__: null,
        get() {
          return this._writableState ? this._writableState.objectMode : false;
        }
      },
      writableBuffer: {
        __proto__: null,
        get() {
          return this._writableState && this._writableState.getBuffer();
        }
      },
      writableEnded: {
        __proto__: null,
        get() {
          return this._writableState ? this._writableState.ending : false;
        }
      },
      writableNeedDrain: {
        __proto__: null,
        get() {
          const wState = this._writableState;
          if (!wState)
            return false;
          return !wState.destroyed && !wState.ending && wState.needDrain;
        }
      },
      writableHighWaterMark: {
        __proto__: null,
        get() {
          return this._writableState && this._writableState.highWaterMark;
        }
      },
      writableCorked: {
        __proto__: null,
        get() {
          return this._writableState ? this._writableState.corked : 0;
        }
      },
      writableLength: {
        __proto__: null,
        get() {
          return this._writableState && this._writableState.length;
        }
      },
      errored: {
        __proto__: null,
        enumerable: false,
        get() {
          return this._writableState ? this._writableState.errored : null;
        }
      },
      writableAborted: {
        __proto__: null,
        enumerable: false,
        get: function() {
          return !!(this._writableState.writable !== false && (this._writableState.destroyed || this._writableState.errored) && !this._writableState.finished);
        }
      }
    });
    var destroy = destroyImpl.destroy;
    Writable.prototype.destroy = function(err, cb) {
      const state = this._writableState;
      if (!state.destroyed && (state.bufferedIndex < state.buffered.length || state[kOnFinished].length)) {
        process2.nextTick(errorBuffer, state);
      }
      destroy.call(this, err, cb);
      return this;
    };
    Writable.prototype._undestroy = destroyImpl.undestroy;
    Writable.prototype._destroy = function(err, cb) {
      cb(err);
    };
    Writable.prototype[EE.captureRejectionSymbol] = function(err) {
      this.destroy(err);
    };
    var webStreamsAdapters;
    function lazyWebStreams() {
      if (webStreamsAdapters === void 0)
        webStreamsAdapters = {};
      return webStreamsAdapters;
    }
    Writable.fromWeb = function(writableStream, options) {
      return lazyWebStreams().newStreamWritableFromWritableStream(writableStream, options);
    };
    Writable.toWeb = function(streamWritable) {
      return lazyWebStreams().newWritableStreamFromStreamWritable(streamWritable);
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/duplexify.js
var require_duplexify = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/duplexify.js"(exports, module) {
    var process2 = require_browser4();
    var bufferModule = require_buffer();
    var {
      isReadable,
      isWritable,
      isIterable,
      isNodeStream,
      isReadableNodeStream,
      isWritableNodeStream,
      isDuplexNodeStream,
      isReadableStream,
      isWritableStream
    } = require_utils2();
    var eos = require_end_of_stream();
    var {
      AbortError,
      codes: { ERR_INVALID_ARG_TYPE, ERR_INVALID_RETURN_VALUE }
    } = require_errors3();
    var { destroyer } = require_destroy();
    var Duplex = require_duplex();
    var Readable = require_readable();
    var Writable = require_writable();
    var { createDeferredPromise } = require_util2();
    var from = require_from();
    var Blob2 = globalThis.Blob || bufferModule.Blob;
    var isBlob = typeof Blob2 !== "undefined" ? function isBlob2(b) {
      return b instanceof Blob2;
    } : function isBlob2(b) {
      return false;
    };
    var AbortController2 = globalThis.AbortController || require_browser2().AbortController;
    var { FunctionPrototypeCall } = require_primordials();
    var Duplexify = class extends Duplex {
      constructor(options) {
        super(options);
        if ((options === null || options === void 0 ? void 0 : options.readable) === false) {
          this._readableState.readable = false;
          this._readableState.ended = true;
          this._readableState.endEmitted = true;
        }
        if ((options === null || options === void 0 ? void 0 : options.writable) === false) {
          this._writableState.writable = false;
          this._writableState.ending = true;
          this._writableState.ended = true;
          this._writableState.finished = true;
        }
      }
    };
    module.exports = function duplexify(body, name) {
      if (isDuplexNodeStream(body)) {
        return body;
      }
      if (isReadableNodeStream(body)) {
        return _duplexify({
          readable: body
        });
      }
      if (isWritableNodeStream(body)) {
        return _duplexify({
          writable: body
        });
      }
      if (isNodeStream(body)) {
        return _duplexify({
          writable: false,
          readable: false
        });
      }
      if (isReadableStream(body)) {
        return _duplexify({
          readable: Readable.fromWeb(body)
        });
      }
      if (isWritableStream(body)) {
        return _duplexify({
          writable: Writable.fromWeb(body)
        });
      }
      if (typeof body === "function") {
        const { value, write, final, destroy } = fromAsyncGen(body);
        if (isIterable(value)) {
          return from(Duplexify, value, {
            // TODO (ronag): highWaterMark?
            objectMode: true,
            write,
            final,
            destroy
          });
        }
        const then2 = value === null || value === void 0 ? void 0 : value.then;
        if (typeof then2 === "function") {
          let d;
          const promise = FunctionPrototypeCall(
            then2,
            value,
            (val) => {
              if (val != null) {
                throw new ERR_INVALID_RETURN_VALUE("nully", "body", val);
              }
            },
            (err) => {
              destroyer(d, err);
            }
          );
          return d = new Duplexify({
            // TODO (ronag): highWaterMark?
            objectMode: true,
            readable: false,
            write,
            final(cb) {
              final(async () => {
                try {
                  await promise;
                  process2.nextTick(cb, null);
                } catch (err) {
                  process2.nextTick(cb, err);
                }
              });
            },
            destroy
          });
        }
        throw new ERR_INVALID_RETURN_VALUE("Iterable, AsyncIterable or AsyncFunction", name, value);
      }
      if (isBlob(body)) {
        return duplexify(body.arrayBuffer());
      }
      if (isIterable(body)) {
        return from(Duplexify, body, {
          // TODO (ronag): highWaterMark?
          objectMode: true,
          writable: false
        });
      }
      if (isReadableStream(body === null || body === void 0 ? void 0 : body.readable) && isWritableStream(body === null || body === void 0 ? void 0 : body.writable)) {
        return Duplexify.fromWeb(body);
      }
      if (typeof (body === null || body === void 0 ? void 0 : body.writable) === "object" || typeof (body === null || body === void 0 ? void 0 : body.readable) === "object") {
        const readable = body !== null && body !== void 0 && body.readable ? isReadableNodeStream(body === null || body === void 0 ? void 0 : body.readable) ? body === null || body === void 0 ? void 0 : body.readable : duplexify(body.readable) : void 0;
        const writable = body !== null && body !== void 0 && body.writable ? isWritableNodeStream(body === null || body === void 0 ? void 0 : body.writable) ? body === null || body === void 0 ? void 0 : body.writable : duplexify(body.writable) : void 0;
        return _duplexify({
          readable,
          writable
        });
      }
      const then = body === null || body === void 0 ? void 0 : body.then;
      if (typeof then === "function") {
        let d;
        FunctionPrototypeCall(
          then,
          body,
          (val) => {
            if (val != null) {
              d.push(val);
            }
            d.push(null);
          },
          (err) => {
            destroyer(d, err);
          }
        );
        return d = new Duplexify({
          objectMode: true,
          writable: false,
          read() {
          }
        });
      }
      throw new ERR_INVALID_ARG_TYPE(
        name,
        [
          "Blob",
          "ReadableStream",
          "WritableStream",
          "Stream",
          "Iterable",
          "AsyncIterable",
          "Function",
          "{ readable, writable } pair",
          "Promise"
        ],
        body
      );
    };
    function fromAsyncGen(fn) {
      let { promise, resolve } = createDeferredPromise();
      const ac = new AbortController2();
      const signal = ac.signal;
      const value = fn(
        async function* () {
          while (true) {
            const _promise = promise;
            promise = null;
            const { chunk, done, cb } = await _promise;
            process2.nextTick(cb);
            if (done)
              return;
            if (signal.aborted)
              throw new AbortError(void 0, {
                cause: signal.reason
              });
            ({ promise, resolve } = createDeferredPromise());
            yield chunk;
          }
        }(),
        {
          signal
        }
      );
      return {
        value,
        write(chunk, encoding, cb) {
          const _resolve = resolve;
          resolve = null;
          _resolve({
            chunk,
            done: false,
            cb
          });
        },
        final(cb) {
          const _resolve = resolve;
          resolve = null;
          _resolve({
            done: true,
            cb
          });
        },
        destroy(err, cb) {
          ac.abort();
          cb(err);
        }
      };
    }
    function _duplexify(pair) {
      const r = pair.readable && typeof pair.readable.read !== "function" ? Readable.wrap(pair.readable) : pair.readable;
      const w = pair.writable;
      let readable = !!isReadable(r);
      let writable = !!isWritable(w);
      let ondrain;
      let onfinish;
      let onreadable;
      let onclose;
      let d;
      function onfinished(err) {
        const cb = onclose;
        onclose = null;
        if (cb) {
          cb(err);
        } else if (err) {
          d.destroy(err);
        }
      }
      d = new Duplexify({
        // TODO (ronag): highWaterMark?
        readableObjectMode: !!(r !== null && r !== void 0 && r.readableObjectMode),
        writableObjectMode: !!(w !== null && w !== void 0 && w.writableObjectMode),
        readable,
        writable
      });
      if (writable) {
        eos(w, (err) => {
          writable = false;
          if (err) {
            destroyer(r, err);
          }
          onfinished(err);
        });
        d._write = function(chunk, encoding, callback) {
          if (w.write(chunk, encoding)) {
            callback();
          } else {
            ondrain = callback;
          }
        };
        d._final = function(callback) {
          w.end();
          onfinish = callback;
        };
        w.on("drain", function() {
          if (ondrain) {
            const cb = ondrain;
            ondrain = null;
            cb();
          }
        });
        w.on("finish", function() {
          if (onfinish) {
            const cb = onfinish;
            onfinish = null;
            cb();
          }
        });
      }
      if (readable) {
        eos(r, (err) => {
          readable = false;
          if (err) {
            destroyer(r, err);
          }
          onfinished(err);
        });
        r.on("readable", function() {
          if (onreadable) {
            const cb = onreadable;
            onreadable = null;
            cb();
          }
        });
        r.on("end", function() {
          d.push(null);
        });
        d._read = function() {
          while (true) {
            const buf = r.read();
            if (buf === null) {
              onreadable = d._read;
              return;
            }
            if (!d.push(buf)) {
              return;
            }
          }
        };
      }
      d._destroy = function(err, callback) {
        if (!err && onclose !== null) {
          err = new AbortError();
        }
        onreadable = null;
        ondrain = null;
        onfinish = null;
        if (onclose === null) {
          callback(err);
        } else {
          onclose = callback;
          destroyer(w, err);
          destroyer(r, err);
        }
      };
      return d;
    }
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/duplex.js
var require_duplex = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/duplex.js"(exports, module) {
    "use strict";
    var {
      ObjectDefineProperties,
      ObjectGetOwnPropertyDescriptor,
      ObjectKeys,
      ObjectSetPrototypeOf
    } = require_primordials();
    module.exports = Duplex;
    var Readable = require_readable();
    var Writable = require_writable();
    ObjectSetPrototypeOf(Duplex.prototype, Readable.prototype);
    ObjectSetPrototypeOf(Duplex, Readable);
    {
      const keys = ObjectKeys(Writable.prototype);
      for (let i = 0; i < keys.length; i++) {
        const method = keys[i];
        if (!Duplex.prototype[method])
          Duplex.prototype[method] = Writable.prototype[method];
      }
    }
    function Duplex(options) {
      if (!(this instanceof Duplex))
        return new Duplex(options);
      Readable.call(this, options);
      Writable.call(this, options);
      if (options) {
        this.allowHalfOpen = options.allowHalfOpen !== false;
        if (options.readable === false) {
          this._readableState.readable = false;
          this._readableState.ended = true;
          this._readableState.endEmitted = true;
        }
        if (options.writable === false) {
          this._writableState.writable = false;
          this._writableState.ending = true;
          this._writableState.ended = true;
          this._writableState.finished = true;
        }
      } else {
        this.allowHalfOpen = true;
      }
    }
    ObjectDefineProperties(Duplex.prototype, {
      writable: {
        __proto__: null,
        ...ObjectGetOwnPropertyDescriptor(Writable.prototype, "writable")
      },
      writableHighWaterMark: {
        __proto__: null,
        ...ObjectGetOwnPropertyDescriptor(Writable.prototype, "writableHighWaterMark")
      },
      writableObjectMode: {
        __proto__: null,
        ...ObjectGetOwnPropertyDescriptor(Writable.prototype, "writableObjectMode")
      },
      writableBuffer: {
        __proto__: null,
        ...ObjectGetOwnPropertyDescriptor(Writable.prototype, "writableBuffer")
      },
      writableLength: {
        __proto__: null,
        ...ObjectGetOwnPropertyDescriptor(Writable.prototype, "writableLength")
      },
      writableFinished: {
        __proto__: null,
        ...ObjectGetOwnPropertyDescriptor(Writable.prototype, "writableFinished")
      },
      writableCorked: {
        __proto__: null,
        ...ObjectGetOwnPropertyDescriptor(Writable.prototype, "writableCorked")
      },
      writableEnded: {
        __proto__: null,
        ...ObjectGetOwnPropertyDescriptor(Writable.prototype, "writableEnded")
      },
      writableNeedDrain: {
        __proto__: null,
        ...ObjectGetOwnPropertyDescriptor(Writable.prototype, "writableNeedDrain")
      },
      destroyed: {
        __proto__: null,
        get() {
          if (this._readableState === void 0 || this._writableState === void 0) {
            return false;
          }
          return this._readableState.destroyed && this._writableState.destroyed;
        },
        set(value) {
          if (this._readableState && this._writableState) {
            this._readableState.destroyed = value;
            this._writableState.destroyed = value;
          }
        }
      }
    });
    var webStreamsAdapters;
    function lazyWebStreams() {
      if (webStreamsAdapters === void 0)
        webStreamsAdapters = {};
      return webStreamsAdapters;
    }
    Duplex.fromWeb = function(pair, options) {
      return lazyWebStreams().newStreamDuplexFromReadableWritablePair(pair, options);
    };
    Duplex.toWeb = function(duplex) {
      return lazyWebStreams().newReadableWritablePairFromDuplex(duplex);
    };
    var duplexify;
    Duplex.from = function(body) {
      if (!duplexify) {
        duplexify = require_duplexify();
      }
      return duplexify(body, "body");
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/transform.js
var require_transform = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/transform.js"(exports, module) {
    "use strict";
    var { ObjectSetPrototypeOf, Symbol: Symbol2 } = require_primordials();
    module.exports = Transform;
    var { ERR_METHOD_NOT_IMPLEMENTED } = require_errors3().codes;
    var Duplex = require_duplex();
    var { getHighWaterMark } = require_state();
    ObjectSetPrototypeOf(Transform.prototype, Duplex.prototype);
    ObjectSetPrototypeOf(Transform, Duplex);
    var kCallback = Symbol2("kCallback");
    function Transform(options) {
      if (!(this instanceof Transform))
        return new Transform(options);
      const readableHighWaterMark = options ? getHighWaterMark(this, options, "readableHighWaterMark", true) : null;
      if (readableHighWaterMark === 0) {
        options = {
          ...options,
          highWaterMark: null,
          readableHighWaterMark,
          // TODO (ronag): 0 is not optimal since we have
          // a "bug" where we check needDrain before calling _write and not after.
          // Refs: https://github.com/nodejs/node/pull/32887
          // Refs: https://github.com/nodejs/node/pull/35941
          writableHighWaterMark: options.writableHighWaterMark || 0
        };
      }
      Duplex.call(this, options);
      this._readableState.sync = false;
      this[kCallback] = null;
      if (options) {
        if (typeof options.transform === "function")
          this._transform = options.transform;
        if (typeof options.flush === "function")
          this._flush = options.flush;
      }
      this.on("prefinish", prefinish);
    }
    function final(cb) {
      if (typeof this._flush === "function" && !this.destroyed) {
        this._flush((er, data) => {
          if (er) {
            if (cb) {
              cb(er);
            } else {
              this.destroy(er);
            }
            return;
          }
          if (data != null) {
            this.push(data);
          }
          this.push(null);
          if (cb) {
            cb();
          }
        });
      } else {
        this.push(null);
        if (cb) {
          cb();
        }
      }
    }
    function prefinish() {
      if (this._final !== final) {
        final.call(this);
      }
    }
    Transform.prototype._final = final;
    Transform.prototype._transform = function(chunk, encoding, callback) {
      throw new ERR_METHOD_NOT_IMPLEMENTED("_transform()");
    };
    Transform.prototype._write = function(chunk, encoding, callback) {
      const rState = this._readableState;
      const wState = this._writableState;
      const length = rState.length;
      this._transform(chunk, encoding, (err, val) => {
        if (err) {
          callback(err);
          return;
        }
        if (val != null) {
          this.push(val);
        }
        if (wState.ended || // Backwards compat.
        length === rState.length || // Backwards compat.
        rState.length < rState.highWaterMark) {
          callback();
        } else {
          this[kCallback] = callback;
        }
      });
    };
    Transform.prototype._read = function() {
      if (this[kCallback]) {
        const callback = this[kCallback];
        this[kCallback] = null;
        callback();
      }
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/passthrough.js
var require_passthrough = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/passthrough.js"(exports, module) {
    "use strict";
    var { ObjectSetPrototypeOf } = require_primordials();
    module.exports = PassThrough;
    var Transform = require_transform();
    ObjectSetPrototypeOf(PassThrough.prototype, Transform.prototype);
    ObjectSetPrototypeOf(PassThrough, Transform);
    function PassThrough(options) {
      if (!(this instanceof PassThrough))
        return new PassThrough(options);
      Transform.call(this, options);
    }
    PassThrough.prototype._transform = function(chunk, encoding, cb) {
      cb(null, chunk);
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/pipeline.js
var require_pipeline = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/pipeline.js"(exports, module) {
    var process2 = require_browser4();
    var { ArrayIsArray, Promise: Promise2, SymbolAsyncIterator, SymbolDispose } = require_primordials();
    var eos = require_end_of_stream();
    var { once } = require_util2();
    var destroyImpl = require_destroy();
    var Duplex = require_duplex();
    var {
      aggregateTwoErrors,
      codes: {
        ERR_INVALID_ARG_TYPE,
        ERR_INVALID_RETURN_VALUE,
        ERR_MISSING_ARGS,
        ERR_STREAM_DESTROYED,
        ERR_STREAM_PREMATURE_CLOSE
      },
      AbortError
    } = require_errors3();
    var { validateFunction, validateAbortSignal } = require_validators();
    var {
      isIterable,
      isReadable,
      isReadableNodeStream,
      isNodeStream,
      isTransformStream,
      isWebStream,
      isReadableStream,
      isReadableFinished
    } = require_utils2();
    var AbortController2 = globalThis.AbortController || require_browser2().AbortController;
    var PassThrough;
    var Readable;
    var addAbortListener;
    function destroyer(stream, reading, writing) {
      let finished = false;
      stream.on("close", () => {
        finished = true;
      });
      const cleanup = eos(
        stream,
        {
          readable: reading,
          writable: writing
        },
        (err) => {
          finished = !err;
        }
      );
      return {
        destroy: (err) => {
          if (finished)
            return;
          finished = true;
          destroyImpl.destroyer(stream, err || new ERR_STREAM_DESTROYED("pipe"));
        },
        cleanup
      };
    }
    function popCallback(streams) {
      validateFunction(streams[streams.length - 1], "streams[stream.length - 1]");
      return streams.pop();
    }
    function makeAsyncIterable(val) {
      if (isIterable(val)) {
        return val;
      } else if (isReadableNodeStream(val)) {
        return fromReadable(val);
      }
      throw new ERR_INVALID_ARG_TYPE("val", ["Readable", "Iterable", "AsyncIterable"], val);
    }
    async function* fromReadable(val) {
      if (!Readable) {
        Readable = require_readable();
      }
      yield* Readable.prototype[SymbolAsyncIterator].call(val);
    }
    async function pumpToNode(iterable, writable, finish, { end }) {
      let error;
      let onresolve = null;
      const resume = (err) => {
        if (err) {
          error = err;
        }
        if (onresolve) {
          const callback = onresolve;
          onresolve = null;
          callback();
        }
      };
      const wait = () => new Promise2((resolve, reject) => {
        if (error) {
          reject(error);
        } else {
          onresolve = () => {
            if (error) {
              reject(error);
            } else {
              resolve();
            }
          };
        }
      });
      writable.on("drain", resume);
      const cleanup = eos(
        writable,
        {
          readable: false
        },
        resume
      );
      try {
        if (writable.writableNeedDrain) {
          await wait();
        }
        for await (const chunk of iterable) {
          if (!writable.write(chunk)) {
            await wait();
          }
        }
        if (end) {
          writable.end();
          await wait();
        }
        finish();
      } catch (err) {
        finish(error !== err ? aggregateTwoErrors(error, err) : err);
      } finally {
        cleanup();
        writable.off("drain", resume);
      }
    }
    async function pumpToWeb(readable, writable, finish, { end }) {
      if (isTransformStream(writable)) {
        writable = writable.writable;
      }
      const writer = writable.getWriter();
      try {
        for await (const chunk of readable) {
          await writer.ready;
          writer.write(chunk).catch(() => {
          });
        }
        await writer.ready;
        if (end) {
          await writer.close();
        }
        finish();
      } catch (err) {
        try {
          await writer.abort(err);
          finish(err);
        } catch (err2) {
          finish(err2);
        }
      }
    }
    function pipeline(...streams) {
      return pipelineImpl(streams, once(popCallback(streams)));
    }
    function pipelineImpl(streams, callback, opts) {
      if (streams.length === 1 && ArrayIsArray(streams[0])) {
        streams = streams[0];
      }
      if (streams.length < 2) {
        throw new ERR_MISSING_ARGS("streams");
      }
      const ac = new AbortController2();
      const signal = ac.signal;
      const outerSignal = opts === null || opts === void 0 ? void 0 : opts.signal;
      const lastStreamCleanup = [];
      validateAbortSignal(outerSignal, "options.signal");
      function abort() {
        finishImpl(new AbortError());
      }
      addAbortListener = addAbortListener || require_util2().addAbortListener;
      let disposable;
      if (outerSignal) {
        disposable = addAbortListener(outerSignal, abort);
      }
      let error;
      let value;
      const destroys = [];
      let finishCount = 0;
      function finish(err) {
        finishImpl(err, --finishCount === 0);
      }
      function finishImpl(err, final) {
        var _disposable;
        if (err && (!error || error.code === "ERR_STREAM_PREMATURE_CLOSE")) {
          error = err;
        }
        if (!error && !final) {
          return;
        }
        while (destroys.length) {
          destroys.shift()(error);
        }
        ;
        (_disposable = disposable) === null || _disposable === void 0 ? void 0 : _disposable[SymbolDispose]();
        ac.abort();
        if (final) {
          if (!error) {
            lastStreamCleanup.forEach((fn) => fn());
          }
          process2.nextTick(callback, error, value);
        }
      }
      let ret;
      for (let i = 0; i < streams.length; i++) {
        const stream = streams[i];
        const reading = i < streams.length - 1;
        const writing = i > 0;
        const end = reading || (opts === null || opts === void 0 ? void 0 : opts.end) !== false;
        const isLastStream = i === streams.length - 1;
        if (isNodeStream(stream)) {
          let onError2 = function(err) {
            if (err && err.name !== "AbortError" && err.code !== "ERR_STREAM_PREMATURE_CLOSE") {
              finish(err);
            }
          };
          var onError = onError2;
          if (end) {
            const { destroy, cleanup } = destroyer(stream, reading, writing);
            destroys.push(destroy);
            if (isReadable(stream) && isLastStream) {
              lastStreamCleanup.push(cleanup);
            }
          }
          stream.on("error", onError2);
          if (isReadable(stream) && isLastStream) {
            lastStreamCleanup.push(() => {
              stream.removeListener("error", onError2);
            });
          }
        }
        if (i === 0) {
          if (typeof stream === "function") {
            ret = stream({
              signal
            });
            if (!isIterable(ret)) {
              throw new ERR_INVALID_RETURN_VALUE("Iterable, AsyncIterable or Stream", "source", ret);
            }
          } else if (isIterable(stream) || isReadableNodeStream(stream) || isTransformStream(stream)) {
            ret = stream;
          } else {
            ret = Duplex.from(stream);
          }
        } else if (typeof stream === "function") {
          if (isTransformStream(ret)) {
            var _ret;
            ret = makeAsyncIterable((_ret = ret) === null || _ret === void 0 ? void 0 : _ret.readable);
          } else {
            ret = makeAsyncIterable(ret);
          }
          ret = stream(ret, {
            signal
          });
          if (reading) {
            if (!isIterable(ret, true)) {
              throw new ERR_INVALID_RETURN_VALUE("AsyncIterable", `transform[${i - 1}]`, ret);
            }
          } else {
            var _ret2;
            if (!PassThrough) {
              PassThrough = require_passthrough();
            }
            const pt = new PassThrough({
              objectMode: true
            });
            const then = (_ret2 = ret) === null || _ret2 === void 0 ? void 0 : _ret2.then;
            if (typeof then === "function") {
              finishCount++;
              then.call(
                ret,
                (val) => {
                  value = val;
                  if (val != null) {
                    pt.write(val);
                  }
                  if (end) {
                    pt.end();
                  }
                  process2.nextTick(finish);
                },
                (err) => {
                  pt.destroy(err);
                  process2.nextTick(finish, err);
                }
              );
            } else if (isIterable(ret, true)) {
              finishCount++;
              pumpToNode(ret, pt, finish, {
                end
              });
            } else if (isReadableStream(ret) || isTransformStream(ret)) {
              const toRead = ret.readable || ret;
              finishCount++;
              pumpToNode(toRead, pt, finish, {
                end
              });
            } else {
              throw new ERR_INVALID_RETURN_VALUE("AsyncIterable or Promise", "destination", ret);
            }
            ret = pt;
            const { destroy, cleanup } = destroyer(ret, false, true);
            destroys.push(destroy);
            if (isLastStream) {
              lastStreamCleanup.push(cleanup);
            }
          }
        } else if (isNodeStream(stream)) {
          if (isReadableNodeStream(ret)) {
            finishCount += 2;
            const cleanup = pipe(ret, stream, finish, {
              end
            });
            if (isReadable(stream) && isLastStream) {
              lastStreamCleanup.push(cleanup);
            }
          } else if (isTransformStream(ret) || isReadableStream(ret)) {
            const toRead = ret.readable || ret;
            finishCount++;
            pumpToNode(toRead, stream, finish, {
              end
            });
          } else if (isIterable(ret)) {
            finishCount++;
            pumpToNode(ret, stream, finish, {
              end
            });
          } else {
            throw new ERR_INVALID_ARG_TYPE(
              "val",
              ["Readable", "Iterable", "AsyncIterable", "ReadableStream", "TransformStream"],
              ret
            );
          }
          ret = stream;
        } else if (isWebStream(stream)) {
          if (isReadableNodeStream(ret)) {
            finishCount++;
            pumpToWeb(makeAsyncIterable(ret), stream, finish, {
              end
            });
          } else if (isReadableStream(ret) || isIterable(ret)) {
            finishCount++;
            pumpToWeb(ret, stream, finish, {
              end
            });
          } else if (isTransformStream(ret)) {
            finishCount++;
            pumpToWeb(ret.readable, stream, finish, {
              end
            });
          } else {
            throw new ERR_INVALID_ARG_TYPE(
              "val",
              ["Readable", "Iterable", "AsyncIterable", "ReadableStream", "TransformStream"],
              ret
            );
          }
          ret = stream;
        } else {
          ret = Duplex.from(stream);
        }
      }
      if (signal !== null && signal !== void 0 && signal.aborted || outerSignal !== null && outerSignal !== void 0 && outerSignal.aborted) {
        process2.nextTick(abort);
      }
      return ret;
    }
    function pipe(src, dst, finish, { end }) {
      let ended = false;
      dst.on("close", () => {
        if (!ended) {
          finish(new ERR_STREAM_PREMATURE_CLOSE());
        }
      });
      src.pipe(dst, {
        end: false
      });
      if (end) {
        let endFn2 = function() {
          ended = true;
          dst.end();
        };
        var endFn = endFn2;
        if (isReadableFinished(src)) {
          process2.nextTick(endFn2);
        } else {
          src.once("end", endFn2);
        }
      } else {
        finish();
      }
      eos(
        src,
        {
          readable: true,
          writable: false
        },
        (err) => {
          const rState = src._readableState;
          if (err && err.code === "ERR_STREAM_PREMATURE_CLOSE" && rState && rState.ended && !rState.errored && !rState.errorEmitted) {
            src.once("end", finish).once("error", finish);
          } else {
            finish(err);
          }
        }
      );
      return eos(
        dst,
        {
          readable: false,
          writable: true
        },
        finish
      );
    }
    module.exports = {
      pipelineImpl,
      pipeline
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/compose.js
var require_compose = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/compose.js"(exports, module) {
    "use strict";
    var { pipeline } = require_pipeline();
    var Duplex = require_duplex();
    var { destroyer } = require_destroy();
    var {
      isNodeStream,
      isReadable,
      isWritable,
      isWebStream,
      isTransformStream,
      isWritableStream,
      isReadableStream
    } = require_utils2();
    var {
      AbortError,
      codes: { ERR_INVALID_ARG_VALUE, ERR_MISSING_ARGS }
    } = require_errors3();
    var eos = require_end_of_stream();
    module.exports = function compose(...streams) {
      if (streams.length === 0) {
        throw new ERR_MISSING_ARGS("streams");
      }
      if (streams.length === 1) {
        return Duplex.from(streams[0]);
      }
      const orgStreams = [...streams];
      if (typeof streams[0] === "function") {
        streams[0] = Duplex.from(streams[0]);
      }
      if (typeof streams[streams.length - 1] === "function") {
        const idx = streams.length - 1;
        streams[idx] = Duplex.from(streams[idx]);
      }
      for (let n = 0; n < streams.length; ++n) {
        if (!isNodeStream(streams[n]) && !isWebStream(streams[n])) {
          continue;
        }
        if (n < streams.length - 1 && !(isReadable(streams[n]) || isReadableStream(streams[n]) || isTransformStream(streams[n]))) {
          throw new ERR_INVALID_ARG_VALUE(`streams[${n}]`, orgStreams[n], "must be readable");
        }
        if (n > 0 && !(isWritable(streams[n]) || isWritableStream(streams[n]) || isTransformStream(streams[n]))) {
          throw new ERR_INVALID_ARG_VALUE(`streams[${n}]`, orgStreams[n], "must be writable");
        }
      }
      let ondrain;
      let onfinish;
      let onreadable;
      let onclose;
      let d;
      function onfinished(err) {
        const cb = onclose;
        onclose = null;
        if (cb) {
          cb(err);
        } else if (err) {
          d.destroy(err);
        } else if (!readable && !writable) {
          d.destroy();
        }
      }
      const head = streams[0];
      const tail = pipeline(streams, onfinished);
      const writable = !!(isWritable(head) || isWritableStream(head) || isTransformStream(head));
      const readable = !!(isReadable(tail) || isReadableStream(tail) || isTransformStream(tail));
      d = new Duplex({
        // TODO (ronag): highWaterMark?
        writableObjectMode: !!(head !== null && head !== void 0 && head.writableObjectMode),
        readableObjectMode: !!(tail !== null && tail !== void 0 && tail.readableObjectMode),
        writable,
        readable
      });
      if (writable) {
        if (isNodeStream(head)) {
          d._write = function(chunk, encoding, callback) {
            if (head.write(chunk, encoding)) {
              callback();
            } else {
              ondrain = callback;
            }
          };
          d._final = function(callback) {
            head.end();
            onfinish = callback;
          };
          head.on("drain", function() {
            if (ondrain) {
              const cb = ondrain;
              ondrain = null;
              cb();
            }
          });
        } else if (isWebStream(head)) {
          const writable2 = isTransformStream(head) ? head.writable : head;
          const writer = writable2.getWriter();
          d._write = async function(chunk, encoding, callback) {
            try {
              await writer.ready;
              writer.write(chunk).catch(() => {
              });
              callback();
            } catch (err) {
              callback(err);
            }
          };
          d._final = async function(callback) {
            try {
              await writer.ready;
              writer.close().catch(() => {
              });
              onfinish = callback;
            } catch (err) {
              callback(err);
            }
          };
        }
        const toRead = isTransformStream(tail) ? tail.readable : tail;
        eos(toRead, () => {
          if (onfinish) {
            const cb = onfinish;
            onfinish = null;
            cb();
          }
        });
      }
      if (readable) {
        if (isNodeStream(tail)) {
          tail.on("readable", function() {
            if (onreadable) {
              const cb = onreadable;
              onreadable = null;
              cb();
            }
          });
          tail.on("end", function() {
            d.push(null);
          });
          d._read = function() {
            while (true) {
              const buf = tail.read();
              if (buf === null) {
                onreadable = d._read;
                return;
              }
              if (!d.push(buf)) {
                return;
              }
            }
          };
        } else if (isWebStream(tail)) {
          const readable2 = isTransformStream(tail) ? tail.readable : tail;
          const reader = readable2.getReader();
          d._read = async function() {
            while (true) {
              try {
                const { value, done } = await reader.read();
                if (!d.push(value)) {
                  return;
                }
                if (done) {
                  d.push(null);
                  return;
                }
              } catch {
                return;
              }
            }
          };
        }
      }
      d._destroy = function(err, callback) {
        if (!err && onclose !== null) {
          err = new AbortError();
        }
        onreadable = null;
        ondrain = null;
        onfinish = null;
        if (onclose === null) {
          callback(err);
        } else {
          onclose = callback;
          if (isNodeStream(tail)) {
            destroyer(tail, err);
          }
        }
      };
      return d;
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/operators.js
var require_operators = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/internal/streams/operators.js"(exports, module) {
    "use strict";
    var AbortController2 = globalThis.AbortController || require_browser2().AbortController;
    var {
      codes: { ERR_INVALID_ARG_VALUE, ERR_INVALID_ARG_TYPE, ERR_MISSING_ARGS, ERR_OUT_OF_RANGE },
      AbortError
    } = require_errors3();
    var { validateAbortSignal, validateInteger, validateObject } = require_validators();
    var kWeakHandler = require_primordials().Symbol("kWeak");
    var kResistStopPropagation = require_primordials().Symbol("kResistStopPropagation");
    var { finished } = require_end_of_stream();
    var staticCompose = require_compose();
    var { addAbortSignalNoValidate } = require_add_abort_signal();
    var { isWritable, isNodeStream } = require_utils2();
    var { deprecate } = require_util2();
    var {
      ArrayPrototypePush,
      Boolean: Boolean2,
      MathFloor,
      Number: Number2,
      NumberIsNaN,
      Promise: Promise2,
      PromiseReject,
      PromiseResolve,
      PromisePrototypeThen,
      Symbol: Symbol2
    } = require_primordials();
    var kEmpty = Symbol2("kEmpty");
    var kEof = Symbol2("kEof");
    function compose(stream, options) {
      if (options != null) {
        validateObject(options, "options");
      }
      if ((options === null || options === void 0 ? void 0 : options.signal) != null) {
        validateAbortSignal(options.signal, "options.signal");
      }
      if (isNodeStream(stream) && !isWritable(stream)) {
        throw new ERR_INVALID_ARG_VALUE("stream", stream, "must be writable");
      }
      const composedStream = staticCompose(this, stream);
      if (options !== null && options !== void 0 && options.signal) {
        addAbortSignalNoValidate(options.signal, composedStream);
      }
      return composedStream;
    }
    function map(fn, options) {
      if (typeof fn !== "function") {
        throw new ERR_INVALID_ARG_TYPE("fn", ["Function", "AsyncFunction"], fn);
      }
      if (options != null) {
        validateObject(options, "options");
      }
      if ((options === null || options === void 0 ? void 0 : options.signal) != null) {
        validateAbortSignal(options.signal, "options.signal");
      }
      let concurrency = 1;
      if ((options === null || options === void 0 ? void 0 : options.concurrency) != null) {
        concurrency = MathFloor(options.concurrency);
      }
      let highWaterMark = concurrency - 1;
      if ((options === null || options === void 0 ? void 0 : options.highWaterMark) != null) {
        highWaterMark = MathFloor(options.highWaterMark);
      }
      validateInteger(concurrency, "options.concurrency", 1);
      validateInteger(highWaterMark, "options.highWaterMark", 0);
      highWaterMark += concurrency;
      return (async function* map2() {
        const signal = require_util2().AbortSignalAny(
          [options === null || options === void 0 ? void 0 : options.signal].filter(Boolean2)
        );
        const stream = this;
        const queue = [];
        const signalOpt = {
          signal
        };
        let next;
        let resume;
        let done = false;
        let cnt = 0;
        function onCatch() {
          done = true;
          afterItemProcessed();
        }
        function afterItemProcessed() {
          cnt -= 1;
          maybeResume();
        }
        function maybeResume() {
          if (resume && !done && cnt < concurrency && queue.length < highWaterMark) {
            resume();
            resume = null;
          }
        }
        async function pump() {
          try {
            for await (let val of stream) {
              if (done) {
                return;
              }
              if (signal.aborted) {
                throw new AbortError();
              }
              try {
                val = fn(val, signalOpt);
                if (val === kEmpty) {
                  continue;
                }
                val = PromiseResolve(val);
              } catch (err) {
                val = PromiseReject(err);
              }
              cnt += 1;
              PromisePrototypeThen(val, afterItemProcessed, onCatch);
              queue.push(val);
              if (next) {
                next();
                next = null;
              }
              if (!done && (queue.length >= highWaterMark || cnt >= concurrency)) {
                await new Promise2((resolve) => {
                  resume = resolve;
                });
              }
            }
            queue.push(kEof);
          } catch (err) {
            const val = PromiseReject(err);
            PromisePrototypeThen(val, afterItemProcessed, onCatch);
            queue.push(val);
          } finally {
            done = true;
            if (next) {
              next();
              next = null;
            }
          }
        }
        pump();
        try {
          while (true) {
            while (queue.length > 0) {
              const val = await queue[0];
              if (val === kEof) {
                return;
              }
              if (signal.aborted) {
                throw new AbortError();
              }
              if (val !== kEmpty) {
                yield val;
              }
              queue.shift();
              maybeResume();
            }
            await new Promise2((resolve) => {
              next = resolve;
            });
          }
        } finally {
          done = true;
          if (resume) {
            resume();
            resume = null;
          }
        }
      }).call(this);
    }
    function asIndexedPairs(options = void 0) {
      if (options != null) {
        validateObject(options, "options");
      }
      if ((options === null || options === void 0 ? void 0 : options.signal) != null) {
        validateAbortSignal(options.signal, "options.signal");
      }
      return (async function* asIndexedPairs2() {
        let index = 0;
        for await (const val of this) {
          var _options$signal;
          if (options !== null && options !== void 0 && (_options$signal = options.signal) !== null && _options$signal !== void 0 && _options$signal.aborted) {
            throw new AbortError({
              cause: options.signal.reason
            });
          }
          yield [index++, val];
        }
      }).call(this);
    }
    async function some(fn, options = void 0) {
      for await (const unused of filter.call(this, fn, options)) {
        return true;
      }
      return false;
    }
    async function every(fn, options = void 0) {
      if (typeof fn !== "function") {
        throw new ERR_INVALID_ARG_TYPE("fn", ["Function", "AsyncFunction"], fn);
      }
      return !await some.call(
        this,
        async (...args) => {
          return !await fn(...args);
        },
        options
      );
    }
    async function find(fn, options) {
      for await (const result of filter.call(this, fn, options)) {
        return result;
      }
      return void 0;
    }
    async function forEach(fn, options) {
      if (typeof fn !== "function") {
        throw new ERR_INVALID_ARG_TYPE("fn", ["Function", "AsyncFunction"], fn);
      }
      async function forEachFn(value, options2) {
        await fn(value, options2);
        return kEmpty;
      }
      for await (const unused of map.call(this, forEachFn, options))
        ;
    }
    function filter(fn, options) {
      if (typeof fn !== "function") {
        throw new ERR_INVALID_ARG_TYPE("fn", ["Function", "AsyncFunction"], fn);
      }
      async function filterFn(value, options2) {
        if (await fn(value, options2)) {
          return value;
        }
        return kEmpty;
      }
      return map.call(this, filterFn, options);
    }
    var ReduceAwareErrMissingArgs = class extends ERR_MISSING_ARGS {
      constructor() {
        super("reduce");
        this.message = "Reduce of an empty stream requires an initial value";
      }
    };
    async function reduce(reducer, initialValue, options) {
      var _options$signal2;
      if (typeof reducer !== "function") {
        throw new ERR_INVALID_ARG_TYPE("reducer", ["Function", "AsyncFunction"], reducer);
      }
      if (options != null) {
        validateObject(options, "options");
      }
      if ((options === null || options === void 0 ? void 0 : options.signal) != null) {
        validateAbortSignal(options.signal, "options.signal");
      }
      let hasInitialValue = arguments.length > 1;
      if (options !== null && options !== void 0 && (_options$signal2 = options.signal) !== null && _options$signal2 !== void 0 && _options$signal2.aborted) {
        const err = new AbortError(void 0, {
          cause: options.signal.reason
        });
        this.once("error", () => {
        });
        await finished(this.destroy(err));
        throw err;
      }
      const ac = new AbortController2();
      const signal = ac.signal;
      if (options !== null && options !== void 0 && options.signal) {
        const opts = {
          once: true,
          [kWeakHandler]: this,
          [kResistStopPropagation]: true
        };
        options.signal.addEventListener("abort", () => ac.abort(), opts);
      }
      let gotAnyItemFromStream = false;
      try {
        for await (const value of this) {
          var _options$signal3;
          gotAnyItemFromStream = true;
          if (options !== null && options !== void 0 && (_options$signal3 = options.signal) !== null && _options$signal3 !== void 0 && _options$signal3.aborted) {
            throw new AbortError();
          }
          if (!hasInitialValue) {
            initialValue = value;
            hasInitialValue = true;
          } else {
            initialValue = await reducer(initialValue, value, {
              signal
            });
          }
        }
        if (!gotAnyItemFromStream && !hasInitialValue) {
          throw new ReduceAwareErrMissingArgs();
        }
      } finally {
        ac.abort();
      }
      return initialValue;
    }
    async function toArray(options) {
      if (options != null) {
        validateObject(options, "options");
      }
      if ((options === null || options === void 0 ? void 0 : options.signal) != null) {
        validateAbortSignal(options.signal, "options.signal");
      }
      const result = [];
      for await (const val of this) {
        var _options$signal4;
        if (options !== null && options !== void 0 && (_options$signal4 = options.signal) !== null && _options$signal4 !== void 0 && _options$signal4.aborted) {
          throw new AbortError(void 0, {
            cause: options.signal.reason
          });
        }
        ArrayPrototypePush(result, val);
      }
      return result;
    }
    function flatMap(fn, options) {
      const values = map.call(this, fn, options);
      return (async function* flatMap2() {
        for await (const val of values) {
          yield* val;
        }
      }).call(this);
    }
    function toIntegerOrInfinity(number) {
      number = Number2(number);
      if (NumberIsNaN(number)) {
        return 0;
      }
      if (number < 0) {
        throw new ERR_OUT_OF_RANGE("number", ">= 0", number);
      }
      return number;
    }
    function drop(number, options = void 0) {
      if (options != null) {
        validateObject(options, "options");
      }
      if ((options === null || options === void 0 ? void 0 : options.signal) != null) {
        validateAbortSignal(options.signal, "options.signal");
      }
      number = toIntegerOrInfinity(number);
      return (async function* drop2() {
        var _options$signal5;
        if (options !== null && options !== void 0 && (_options$signal5 = options.signal) !== null && _options$signal5 !== void 0 && _options$signal5.aborted) {
          throw new AbortError();
        }
        for await (const val of this) {
          var _options$signal6;
          if (options !== null && options !== void 0 && (_options$signal6 = options.signal) !== null && _options$signal6 !== void 0 && _options$signal6.aborted) {
            throw new AbortError();
          }
          if (number-- <= 0) {
            yield val;
          }
        }
      }).call(this);
    }
    function take(number, options = void 0) {
      if (options != null) {
        validateObject(options, "options");
      }
      if ((options === null || options === void 0 ? void 0 : options.signal) != null) {
        validateAbortSignal(options.signal, "options.signal");
      }
      number = toIntegerOrInfinity(number);
      return (async function* take2() {
        var _options$signal7;
        if (options !== null && options !== void 0 && (_options$signal7 = options.signal) !== null && _options$signal7 !== void 0 && _options$signal7.aborted) {
          throw new AbortError();
        }
        for await (const val of this) {
          var _options$signal8;
          if (options !== null && options !== void 0 && (_options$signal8 = options.signal) !== null && _options$signal8 !== void 0 && _options$signal8.aborted) {
            throw new AbortError();
          }
          if (number-- > 0) {
            yield val;
          }
          if (number <= 0) {
            return;
          }
        }
      }).call(this);
    }
    module.exports.streamReturningOperators = {
      asIndexedPairs: deprecate(asIndexedPairs, "readable.asIndexedPairs will be removed in a future version."),
      drop,
      filter,
      flatMap,
      map,
      take,
      compose
    };
    module.exports.promiseReturningOperators = {
      every,
      forEach,
      reduce,
      toArray,
      some,
      find
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/stream/promises.js
var require_promises = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/stream/promises.js"(exports, module) {
    "use strict";
    var { ArrayPrototypePop, Promise: Promise2 } = require_primordials();
    var { isIterable, isNodeStream, isWebStream } = require_utils2();
    var { pipelineImpl: pl } = require_pipeline();
    var { finished } = require_end_of_stream();
    require_stream();
    function pipeline(...streams) {
      return new Promise2((resolve, reject) => {
        let signal;
        let end;
        const lastArg = streams[streams.length - 1];
        if (lastArg && typeof lastArg === "object" && !isNodeStream(lastArg) && !isIterable(lastArg) && !isWebStream(lastArg)) {
          const options = ArrayPrototypePop(streams);
          signal = options.signal;
          end = options.end;
        }
        pl(
          streams,
          (err, value) => {
            if (err) {
              reject(err);
            } else {
              resolve(value);
            }
          },
          {
            signal,
            end
          }
        );
      });
    }
    module.exports = {
      finished,
      pipeline
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/stream.js
var require_stream = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/stream.js"(exports, module) {
    "use strict";
    var { Buffer: Buffer2 } = require_buffer();
    var { ObjectDefineProperty, ObjectKeys, ReflectApply } = require_primordials();
    var {
      promisify: { custom: customPromisify }
    } = require_util2();
    var { streamReturningOperators, promiseReturningOperators } = require_operators();
    var {
      codes: { ERR_ILLEGAL_CONSTRUCTOR }
    } = require_errors3();
    var compose = require_compose();
    var { setDefaultHighWaterMark, getDefaultHighWaterMark } = require_state();
    var { pipeline } = require_pipeline();
    var { destroyer } = require_destroy();
    var eos = require_end_of_stream();
    var promises = require_promises();
    var utils = require_utils2();
    var Stream = module.exports = require_legacy().Stream;
    Stream.isDestroyed = utils.isDestroyed;
    Stream.isDisturbed = utils.isDisturbed;
    Stream.isErrored = utils.isErrored;
    Stream.isReadable = utils.isReadable;
    Stream.isWritable = utils.isWritable;
    Stream.Readable = require_readable();
    for (const key of ObjectKeys(streamReturningOperators)) {
      let fn = function(...args) {
        if (new.target) {
          throw ERR_ILLEGAL_CONSTRUCTOR();
        }
        return Stream.Readable.from(ReflectApply(op, this, args));
      };
      const op = streamReturningOperators[key];
      ObjectDefineProperty(fn, "name", {
        __proto__: null,
        value: op.name
      });
      ObjectDefineProperty(fn, "length", {
        __proto__: null,
        value: op.length
      });
      ObjectDefineProperty(Stream.Readable.prototype, key, {
        __proto__: null,
        value: fn,
        enumerable: false,
        configurable: true,
        writable: true
      });
    }
    for (const key of ObjectKeys(promiseReturningOperators)) {
      let fn = function(...args) {
        if (new.target) {
          throw ERR_ILLEGAL_CONSTRUCTOR();
        }
        return ReflectApply(op, this, args);
      };
      const op = promiseReturningOperators[key];
      ObjectDefineProperty(fn, "name", {
        __proto__: null,
        value: op.name
      });
      ObjectDefineProperty(fn, "length", {
        __proto__: null,
        value: op.length
      });
      ObjectDefineProperty(Stream.Readable.prototype, key, {
        __proto__: null,
        value: fn,
        enumerable: false,
        configurable: true,
        writable: true
      });
    }
    Stream.Writable = require_writable();
    Stream.Duplex = require_duplex();
    Stream.Transform = require_transform();
    Stream.PassThrough = require_passthrough();
    Stream.pipeline = pipeline;
    var { addAbortSignal } = require_add_abort_signal();
    Stream.addAbortSignal = addAbortSignal;
    Stream.finished = eos;
    Stream.destroy = destroyer;
    Stream.compose = compose;
    Stream.setDefaultHighWaterMark = setDefaultHighWaterMark;
    Stream.getDefaultHighWaterMark = getDefaultHighWaterMark;
    ObjectDefineProperty(Stream, "promises", {
      __proto__: null,
      configurable: true,
      enumerable: true,
      get() {
        return promises;
      }
    });
    ObjectDefineProperty(pipeline, customPromisify, {
      __proto__: null,
      enumerable: true,
      get() {
        return promises.pipeline;
      }
    });
    ObjectDefineProperty(eos, customPromisify, {
      __proto__: null,
      enumerable: true,
      get() {
        return promises.finished;
      }
    });
    Stream.Stream = Stream;
    Stream._isUint8Array = function isUint8Array(value) {
      return value instanceof Uint8Array;
    };
    Stream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {
      return Buffer2.from(chunk.buffer, chunk.byteOffset, chunk.byteLength);
    };
  }
});

// node_modules/elevenlabs/node_modules/readable-stream/lib/ours/browser.js
var require_browser5 = __commonJS({
  "node_modules/elevenlabs/node_modules/readable-stream/lib/ours/browser.js"(exports, module) {
    "use strict";
    var CustomStream = require_stream();
    var promises = require_promises();
    var originalDestroy = CustomStream.Readable.destroy;
    module.exports = CustomStream.Readable;
    module.exports._uint8ArrayToBuffer = CustomStream._uint8ArrayToBuffer;
    module.exports._isUint8Array = CustomStream._isUint8Array;
    module.exports.isDisturbed = CustomStream.isDisturbed;
    module.exports.isErrored = CustomStream.isErrored;
    module.exports.isReadable = CustomStream.isReadable;
    module.exports.Readable = CustomStream.Readable;
    module.exports.Writable = CustomStream.Writable;
    module.exports.Duplex = CustomStream.Duplex;
    module.exports.Transform = CustomStream.Transform;
    module.exports.PassThrough = CustomStream.PassThrough;
    module.exports.addAbortSignal = CustomStream.addAbortSignal;
    module.exports.finished = CustomStream.finished;
    module.exports.destroy = CustomStream.destroy;
    module.exports.destroy = originalDestroy;
    module.exports.pipeline = CustomStream.pipeline;
    module.exports.compose = CustomStream.compose;
    Object.defineProperty(CustomStream, "promises", {
      configurable: true,
      enumerable: true,
      get() {
        return promises;
      }
    });
    module.exports.Stream = CustomStream.Stream;
    module.exports.default = module.exports;
  }
});

// node_modules/form-data/lib/browser.js
var require_browser6 = __commonJS({
  "node_modules/form-data/lib/browser.js"(exports, module) {
    module.exports = typeof self == "object" ? self.FormData : window.FormData;
  }
});

// node_modules/elevenlabs/core/form-data-utils/FormDataWrapper.js
var require_FormDataWrapper = __commonJS({
  "node_modules/elevenlabs/core/form-data-utils/FormDataWrapper.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.WebFormData = exports.Node16FormData = exports.Node18FormData = void 0;
    exports.newFormData = newFormData;
    var runtime_1 = require_runtime2();
    function isNamedValue(value) {
      return typeof value === "object" && value != null && "name" in value;
    }
    function newFormData() {
      return __awaiter(this, void 0, void 0, function* () {
        let formdata;
        if (runtime_1.RUNTIME.type === "node" && runtime_1.RUNTIME.parsedVersion != null && runtime_1.RUNTIME.parsedVersion >= 18) {
          formdata = new Node18FormData();
        } else if (runtime_1.RUNTIME.type === "node") {
          formdata = new Node16FormData();
        } else {
          formdata = new WebFormData();
        }
        yield formdata.setup();
        return formdata;
      });
    }
    var Node18FormData = class {
      setup() {
        return __awaiter(this, void 0, void 0, function* () {
          this.fd = new (yield Promise.resolve().then(() => __importStar(require_browser3()))).FormData();
        });
      }
      append(key, value) {
        var _a;
        (_a = this.fd) === null || _a === void 0 ? void 0 : _a.append(key, value);
      }
      appendFile(key, value, fileName) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          if (fileName == null && isNamedValue(value)) {
            fileName = value.name;
          }
          if (value instanceof Blob) {
            (_a = this.fd) === null || _a === void 0 ? void 0 : _a.append(key, value, fileName);
          } else {
            (_b = this.fd) === null || _b === void 0 ? void 0 : _b.append(key, {
              type: void 0,
              name: fileName,
              [Symbol.toStringTag]: "File",
              stream() {
                return value;
              }
            });
          }
        });
      }
      getRequest() {
        return __awaiter(this, void 0, void 0, function* () {
          const encoder = new (yield Promise.resolve().then(() => __importStar(require_lib2()))).FormDataEncoder(this.fd);
          return {
            body: (yield Promise.resolve().then(() => __importStar(require_browser5()))).Readable.from(encoder),
            headers: encoder.headers,
            duplex: "half"
          };
        });
      }
    };
    exports.Node18FormData = Node18FormData;
    var Node16FormData = class {
      setup() {
        return __awaiter(this, void 0, void 0, function* () {
          this.fd = new (yield Promise.resolve().then(() => __importStar(require_browser6()))).default();
        });
      }
      append(key, value) {
        var _a;
        (_a = this.fd) === null || _a === void 0 ? void 0 : _a.append(key, value);
      }
      appendFile(key, value, fileName) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          if (fileName == null && isNamedValue(value)) {
            fileName = value.name;
          }
          let bufferedValue;
          if (value instanceof Blob) {
            bufferedValue = Buffer.from(yield value.arrayBuffer());
          } else {
            bufferedValue = value;
          }
          if (fileName == null) {
            (_a = this.fd) === null || _a === void 0 ? void 0 : _a.append(key, bufferedValue);
          } else {
            (_b = this.fd) === null || _b === void 0 ? void 0 : _b.append(key, bufferedValue, { filename: fileName });
          }
        });
      }
      getRequest() {
        return {
          body: this.fd,
          headers: this.fd ? this.fd.getHeaders() : {}
        };
      }
    };
    exports.Node16FormData = Node16FormData;
    var WebFormData = class {
      setup() {
        return __awaiter(this, void 0, void 0, function* () {
          this.fd = new FormData();
        });
      }
      append(key, value) {
        var _a;
        (_a = this.fd) === null || _a === void 0 ? void 0 : _a.append(key, value);
      }
      appendFile(key, value, fileName) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          if (fileName == null && isNamedValue(value)) {
            fileName = value.name;
          }
          if (value instanceof Blob) {
            (_a = this.fd) === null || _a === void 0 ? void 0 : _a.append(key, value, fileName);
            return;
          }
          (_b = this.fd) === null || _b === void 0 ? void 0 : _b.append(key, new Blob([value]), fileName);
        });
      }
      getRequest() {
        return {
          body: this.fd,
          headers: {}
        };
      }
    };
    exports.WebFormData = WebFormData;
  }
});

// node_modules/elevenlabs/core/form-data-utils/index.js
var require_form_data_utils = __commonJS({
  "node_modules/elevenlabs/core/form-data-utils/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_FormDataWrapper(), exports);
  }
});

// node_modules/elevenlabs/core/streaming-fetcher/Stream.js
var require_Stream = __commonJS({
  "node_modules/elevenlabs/core/streaming-fetcher/Stream.js"(exports) {
    "use strict";
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __asyncValues = exports && exports.__asyncValues || function(o) {
      if (!Symbol.asyncIterator)
        throw new TypeError("Symbol.asyncIterator is not defined.");
      var m = o[Symbol.asyncIterator], i;
      return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
      }, i);
      function verb(n) {
        i[n] = o[n] && function(v) {
          return new Promise(function(resolve, reject) {
            v = o[n](v), settle(resolve, reject, v.done, v.value);
          });
        };
      }
      function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v2) {
          resolve({ value: v2, done: d });
        }, reject);
      }
    };
    var __await = exports && exports.__await || function(v) {
      return this instanceof __await ? (this.v = v, this) : new __await(v);
    };
    var __asyncGenerator = exports && exports.__asyncGenerator || function(thisArg, _arguments, generator) {
      if (!Symbol.asyncIterator)
        throw new TypeError("Symbol.asyncIterator is not defined.");
      var g = generator.apply(thisArg, _arguments || []), i, q = [];
      return i = Object.create((typeof AsyncIterator === "function" ? AsyncIterator : Object).prototype), verb("next"), verb("throw"), verb("return", awaitReturn), i[Symbol.asyncIterator] = function() {
        return this;
      }, i;
      function awaitReturn(f) {
        return function(v) {
          return Promise.resolve(v).then(f, reject);
        };
      }
      function verb(n, f) {
        if (g[n]) {
          i[n] = function(v) {
            return new Promise(function(a, b) {
              q.push([n, v, a, b]) > 1 || resume(n, v);
            });
          };
          if (f)
            i[n] = f(i[n]);
        }
      }
      function resume(n, v) {
        try {
          step(g[n](v));
        } catch (e) {
          settle(q[0][3], e);
        }
      }
      function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
      }
      function fulfill(value) {
        resume("next", value);
      }
      function reject(value) {
        resume("throw", value);
      }
      function settle(f, v) {
        if (f(v), q.shift(), q.length)
          resume(q[0][0], q[0][1]);
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Stream = void 0;
    exports.readableStreamAsyncIterable = readableStreamAsyncIterable;
    var runtime_1 = require_runtime2();
    var DATA_PREFIX = "data:";
    var Stream = class {
      constructor({ stream, parse, eventShape, signal }) {
        this.controller = new AbortController();
        this.stream = stream;
        this.parse = parse;
        if (eventShape.type === "sse") {
          this.prefix = DATA_PREFIX;
          this.messageTerminator = "\n";
          this.streamTerminator = eventShape.streamTerminator;
        } else {
          this.messageTerminator = eventShape.messageTerminator;
        }
        signal === null || signal === void 0 ? void 0 : signal.addEventListener("abort", () => this.controller.abort());
      }
      iterMessages() {
        return __asyncGenerator(this, arguments, function* iterMessages_1() {
          var _a, e_1, _b, _c;
          this.controller.signal;
          const stream = readableStreamAsyncIterable(this.stream);
          let buf = "";
          let prefixSeen = false;
          try {
            for (var _d = true, stream_1 = __asyncValues(stream), stream_1_1; stream_1_1 = yield __await(stream_1.next()), _a = stream_1_1.done, !_a; _d = true) {
              _c = stream_1_1.value;
              _d = false;
              const chunk = _c;
              buf += this.decodeChunk(chunk);
              let terminatorIndex;
              while ((terminatorIndex = buf.indexOf(this.messageTerminator)) >= 0) {
                let line = buf.slice(0, terminatorIndex + 1);
                buf = buf.slice(terminatorIndex + this.messageTerminator.length);
                if (!line.trim()) {
                  continue;
                }
                if (!prefixSeen && this.prefix != null) {
                  const prefixIndex = line.indexOf(this.prefix);
                  if (prefixIndex === -1) {
                    continue;
                  }
                  prefixSeen = true;
                  line = line.slice(prefixIndex + this.prefix.length);
                }
                if (this.streamTerminator != null && line.includes(this.streamTerminator)) {
                  return yield __await(void 0);
                }
                const message = yield __await(this.parse(JSON.parse(line)));
                yield yield __await(message);
                prefixSeen = false;
              }
            }
          } catch (e_1_1) {
            e_1 = { error: e_1_1 };
          } finally {
            try {
              if (!_d && !_a && (_b = stream_1.return))
                yield __await(_b.call(stream_1));
            } finally {
              if (e_1)
                throw e_1.error;
            }
          }
        });
      }
      [Symbol.asyncIterator]() {
        return __asyncGenerator(this, arguments, function* _a() {
          var _b, e_2, _c, _d;
          try {
            for (var _e = true, _f = __asyncValues(this.iterMessages()), _g; _g = yield __await(_f.next()), _b = _g.done, !_b; _e = true) {
              _d = _g.value;
              _e = false;
              const message = _d;
              yield yield __await(message);
            }
          } catch (e_2_1) {
            e_2 = { error: e_2_1 };
          } finally {
            try {
              if (!_e && !_b && (_c = _f.return))
                yield __await(_c.call(_f));
            } finally {
              if (e_2)
                throw e_2.error;
            }
          }
        });
      }
      decodeChunk(chunk) {
        let decoded = "";
        if (typeof TextDecoder !== "undefined") {
          const decoder = new TextDecoder("utf8");
          decoded += decoder.decode(chunk);
        } else if (runtime_1.RUNTIME.type === "node" && typeof chunk !== "undefined") {
          decoded += Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk);
        }
        return decoded;
      }
    };
    exports.Stream = Stream;
    function readableStreamAsyncIterable(stream) {
      if (stream[Symbol.asyncIterator]) {
        return stream;
      }
      const reader = stream.getReader();
      return {
        next() {
          return __awaiter(this, void 0, void 0, function* () {
            try {
              const result = yield reader.read();
              if (result === null || result === void 0 ? void 0 : result.done) {
                reader.releaseLock();
              }
              return result;
            } catch (e) {
              reader.releaseLock();
              throw e;
            }
          });
        },
        return() {
          return __awaiter(this, void 0, void 0, function* () {
            const cancelPromise = reader.cancel();
            reader.releaseLock();
            yield cancelPromise;
            return { done: true, value: void 0 };
          });
        },
        [Symbol.asyncIterator]() {
          return this;
        }
      };
    }
  }
});

// node_modules/elevenlabs/core/streaming-fetcher/index.js
var require_streaming_fetcher = __commonJS({
  "node_modules/elevenlabs/core/streaming-fetcher/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Stream = void 0;
    var Stream_1 = require_Stream();
    Object.defineProperty(exports, "Stream", { enumerable: true, get: function() {
      return Stream_1.Stream;
    } });
  }
});

// node_modules/elevenlabs/core/index.js
var require_core = __commonJS({
  "node_modules/elevenlabs/core/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_fetcher(), exports);
    __exportStar(require_runtime2(), exports);
    __exportStar(require_form_data_utils(), exports);
    __exportStar(require_streaming_fetcher(), exports);
  }
});

// node_modules/url-join/lib/url-join.js
var require_url_join = __commonJS({
  "node_modules/url-join/lib/url-join.js"(exports, module) {
    (function(name, context, definition) {
      if (typeof module !== "undefined" && module.exports)
        module.exports = definition();
      else if (typeof define === "function" && define.amd)
        define(definition);
      else
        context[name] = definition();
    })("urljoin", exports, function() {
      function normalize(strArray) {
        var resultArray = [];
        if (strArray.length === 0) {
          return "";
        }
        if (typeof strArray[0] !== "string") {
          throw new TypeError("Url must be a string. Received " + strArray[0]);
        }
        if (strArray[0].match(/^[^/:]+:\/*$/) && strArray.length > 1) {
          var first = strArray.shift();
          strArray[0] = first + strArray[0];
        }
        if (strArray[0].match(/^file:\/\/\//)) {
          strArray[0] = strArray[0].replace(/^([^/:]+):\/*/, "$1:///");
        } else {
          strArray[0] = strArray[0].replace(/^([^/:]+):\/*/, "$1://");
        }
        for (var i = 0; i < strArray.length; i++) {
          var component = strArray[i];
          if (typeof component !== "string") {
            throw new TypeError("Url must be a string. Received " + component);
          }
          if (component === "") {
            continue;
          }
          if (i > 0) {
            component = component.replace(/^[\/]+/, "");
          }
          if (i < strArray.length - 1) {
            component = component.replace(/[\/]+$/, "");
          } else {
            component = component.replace(/[\/]+$/, "/");
          }
          resultArray.push(component);
        }
        var str = resultArray.join("/");
        str = str.replace(/\/(\?|&|#[^!])/g, "$1");
        var parts = str.split("?");
        str = parts.shift() + (parts.length > 0 ? "?" : "") + parts.join("&");
        return str;
      }
      return function() {
        var input;
        if (typeof arguments[0] === "object") {
          input = arguments[0];
        } else {
          input = [].slice.call(arguments);
        }
        return normalize(input);
      };
    });
  }
});

// node_modules/elevenlabs/api/resources/history/client/Client.js
var require_Client = __commonJS({
  "node_modules/elevenlabs/api/resources/history/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.History = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var History = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Returns a list of your generated audio.
       *
       * @param {ElevenLabs.HistoryGetAllRequest} request
       * @param {History.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.history.getAll()
       */
      getAll() {
        return __awaiter(this, arguments, void 0, function* (request = {}, requestOptions) {
          var _a, _b;
          const { page_size: pageSize, start_after_history_item_id: startAfterHistoryItemId, voice_id: voiceId, search, source } = request;
          const _queryParams = {};
          if (pageSize != null) {
            _queryParams["page_size"] = pageSize.toString();
          }
          if (startAfterHistoryItemId != null) {
            _queryParams["start_after_history_item_id"] = startAfterHistoryItemId;
          }
          if (voiceId != null) {
            _queryParams["voice_id"] = voiceId;
          }
          if (search != null) {
            _queryParams["search"] = search;
          }
          if (source != null) {
            _queryParams["source"] = source;
          }
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/history"),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/history.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Retrieves a history item.
       *
       * @param {string} historyItemId - ID of the history item to be used. You can use the [Get generated items](/docs/api-reference/history/get-all) endpoint to retrieve a list of history items.
       * @param {History.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.history.get("VW7YKqPnjY4h39yTbx2L")
       */
      get(historyItemId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/history/${encodeURIComponent(historyItemId)}`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/history/{history_item_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Delete a history item by its ID
       *
       * @param {string} historyItemId - ID of the history item to be used. You can use the [Get generated items](/docs/api-reference/history/get-all) endpoint to retrieve a list of history items.
       * @param {History.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.history.delete("VW7YKqPnjY4h39yTbx2L")
       */
      delete(historyItemId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/history/${encodeURIComponent(historyItemId)}`),
            method: "DELETE",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/history/{history_item_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Returns the audio of an history item.
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       */
      getAudio(historyItemId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/history/${encodeURIComponent(historyItemId)}/audio`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            responseType: "streaming",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/history/{history_item_id}/audio.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Download one or more history items. If one history item ID is provided, we will return a single audio file. If more than one history item IDs are provided, we will provide the history items packed into a .zip file.
       * @throws {@link ElevenLabs.BadRequestError}
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       */
      download(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/history/download"),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            responseType: "streaming",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 400:
                throw new ElevenLabs.BadRequestError(_response.error.body);
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/history/download.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.History = History;
  }
});

// node_modules/elevenlabs/api/resources/textToSoundEffects/client/Client.js
var require_Client2 = __commonJS({
  "node_modules/elevenlabs/api/resources/textToSoundEffects/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __rest = exports && exports.__rest || function(s, e) {
      var t = {};
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
          t[p] = s[p];
      if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
            t[p[i]] = s[p[i]];
        }
      return t;
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TextToSoundEffects = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var TextToSoundEffects = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Turn text into sound effects for your videos, voice-overs or video games using the most advanced sound effects model in the world.
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       */
      convert(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const { output_format: outputFormat } = request, _body = __rest(request, ["output_format"]);
          const _queryParams = {};
          if (outputFormat != null) {
            _queryParams["output_format"] = outputFormat;
          }
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/sound-generation"),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            body: _body,
            responseType: "streaming",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/sound-generation.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.TextToSoundEffects = TextToSoundEffects;
  }
});

// node_modules/elevenlabs/api/resources/audioIsolation/client/Client.js
var require_Client3 = __commonJS({
  "node_modules/elevenlabs/api/resources/audioIsolation/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AudioIsolation = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var AudioIsolation = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Removes background noise from audio.
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       */
      audioIsolation(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _request = yield core.newFormData();
          yield _request.appendFile("audio", request.audio);
          if (request.file_format != null) {
            _request.append("file_format", request.file_format);
          }
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/audio-isolation"),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            responseType: "streaming",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/audio-isolation.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Removes background noise from audio.
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       */
      audioIsolationStream(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _request = yield core.newFormData();
          yield _request.appendFile("audio", request.audio);
          if (request.file_format != null) {
            _request.append("file_format", request.file_format);
          }
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/audio-isolation/stream"),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            responseType: "streaming",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/audio-isolation/stream.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.AudioIsolation = AudioIsolation;
  }
});

// node_modules/elevenlabs/api/resources/samples/client/Client.js
var require_Client4 = __commonJS({
  "node_modules/elevenlabs/api/resources/samples/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Samples = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Samples = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Removes a sample by its ID.
       *
       * @param {string} voiceId - ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/search) endpoint list all the available voices.
       * @param {string} sampleId - ID of the sample to be used. You can use the [Get voices](/docs/api-reference/voices/get) endpoint list all the available samples for a voice.
       * @param {Samples.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.samples.delete("21m00Tcm4TlvDq8ikWAM", "VW7YKqPnjY4h39yTbx2L")
       */
      delete(voiceId, sampleId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/${encodeURIComponent(voiceId)}/samples/${encodeURIComponent(sampleId)}`),
            method: "DELETE",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/voices/{voice_id}/samples/{sample_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Returns the audio corresponding to a sample attached to a voice.
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       */
      getAudio(voiceId, sampleId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/${encodeURIComponent(voiceId)}/samples/${encodeURIComponent(sampleId)}/audio`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            responseType: "streaming",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/voices/{voice_id}/samples/{sample_id}/audio.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Samples = Samples;
  }
});

// node_modules/elevenlabs/api/resources/textToSpeech/client/Client.js
var require_Client5 = __commonJS({
  "node_modules/elevenlabs/api/resources/textToSpeech/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __rest = exports && exports.__rest || function(s, e) {
      var t = {};
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
          t[p] = s[p];
      if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
            t[p[i]] = s[p[i]];
        }
      return t;
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TextToSpeech = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var TextToSpeech = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Converts text into speech using a voice of your choice and returns audio.
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       */
      convert(voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const { enable_logging: enableLogging, optimize_streaming_latency: optimizeStreamingLatency, output_format: outputFormat } = request, _body = __rest(request, ["enable_logging", "optimize_streaming_latency", "output_format"]);
          const _queryParams = {};
          if (enableLogging != null) {
            _queryParams["enable_logging"] = enableLogging.toString();
          }
          if (optimizeStreamingLatency != null) {
            _queryParams["optimize_streaming_latency"] = optimizeStreamingLatency.toString();
          }
          if (outputFormat != null) {
            _queryParams["output_format"] = outputFormat;
          }
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/text-to-speech/${encodeURIComponent(voiceId)}`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            body: _body,
            responseType: "streaming",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/text-to-speech/{voice_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Generate speech from text with precise character-level timing information for audio-text synchronization.
       *
       * @param {string} voiceId - Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
       * @param {ElevenLabs.TextToSpeechWithTimestampsRequest} request
       * @param {TextToSpeech.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.textToSpeech.convertWithTimestamps("21m00Tcm4TlvDq8ikWAM", {
       *         text: "This is a test for the API of ElevenLabs."
       *     })
       */
      convertWithTimestamps(voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const { enable_logging: enableLogging, optimize_streaming_latency: optimizeStreamingLatency, output_format: outputFormat } = request, _body = __rest(request, ["enable_logging", "optimize_streaming_latency", "output_format"]);
          const _queryParams = {};
          if (enableLogging != null) {
            _queryParams["enable_logging"] = enableLogging.toString();
          }
          if (optimizeStreamingLatency != null) {
            _queryParams["optimize_streaming_latency"] = optimizeStreamingLatency.toString();
          }
          if (outputFormat != null) {
            _queryParams["output_format"] = outputFormat;
          }
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/text-to-speech/${encodeURIComponent(voiceId)}/with-timestamps`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            body: _body,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/text-to-speech/{voice_id}/with-timestamps.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Converts text into speech using a voice of your choice and returns audio as an audio stream.
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       */
      convertAsStream(voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const { enable_logging: enableLogging, optimize_streaming_latency: optimizeStreamingLatency, output_format: outputFormat } = request, _body = __rest(request, ["enable_logging", "optimize_streaming_latency", "output_format"]);
          const _queryParams = {};
          if (enableLogging != null) {
            _queryParams["enable_logging"] = enableLogging.toString();
          }
          if (optimizeStreamingLatency != null) {
            _queryParams["optimize_streaming_latency"] = optimizeStreamingLatency.toString();
          }
          if (outputFormat != null) {
            _queryParams["output_format"] = outputFormat;
          }
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/text-to-speech/${encodeURIComponent(voiceId)}/stream`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            body: _body,
            responseType: "streaming",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/text-to-speech/{voice_id}/stream.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Converts text into speech using a voice of your choice and returns a stream of JSONs containing audio as a base64 encoded string together with information on when which character was spoken.
       */
      streamWithTimestamps(voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const { enable_logging: enableLogging, optimize_streaming_latency: optimizeStreamingLatency, output_format: outputFormat } = request, _body = __rest(request, ["enable_logging", "optimize_streaming_latency", "output_format"]);
          const _queryParams = {};
          if (enableLogging != null) {
            _queryParams["enable_logging"] = enableLogging.toString();
          }
          if (optimizeStreamingLatency != null) {
            _queryParams["optimize_streaming_latency"] = optimizeStreamingLatency.toString();
          }
          if (outputFormat != null) {
            _queryParams["output_format"] = outputFormat;
          }
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/text-to-speech/${encodeURIComponent(voiceId)}/stream/with-timestamps`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            body: _body,
            responseType: "sse",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return new core.Stream({
              stream: _response.body,
              parse: (data) => data,
              signal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal,
              eventShape: {
                type: "json",
                messageTerminator: "\n"
              }
            });
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/text-to-speech/{voice_id}/stream/with-timestamps.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.TextToSpeech = TextToSpeech;
  }
});

// node_modules/elevenlabs/api/resources/speechToSpeech/client/Client.js
var require_Client6 = __commonJS({
  "node_modules/elevenlabs/api/resources/speechToSpeech/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SpeechToSpeech = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var SpeechToSpeech = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Transform audio from one voice to another. Maintain full control over emotion, timing and delivery.
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       */
      convert(voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _queryParams = {};
          if (request.enable_logging != null) {
            _queryParams["enable_logging"] = request.enable_logging.toString();
          }
          if (request.optimize_streaming_latency != null) {
            _queryParams["optimize_streaming_latency"] = request.optimize_streaming_latency.toString();
          }
          if (request.output_format != null) {
            _queryParams["output_format"] = request.output_format;
          }
          const _request = yield core.newFormData();
          yield _request.appendFile("audio", request.audio);
          if (request.model_id != null) {
            _request.append("model_id", request.model_id);
          }
          if (request.voice_settings != null) {
            _request.append("voice_settings", request.voice_settings);
          }
          if (request.seed != null) {
            _request.append("seed", request.seed.toString());
          }
          if (request.remove_background_noise != null) {
            _request.append("remove_background_noise", request.remove_background_noise.toString());
          }
          if (request.file_format != null) {
            _request.append("file_format", request.file_format);
          }
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/speech-to-speech/${encodeURIComponent(voiceId)}`),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            queryParameters: _queryParams,
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            responseType: "streaming",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/speech-to-speech/{voice_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Stream audio from one voice to another. Maintain full control over emotion, timing and delivery.
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       */
      convertAsStream(voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _queryParams = {};
          if (request.enable_logging != null) {
            _queryParams["enable_logging"] = request.enable_logging.toString();
          }
          if (request.optimize_streaming_latency != null) {
            _queryParams["optimize_streaming_latency"] = request.optimize_streaming_latency.toString();
          }
          if (request.output_format != null) {
            _queryParams["output_format"] = request.output_format;
          }
          const _request = yield core.newFormData();
          yield _request.appendFile("audio", request.audio);
          if (request.model_id != null) {
            _request.append("model_id", request.model_id);
          }
          if (request.voice_settings != null) {
            _request.append("voice_settings", request.voice_settings);
          }
          if (request.seed != null) {
            _request.append("seed", request.seed.toString());
          }
          if (request.remove_background_noise != null) {
            _request.append("remove_background_noise", request.remove_background_noise.toString());
          }
          if (request.file_format != null) {
            _request.append("file_format", request.file_format);
          }
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/speech-to-speech/${encodeURIComponent(voiceId)}/stream`),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            queryParameters: _queryParams,
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            responseType: "streaming",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/speech-to-speech/{voice_id}/stream.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.SpeechToSpeech = SpeechToSpeech;
  }
});

// node_modules/elevenlabs/api/resources/textToVoice/client/Client.js
var require_Client7 = __commonJS({
  "node_modules/elevenlabs/api/resources/textToVoice/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __rest = exports && exports.__rest || function(s, e) {
      var t = {};
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
          t[p] = s[p];
      if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
            t[p[i]] = s[p[i]];
        }
      return t;
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TextToVoice = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var TextToVoice = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Create a voice from a text prompt.
       *
       * @param {ElevenLabs.VoiceDesignRequest} request
       * @param {TextToVoice.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.textToVoice.createPreviews({
       *         voice_description: "A sassy squeaky mouse"
       *     })
       */
      createPreviews(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const { output_format: outputFormat } = request, _body = __rest(request, ["output_format"]);
          const _queryParams = {};
          if (outputFormat != null) {
            _queryParams["output_format"] = outputFormat;
          }
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/text-to-voice/create-previews"),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            body: _body,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/text-to-voice/create-previews.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Add a generated voice to the voice library.
       *
       * @param {ElevenLabs.SaveVoicePreviewRequest} request
       * @param {TextToVoice.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.textToVoice.createVoiceFromPreview({
       *         voice_name: "Sassy squeaky mouse",
       *         voice_description: "A sassy squeaky mouse",
       *         generated_voice_id: "37HceQefKmEi3bGovXjL"
       *     })
       */
      createVoiceFromPreview(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/text-to-voice/create-voice-from-preview"),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/text-to-voice/create-voice-from-preview.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.TextToVoice = TextToVoice;
  }
});

// node_modules/elevenlabs/api/resources/user/client/Client.js
var require_Client8 = __commonJS({
  "node_modules/elevenlabs/api/resources/user/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.User = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var User = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Gets extended information about the users subscription
       *
       * @param {User.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.user.getSubscription()
       */
      getSubscription(requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/user/subscription"),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/user/subscription.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Gets information about the user
       *
       * @param {User.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.user.get()
       */
      get(requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/user"),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/user.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.User = User;
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/audio/client/Client.js
var require_Client9 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/audio/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Audio = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Audio = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Retrieve the first 30 seconds of voice sample audio with or without noise removal.
       *
       * @param {string} voiceId - Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
       * @param {string} sampleId - Sample ID to be used
       * @param {Audio.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.pvc.samples.audio.get("21m00Tcm4TlvDq8ikWAM", "VW7YKqPnjY4h39yTbx2L")
       */
      get(voiceId, sampleId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/pvc/${encodeURIComponent(voiceId)}/samples/${encodeURIComponent(sampleId)}/audio`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/voices/pvc/{voice_id}/samples/{sample_id}/audio.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Audio = Audio;
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/waveform/client/Client.js
var require_Client10 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/waveform/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Waveform = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Waveform = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Retrieve the visual waveform of a voice sample.
       *
       * @param {string} voiceId - Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
       * @param {string} sampleId - Sample ID to be used
       * @param {Waveform.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.pvc.samples.waveform.get("21m00Tcm4TlvDq8ikWAM", "VW7YKqPnjY4h39yTbx2L")
       */
      get(voiceId, sampleId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/pvc/${encodeURIComponent(voiceId)}/samples/${encodeURIComponent(sampleId)}/waveform`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/voices/pvc/{voice_id}/samples/{sample_id}/waveform.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Waveform = Waveform;
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/speakers/resources/audio/client/Client.js
var require_Client11 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/speakers/resources/audio/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Audio = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Audio = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Retrieve the separated audio for a specific speaker.
       *
       * @param {string} voiceId - Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
       * @param {string} sampleId - Sample ID to be used
       * @param {string} speakerId - Speaker ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id}/samples/{sample_id}/speakers to list all the available speakers for a sample.
       * @param {Audio.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.pvc.samples.speakers.audio.get("21m00Tcm4TlvDq8ikWAM", "VW7YKqPnjY4h39yTbx2L", "VW7YKqPnjY4h39yTbx2L")
       */
      get(voiceId, sampleId, speakerId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/pvc/${encodeURIComponent(voiceId)}/samples/${encodeURIComponent(sampleId)}/speakers/${encodeURIComponent(speakerId)}/audio`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/voices/pvc/{voice_id}/samples/{sample_id}/speakers/{speaker_id}/audio.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Audio = Audio;
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/speakers/client/Client.js
var require_Client12 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/resources/speakers/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Speakers = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Client_1 = require_Client11();
    var Speakers = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      get audio() {
        var _a;
        return (_a = this._audio) !== null && _a !== void 0 ? _a : this._audio = new Client_1.Audio(this._options);
      }
      /**
       * Retrieve the status of the speaker separation process and the list of detected speakers if complete.
       *
       * @param {string} voiceId - Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
       * @param {string} sampleId - Sample ID to be used
       * @param {Speakers.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.pvc.samples.speakers.get("21m00Tcm4TlvDq8ikWAM", "VW7YKqPnjY4h39yTbx2L")
       */
      get(voiceId, sampleId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/pvc/${encodeURIComponent(voiceId)}/samples/${encodeURIComponent(sampleId)}/speakers`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/voices/pvc/{voice_id}/samples/{sample_id}/speakers.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Start speaker separation process for a sample
       *
       * @param {string} voiceId - Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
       * @param {string} sampleId - Sample ID to be used
       * @param {Speakers.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.pvc.samples.speakers.separate("21m00Tcm4TlvDq8ikWAM", "VW7YKqPnjY4h39yTbx2L")
       */
      separate(voiceId, sampleId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/pvc/${encodeURIComponent(voiceId)}/samples/${encodeURIComponent(sampleId)}/separate-speakers`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/voices/pvc/{voice_id}/samples/{sample_id}/separate-speakers.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Speakers = Speakers;
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/client/Client.js
var require_Client13 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/samples/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Samples = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Client_1 = require_Client9();
    var Client_2 = require_Client10();
    var Client_3 = require_Client12();
    var Samples = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      get audio() {
        var _a;
        return (_a = this._audio) !== null && _a !== void 0 ? _a : this._audio = new Client_1.Audio(this._options);
      }
      get waveform() {
        var _a;
        return (_a = this._waveform) !== null && _a !== void 0 ? _a : this._waveform = new Client_2.Waveform(this._options);
      }
      get speakers() {
        var _a;
        return (_a = this._speakers) !== null && _a !== void 0 ? _a : this._speakers = new Client_3.Speakers(this._options);
      }
      /**
       * Add audio samples to a PVC voice
       *
       * @param {string} voiceId
       * @param {ElevenLabs.voices.pvc.BodyAddSamplesToPvcVoiceV1VoicesPvcVoiceIdSamplesPost} request
       * @param {Samples.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.pvc.samples.create("21m00Tcm4TlvDq8ikWAM", {
       *         files: [fs.createReadStream("/path/to/your/file")]
       *     })
       */
      create(voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _request = yield core.newFormData();
          for (const _file of request.files) {
            yield _request.appendFile("files", _file);
          }
          if (request.remove_background_noise != null) {
            _request.append("remove_background_noise", request.remove_background_noise.toString());
          }
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/pvc/${encodeURIComponent(voiceId)}/samples`),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/voices/pvc/{voice_id}/samples.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Update a PVC voice sample - apply noise removal, or select speaker.
       *
       * @param {string} voiceId - Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
       * @param {string} sampleId - Sample ID to be used
       * @param {ElevenLabs.voices.pvc.BodyUpdatePvcVoiceSampleV1VoicesPvcVoiceIdSamplesSampleIdPost} request
       * @param {Samples.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.pvc.samples.update("21m00Tcm4TlvDq8ikWAM", "VW7YKqPnjY4h39yTbx2L")
       */
      update(voiceId_1, sampleId_1) {
        return __awaiter(this, arguments, void 0, function* (voiceId, sampleId, request = {}, requestOptions) {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/pvc/${encodeURIComponent(voiceId)}/samples/${encodeURIComponent(sampleId)}`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/voices/pvc/{voice_id}/samples/{sample_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Delete a sample from a PVC voice.
       *
       * @param {string} voiceId - Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
       * @param {string} sampleId - Sample ID to be used
       * @param {Samples.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.pvc.samples.delete("21m00Tcm4TlvDq8ikWAM", "VW7YKqPnjY4h39yTbx2L")
       */
      delete(voiceId, sampleId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/pvc/${encodeURIComponent(voiceId)}/samples/${encodeURIComponent(sampleId)}`),
            method: "DELETE",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/voices/pvc/{voice_id}/samples/{sample_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Samples = Samples;
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/verification/resources/captcha/client/Client.js
var require_Client14 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/verification/resources/captcha/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Captcha = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Captcha = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Get captcha for PVC voice verification.
       *
       * @param {string} voiceId - Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
       * @param {Captcha.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.pvc.verification.captcha.get("21m00Tcm4TlvDq8ikWAM")
       */
      get(voiceId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/pvc/${encodeURIComponent(voiceId)}/captcha`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/voices/pvc/{voice_id}/captcha.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Submit captcha verification for PVC voice.
       *
       * @param {string} voiceId
       * @param {ElevenLabs.voices.pvc.verification.BodyVerifyPvcVoiceCaptchaV1VoicesPvcVoiceIdCaptchaPost} request
       * @param {Captcha.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.pvc.verification.captcha.verify("21m00Tcm4TlvDq8ikWAM", {
       *         recording: fs.createReadStream("/path/to/your/file")
       *     })
       */
      verify(voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _request = yield core.newFormData();
          yield _request.appendFile("recording", request.recording);
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/pvc/${encodeURIComponent(voiceId)}/captcha`),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/voices/pvc/{voice_id}/captcha.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Captcha = Captcha;
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/verification/client/Client.js
var require_Client15 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/resources/verification/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Verification = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Client_1 = require_Client14();
    var Verification = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      get captcha() {
        var _a;
        return (_a = this._captcha) !== null && _a !== void 0 ? _a : this._captcha = new Client_1.Captcha(this._options);
      }
      /**
       * Request manual verification for a PVC voice.
       *
       * @param {string} voiceId
       * @param {ElevenLabs.voices.pvc.BodyRequestManualVerificationV1VoicesPvcVoiceIdVerificationPost} request
       * @param {Verification.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.pvc.verification.request("21m00Tcm4TlvDq8ikWAM", {
       *         files: [fs.createReadStream("/path/to/your/file")]
       *     })
       */
      request(voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _request = yield core.newFormData();
          for (const _file of request.files) {
            yield _request.appendFile("files", _file);
          }
          if (request.extra_text != null) {
            _request.append("extra_text", request.extra_text);
          }
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/pvc/${encodeURIComponent(voiceId)}/verification`),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/voices/pvc/{voice_id}/verification.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Verification = Verification;
  }
});

// node_modules/elevenlabs/api/resources/voices/resources/pvc/client/Client.js
var require_Client16 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/resources/pvc/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Pvc = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Client_1 = require_Client13();
    var Client_2 = require_Client15();
    var Pvc = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      get samples() {
        var _a;
        return (_a = this._samples) !== null && _a !== void 0 ? _a : this._samples = new Client_1.Samples(this._options);
      }
      get verification() {
        var _a;
        return (_a = this._verification) !== null && _a !== void 0 ? _a : this._verification = new Client_2.Verification(this._options);
      }
      /**
       * Creates a new PVC voice with metadata but no samples
       *
       * @param {ElevenLabs.voices.CreatePvcVoiceRequest} request
       * @param {Pvc.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.pvc.create({
       *         name: "John Smith",
       *         language: "en"
       *     })
       */
      create(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/voices/pvc"),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/voices/pvc.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Edit PVC voice metadata
       *
       * @param {string} voiceId - Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
       * @param {ElevenLabs.voices.BodyEditPvcVoiceV1VoicesPvcVoiceIdPost} request
       * @param {Pvc.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.pvc.update("21m00Tcm4TlvDq8ikWAM")
       */
      update(voiceId_1) {
        return __awaiter(this, arguments, void 0, function* (voiceId, request = {}, requestOptions) {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/pvc/${encodeURIComponent(voiceId)}`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/voices/pvc/{voice_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Start PVC training process for a voice.
       *
       * @param {string} voiceId - Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
       * @param {ElevenLabs.voices.BodyRunPvcTrainingV1VoicesPvcVoiceIdTrainPost} request
       * @param {Pvc.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.pvc.train("21m00Tcm4TlvDq8ikWAM")
       */
      train(voiceId_1) {
        return __awaiter(this, arguments, void 0, function* (voiceId, request = {}, requestOptions) {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/pvc/${encodeURIComponent(voiceId)}/train`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/voices/pvc/{voice_id}/train.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Pvc = Pvc;
  }
});

// node_modules/elevenlabs/api/resources/voices/client/Client.js
var require_Client17 = __commonJS({
  "node_modules/elevenlabs/api/resources/voices/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Voices = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Client_1 = require_Client16();
    var Voices = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      get pvc() {
        var _a;
        return (_a = this._pvc) !== null && _a !== void 0 ? _a : this._pvc = new Client_1.Pvc(this._options);
      }
      /**
       * Returns a list of all available voices for a user.
       *
       * @param {ElevenLabs.VoicesGetAllRequest} request
       * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.getAll()
       */
      getAll() {
        return __awaiter(this, arguments, void 0, function* (request = {}, requestOptions) {
          var _a, _b;
          const { show_legacy: showLegacy } = request;
          const _queryParams = {};
          if (showLegacy != null) {
            _queryParams["show_legacy"] = showLegacy.toString();
          }
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/voices"),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/voices.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Gets a list of all available voices for a user with search, filtering and pagination.
       *
       * @param {ElevenLabs.VoicesSearchRequest} request
       * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.search({
       *         include_total_count: true
       *     })
       */
      search() {
        return __awaiter(this, arguments, void 0, function* (request = {}, requestOptions) {
          var _a, _b;
          const { next_page_token: nextPageToken, page_size: pageSize, search, sort, sort_direction: sortDirection, voice_type: voiceType, category, fine_tuning_state: fineTuningState, collection_id: collectionId, include_total_count: includeTotalCount } = request;
          const _queryParams = {};
          if (nextPageToken != null) {
            _queryParams["next_page_token"] = nextPageToken;
          }
          if (pageSize != null) {
            _queryParams["page_size"] = pageSize.toString();
          }
          if (search != null) {
            _queryParams["search"] = search;
          }
          if (sort != null) {
            _queryParams["sort"] = sort;
          }
          if (sortDirection != null) {
            _queryParams["sort_direction"] = sortDirection;
          }
          if (voiceType != null) {
            _queryParams["voice_type"] = voiceType;
          }
          if (category != null) {
            _queryParams["category"] = category;
          }
          if (fineTuningState != null) {
            _queryParams["fine_tuning_state"] = fineTuningState;
          }
          if (collectionId != null) {
            _queryParams["collection_id"] = collectionId;
          }
          if (includeTotalCount != null) {
            _queryParams["include_total_count"] = includeTotalCount.toString();
          }
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v2/voices"),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v2/voices.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Gets the default settings for voices. "similarity_boost" corresponds to"Clarity + Similarity Enhancement" in the web app and "stability" corresponds to "Stability" slider in the web app.
       *
       * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @example
       *     await client.voices.getDefaultSettings()
       */
      getDefaultSettings(requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/voices/settings/default"),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            throw new errors.ElevenLabsError({
              statusCode: _response.error.statusCode,
              body: _response.error.body
            });
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/voices/settings/default.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Returns the settings for a specific voice. "similarity_boost" corresponds to"Clarity + Similarity Enhancement" in the web app and "stability" corresponds to "Stability" slider in the web app.
       *
       * @param {string} voiceId - Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
       * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.getSettings("21m00Tcm4TlvDq8ikWAM")
       */
      getSettings(voiceId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/${encodeURIComponent(voiceId)}/settings`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/voices/{voice_id}/settings.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Returns metadata about a specific voice.
       *
       * @param {string} voiceId - ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/search) endpoint list all the available voices.
       * @param {ElevenLabs.VoicesGetRequest} request
       * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.get("21m00Tcm4TlvDq8ikWAM")
       */
      get(voiceId_1) {
        return __awaiter(this, arguments, void 0, function* (voiceId, request = {}, requestOptions) {
          var _a, _b;
          const { with_settings: withSettings } = request;
          const _queryParams = {};
          if (withSettings != null) {
            _queryParams["with_settings"] = withSettings.toString();
          }
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/${encodeURIComponent(voiceId)}`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/voices/{voice_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Deletes a voice by its ID.
       *
       * @param {string} voiceId - ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/search) endpoint list all the available voices.
       * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.delete("21m00Tcm4TlvDq8ikWAM")
       */
      delete(voiceId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/${encodeURIComponent(voiceId)}`),
            method: "DELETE",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/voices/{voice_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Edit your settings for a specific voice. "similarity_boost" corresponds to "Clarity + Similarity Enhancement" in the web app and "stability" corresponds to "Stability" slider in the web app.
       *
       * @param {string} voiceId - ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/search) endpoint list all the available voices.
       * @param {ElevenLabs.VoiceSettings} request
       * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.editSettings("21m00Tcm4TlvDq8ikWAM", {
       *         stability: 1,
       *         similarity_boost: 1,
       *         style: 0,
       *         use_speaker_boost: true,
       *         speed: 1
       *     })
       */
      editSettings(voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/${encodeURIComponent(voiceId)}/settings/edit`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/voices/{voice_id}/settings/edit.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Create a voice clone and add it to your Voices
       *
       * @param {ElevenLabs.BodyAddVoiceV1VoicesAddPost} request
       * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.add({
       *         files: [fs.createReadStream("/path/to/your/file")],
       *         name: "name"
       *     })
       */
      add(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _request = yield core.newFormData();
          _request.append("name", request.name);
          for (const _file of request.files) {
            yield _request.appendFile("files", _file);
          }
          if (request.remove_background_noise != null) {
            _request.append("remove_background_noise", request.remove_background_noise.toString());
          }
          if (request.description != null) {
            _request.append("description", request.description);
          }
          if (request.labels != null) {
            _request.append("labels", request.labels);
          }
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/voices/add"),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/voices/add.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Edit a voice created by you.
       *
       * @param {string} voiceId
       * @param {ElevenLabs.BodyEditVoiceV1VoicesVoiceIdEditPost} request
       * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.edit("21m00Tcm4TlvDq8ikWAM", {
       *         name: "name"
       *     })
       */
      edit(voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _request = yield core.newFormData();
          _request.append("name", request.name);
          if (request.files != null) {
            for (const _file of request.files) {
              yield _request.appendFile("files", _file);
            }
          }
          if (request.remove_background_noise != null) {
            _request.append("remove_background_noise", request.remove_background_noise.toString());
          }
          if (request.description != null) {
            _request.append("description", request.description);
          }
          if (request.labels != null) {
            _request.append("labels", request.labels);
          }
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/${encodeURIComponent(voiceId)}/edit`),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/voices/{voice_id}/edit.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Add a shared voice to your collection of Voices
       *
       * @param {string} publicUserId - Public user ID used to publicly identify ElevenLabs users.
       * @param {string} voiceId - ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/search) endpoint list all the available voices.
       * @param {ElevenLabs.BodyAddSharedVoiceV1VoicesAddPublicUserIdVoiceIdPost} request
       * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.addSharingVoice("63e06b7e7cafdc46be4d2e0b3f045940231ae058d508589653d74d1265a574ca", "21m00Tcm4TlvDq8ikWAM", {
       *         new_name: "John Smith"
       *     })
       */
      addSharingVoice(publicUserId, voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/voices/add/${encodeURIComponent(publicUserId)}/${encodeURIComponent(voiceId)}`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/voices/add/{public_user_id}/{voice_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Retrieves a list of shared voices.
       *
       * @param {ElevenLabs.VoicesGetSharedRequest} request
       * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.getShared({
       *         featured: true,
       *         reader_app_enabled: true
       *     })
       */
      getShared() {
        return __awaiter(this, arguments, void 0, function* (request = {}, requestOptions) {
          var _a, _b;
          const { page_size: pageSize, category, gender, age, accent, language, locale, search, use_cases: useCases, descriptives, featured, min_notice_period_days: minNoticePeriodDays, include_custom_rates: includeCustomRates, reader_app_enabled: readerAppEnabled, owner_id: ownerId, sort, page } = request;
          const _queryParams = {};
          if (pageSize != null) {
            _queryParams["page_size"] = pageSize.toString();
          }
          if (category != null) {
            _queryParams["category"] = category;
          }
          if (gender != null) {
            _queryParams["gender"] = gender;
          }
          if (age != null) {
            _queryParams["age"] = age;
          }
          if (accent != null) {
            _queryParams["accent"] = accent;
          }
          if (language != null) {
            _queryParams["language"] = language;
          }
          if (locale != null) {
            _queryParams["locale"] = locale;
          }
          if (search != null) {
            _queryParams["search"] = search;
          }
          if (useCases != null) {
            if (Array.isArray(useCases)) {
              _queryParams["use_cases"] = useCases.map((item) => item);
            } else {
              _queryParams["use_cases"] = useCases;
            }
          }
          if (descriptives != null) {
            if (Array.isArray(descriptives)) {
              _queryParams["descriptives"] = descriptives.map((item) => item);
            } else {
              _queryParams["descriptives"] = descriptives;
            }
          }
          if (featured != null) {
            _queryParams["featured"] = featured.toString();
          }
          if (minNoticePeriodDays != null) {
            _queryParams["min_notice_period_days"] = minNoticePeriodDays.toString();
          }
          if (includeCustomRates != null) {
            _queryParams["include_custom_rates"] = includeCustomRates.toString();
          }
          if (readerAppEnabled != null) {
            _queryParams["reader_app_enabled"] = readerAppEnabled.toString();
          }
          if (ownerId != null) {
            _queryParams["owner_id"] = ownerId;
          }
          if (sort != null) {
            _queryParams["sort"] = sort;
          }
          if (page != null) {
            _queryParams["page"] = page.toString();
          }
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/shared-voices"),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/shared-voices.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Returns a list of shared voices similar to the provided audio sample. If neither similarity_threshold nor top_k is provided, we will apply default values.
       *
       * @param {ElevenLabs.BodyGetSimilarLibraryVoicesV1SimilarVoicesPost} request
       * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.voices.getSimilarLibraryVoices({})
       */
      getSimilarLibraryVoices(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _request = yield core.newFormData();
          if (request.audio_file != null) {
            yield _request.appendFile("audio_file", request.audio_file);
          }
          if (request.similarity_threshold != null) {
            _request.append("similarity_threshold", request.similarity_threshold.toString());
          }
          if (request.top_k != null) {
            _request.append("top_k", request.top_k.toString());
          }
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/similar-voices"),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/similar-voices.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Voices = Voices;
  }
});

// node_modules/elevenlabs/api/resources/studio/resources/projects/client/Client.js
var require_Client18 = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/resources/projects/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Projects = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Projects = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Returns a list of your Studio projects with metadata.
       *
       * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.studio.projects.getAll()
       */
      getAll(requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/studio/projects"),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/studio/projects.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Creates a new Studio project, it can be either initialized as blank, from a document or from a URL.
       *
       * @param {ElevenLabs.studio.BodyCreateStudioProjectV1StudioProjectsPost} request
       * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.studio.projects.add({
       *         name: "name",
       *         default_title_voice_id: "default_title_voice_id",
       *         default_paragraph_voice_id: "default_paragraph_voice_id",
       *         default_model_id: "default_model_id"
       *     })
       */
      add(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _request = yield core.newFormData();
          _request.append("name", request.name);
          _request.append("default_title_voice_id", request.default_title_voice_id);
          _request.append("default_paragraph_voice_id", request.default_paragraph_voice_id);
          _request.append("default_model_id", request.default_model_id);
          if (request.from_url != null) {
            _request.append("from_url", request.from_url);
          }
          if (request.from_document != null) {
            yield _request.appendFile("from_document", request.from_document);
          }
          if (request.quality_preset != null) {
            _request.append("quality_preset", request.quality_preset);
          }
          if (request.title != null) {
            _request.append("title", request.title);
          }
          if (request.author != null) {
            _request.append("author", request.author);
          }
          if (request.description != null) {
            _request.append("description", request.description);
          }
          if (request.genres != null) {
            for (const _item of request.genres) {
              _request.append("genres", _item);
            }
          }
          if (request.target_audience != null) {
            _request.append("target_audience", request.target_audience);
          }
          if (request.language != null) {
            _request.append("language", request.language);
          }
          if (request.content_type != null) {
            _request.append("content_type", request.content_type);
          }
          if (request.original_publication_date != null) {
            _request.append("original_publication_date", request.original_publication_date);
          }
          if (request.mature_content != null) {
            _request.append("mature_content", request.mature_content.toString());
          }
          if (request.isbn_number != null) {
            _request.append("isbn_number", request.isbn_number);
          }
          if (request.acx_volume_normalization != null) {
            _request.append("acx_volume_normalization", request.acx_volume_normalization.toString());
          }
          if (request.volume_normalization != null) {
            _request.append("volume_normalization", request.volume_normalization.toString());
          }
          if (request.pronunciation_dictionary_locators != null) {
            for (const _item of request.pronunciation_dictionary_locators) {
              _request.append("pronunciation_dictionary_locators", _item);
            }
          }
          if (request.callback_url != null) {
            _request.append("callback_url", request.callback_url);
          }
          if (request.fiction != null) {
            _request.append("fiction", request.fiction);
          }
          if (request.apply_text_normalization != null) {
            _request.append("apply_text_normalization", request.apply_text_normalization);
          }
          if (request.auto_convert != null) {
            _request.append("auto_convert", request.auto_convert.toString());
          }
          if (request.auto_assign_voices != null) {
            _request.append("auto_assign_voices", request.auto_assign_voices.toString());
          }
          if (request.source_type != null) {
            _request.append("source_type", request.source_type);
          }
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/studio/projects"),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Returns information about a specific Studio project. This endpoint returns more detailed information about a project than `GET /v1/studio`.
       *
       * @param {string} projectId - The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
       * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.studio.projects.get("21m00Tcm4TlvDq8ikWAM")
       */
      get(projectId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/studio/projects/${encodeURIComponent(projectId)}`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/studio/projects/{project_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Updates the specified Studio project by setting the values of the parameters passed.
       *
       * @param {string} projectId - The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
       * @param {ElevenLabs.studio.BodyUpdateStudioProjectV1StudioProjectsProjectIdPost} request
       * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.studio.projects.updateMetadata("21m00Tcm4TlvDq8ikWAM", {
       *         name: "Project 1",
       *         default_title_voice_id: "21m00Tcm4TlvDq8ikWAM",
       *         default_paragraph_voice_id: "21m00Tcm4TlvDq8ikWAM"
       *     })
       */
      updateMetadata(projectId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/studio/projects/${encodeURIComponent(projectId)}`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects/{project_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Deletes a Studio project.
       *
       * @param {string} projectId - The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
       * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.studio.projects.delete("21m00Tcm4TlvDq8ikWAM")
       */
      delete(projectId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/studio/projects/${encodeURIComponent(projectId)}`),
            method: "DELETE",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/studio/projects/{project_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Updates Studio project content.
       *
       * @param {string} projectId
       * @param {ElevenLabs.studio.BodyUpdateStudioProjectContentV1StudioProjectsProjectIdContentPost} request
       * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.studio.projects.updateContent("21m00Tcm4TlvDq8ikWAM", {})
       */
      updateContent(projectId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _request = yield core.newFormData();
          if (request.from_url != null) {
            _request.append("from_url", request.from_url);
          }
          if (request.from_document != null) {
            yield _request.appendFile("from_document", request.from_document);
          }
          if (request.auto_convert != null) {
            _request.append("auto_convert", request.auto_convert.toString());
          }
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/studio/projects/${encodeURIComponent(projectId)}/content`),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects/{project_id}/content.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Starts conversion of a Studio project and all of its chapters.
       *
       * @param {string} projectId - The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
       * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.studio.projects.convert("21m00Tcm4TlvDq8ikWAM")
       */
      convert(projectId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/studio/projects/${encodeURIComponent(projectId)}/convert`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects/{project_id}/convert.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Retrieves a list of snapshots for a Studio project.
       *
       * @param {string} projectId - The ID of the Studio project.
       * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.studio.projects.getSnapshots("21m00Tcm4TlvDq8ikWAM")
       */
      getSnapshots(projectId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/studio/projects/${encodeURIComponent(projectId)}/snapshots`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/studio/projects/{project_id}/snapshots.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Returns the project snapshot.
       *
       * @param {string} projectId - The ID of the Studio project.
       * @param {string} projectSnapshotId - The ID of the Studio project snapshot.
       * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.studio.projects.getProjectSnapshot("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
       */
      getProjectSnapshot(projectId, projectSnapshotId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/studio/projects/${encodeURIComponent(projectId)}/snapshots/${encodeURIComponent(projectSnapshotId)}`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Stream the audio from a Studio project snapshot.
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       */
      streamAudio(projectId_1, projectSnapshotId_1) {
        return __awaiter(this, arguments, void 0, function* (projectId, projectSnapshotId, request = {}, requestOptions) {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/studio/projects/${encodeURIComponent(projectId)}/snapshots/${encodeURIComponent(projectSnapshotId)}/stream`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            responseType: "streaming",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}/stream.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Returns a compressed archive of the Studio project's audio.
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       */
      streamArchive(projectId, projectSnapshotId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/studio/projects/${encodeURIComponent(projectId)}/snapshots/${encodeURIComponent(projectSnapshotId)}/archive`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            responseType: "streaming",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}/archive.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Create a set of pronunciation dictionaries acting on a project. This will automatically mark text within this project as requiring reconverting where the new dictionary would apply or the old one no longer does.
       *
       * @param {string} projectId - The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
       * @param {ElevenLabs.studio.BodyCreatePronunciationDictionariesV1StudioProjectsProjectIdPronunciationDictionariesPost} request
       * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.studio.projects.updatePronunciationDictionaries("21m00Tcm4TlvDq8ikWAM", {
       *         pronunciation_dictionary_locators: [{
       *                 pronunciation_dictionary_id: "pronunciation_dictionary_id"
       *             }]
       *     })
       */
      updatePronunciationDictionaries(projectId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/studio/projects/${encodeURIComponent(projectId)}/pronunciation-dictionaries`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects/{project_id}/pronunciation-dictionaries.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Projects = Projects;
  }
});

// node_modules/elevenlabs/api/resources/studio/resources/chapters/client/Client.js
var require_Client19 = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/resources/chapters/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Chapters = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Chapters = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Returns a list of a Studio project's chapters.
       *
       * @param {string} projectId - The ID of the Studio project.
       * @param {Chapters.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.studio.chapters.getAll("21m00Tcm4TlvDq8ikWAM")
       */
      getAll(projectId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/studio/projects/${encodeURIComponent(projectId)}/chapters`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/studio/projects/{project_id}/chapters.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Creates a new chapter either as blank or from a URL.
       *
       * @param {string} projectId - The ID of the Studio project.
       * @param {ElevenLabs.studio.BodyCreateChapterV1StudioProjectsProjectIdChaptersPost} request
       * @param {Chapters.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.studio.chapters.create("21m00Tcm4TlvDq8ikWAM", {
       *         name: "Chapter 1"
       *     })
       */
      create(projectId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/studio/projects/${encodeURIComponent(projectId)}/chapters`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects/{project_id}/chapters.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Returns information about a specific chapter.
       *
       * @param {string} projectId - The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
       * @param {string} chapterId - The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.
       * @param {Chapters.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.studio.chapters.get("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
       */
      get(projectId, chapterId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/studio/projects/${encodeURIComponent(projectId)}/chapters/${encodeURIComponent(chapterId)}`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/studio/projects/{project_id}/chapters/{chapter_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Updates a chapter.
       *
       * @param {string} projectId - The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
       * @param {string} chapterId - The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.
       * @param {ElevenLabs.studio.BodyUpdateChapterV1StudioProjectsProjectIdChaptersChapterIdPost} request
       * @param {Chapters.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.studio.chapters.edit("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
       */
      edit(projectId_1, chapterId_1) {
        return __awaiter(this, arguments, void 0, function* (projectId, chapterId, request = {}, requestOptions) {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/studio/projects/${encodeURIComponent(projectId)}/chapters/${encodeURIComponent(chapterId)}`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects/{project_id}/chapters/{chapter_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Deletes a chapter.
       *
       * @param {string} projectId - The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
       * @param {string} chapterId - The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.
       * @param {Chapters.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.studio.chapters.delete("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
       */
      delete(projectId, chapterId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/studio/projects/${encodeURIComponent(projectId)}/chapters/${encodeURIComponent(chapterId)}`),
            method: "DELETE",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/studio/projects/{project_id}/chapters/{chapter_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Starts conversion of a specific chapter.
       *
       * @param {string} projectId - The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
       * @param {string} chapterId - The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.
       * @param {Chapters.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.studio.chapters.convert("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
       */
      convert(projectId, chapterId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/studio/projects/${encodeURIComponent(projectId)}/chapters/${encodeURIComponent(chapterId)}/convert`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects/{project_id}/chapters/{chapter_id}/convert.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Gets information about all the snapshots of a chapter. Each snapshot can be downloaded as audio. Whenever a chapter is converted a snapshot will automatically be created.
       *
       * @param {string} projectId - The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
       * @param {string} chapterId - The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.
       * @param {Chapters.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.studio.chapters.getAllSnapshots("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
       */
      getAllSnapshots(projectId, chapterId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/studio/projects/${encodeURIComponent(projectId)}/chapters/${encodeURIComponent(chapterId)}/snapshots`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Returns the chapter snapshot.
       *
       * @param {string} projectId - The ID of the Studio project.
       * @param {string} chapterId - The ID of the chapter.
       * @param {string} chapterSnapshotId - The ID of the chapter snapshot.
       * @param {Chapters.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.studio.chapters.getChapterSnapshot("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
       */
      getChapterSnapshot(projectId, chapterId, chapterSnapshotId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/studio/projects/${encodeURIComponent(projectId)}/chapters/${encodeURIComponent(chapterId)}/snapshots/${encodeURIComponent(chapterSnapshotId)}`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots/{chapter_snapshot_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Stream the audio from a chapter snapshot. Use `GET /v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots` to return the snapshots of a chapter.
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       */
      streamSnapshot(projectId_1, chapterId_1, chapterSnapshotId_1) {
        return __awaiter(this, arguments, void 0, function* (projectId, chapterId, chapterSnapshotId, request = {}, requestOptions) {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/studio/projects/${encodeURIComponent(projectId)}/chapters/${encodeURIComponent(chapterId)}/snapshots/${encodeURIComponent(chapterSnapshotId)}/stream`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            responseType: "streaming",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots/{chapter_snapshot_id}/stream.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Chapters = Chapters;
  }
});

// node_modules/elevenlabs/api/resources/studio/client/Client.js
var require_Client20 = __commonJS({
  "node_modules/elevenlabs/api/resources/studio/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Studio = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Client_1 = require_Client18();
    var Client_2 = require_Client19();
    var Studio = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      get projects() {
        var _a;
        return (_a = this._projects) !== null && _a !== void 0 ? _a : this._projects = new Client_1.Projects(this._options);
      }
      get chapters() {
        var _a;
        return (_a = this._chapters) !== null && _a !== void 0 ? _a : this._chapters = new Client_2.Chapters(this._options);
      }
      /**
       * Create and auto-convert a podcast project. Currently, the LLM cost is covered by us but you will still be charged for the audio generation. In the future, you will be charged for both the LLM and audio generation costs.
       *
       * @param {ElevenLabs.BodyCreatePodcastV1StudioPodcastsPost} request
       * @param {Studio.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.studio.createPodcast({
       *         model_id: "21m00Tcm4TlvDq8ikWAM",
       *         mode: {
       *             type: "conversation",
       *             conversation: {
       *                 host_voice_id: "aw1NgEzBg83R7vgmiJt6",
       *                 guest_voice_id: "aw1NgEzBg83R7vgmiJt7"
       *             }
       *         },
       *         source: {
       *             text: "This is a test podcast."
       *         }
       *     })
       */
      createPodcast(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/studio/podcasts"),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/podcasts.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Studio = Studio;
  }
});

// node_modules/elevenlabs/api/resources/dubbing/resources/speaker/resources/segment/client/Client.js
var require_Client21 = __commonJS({
  "node_modules/elevenlabs/api/resources/dubbing/resources/speaker/resources/segment/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Segment = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Segment = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Creates a new segment in dubbing resource with a start and end time for the speaker in every available language. Does not automatically generate transcripts/translations/audio.
       *
       * @param {string} dubbingId - ID of the dubbing project.
       * @param {string} speakerId - ID of the speaker.
       * @param {ElevenLabs.dubbing.speaker.SegmentCreatePayload} request
       * @param {Segment.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.dubbing.speaker.segment.create("dubbing_id", "speaker_id", {
       *         start_time: 1.1,
       *         end_time: 1.1
       *     })
       */
      create(dubbingId, speakerId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/dubbing/resource/${encodeURIComponent(dubbingId)}/speaker/${encodeURIComponent(speakerId)}/segment`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/dubbing/resource/{dubbing_id}/speaker/{speaker_id}/segment.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Segment = Segment;
  }
});

// node_modules/elevenlabs/api/resources/dubbing/resources/speaker/client/Client.js
var require_Client22 = __commonJS({
  "node_modules/elevenlabs/api/resources/dubbing/resources/speaker/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Speaker = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Client_1 = require_Client21();
    var Speaker = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      get segment() {
        var _a;
        return (_a = this._segment) !== null && _a !== void 0 ? _a : this._segment = new Client_1.Segment(this._options);
      }
      /**
       * Amend the metadata associated with a speaker, such as their voice. Both voice cloning and using voices from the ElevenLabs library are supported.
       *
       * @param {string} dubbingId - ID of the dubbing project.
       * @param {string} speakerId - ID of the speaker.
       * @param {ElevenLabs.dubbing.BodyUpdateMetadataForASpeakerV1DubbingResourceDubbingIdSpeakerSpeakerIdPatch} request
       * @param {Speaker.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.dubbing.speaker.update("dubbing_id", "speaker_id")
       */
      update(dubbingId_1, speakerId_1) {
        return __awaiter(this, arguments, void 0, function* (dubbingId, speakerId, request = {}, requestOptions) {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/dubbing/resource/${encodeURIComponent(dubbingId)}/speaker/${encodeURIComponent(speakerId)}`),
            method: "PATCH",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling PATCH /v1/dubbing/resource/{dubbing_id}/speaker/{speaker_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Fetch the top 10 similar voices to a speaker, including the voice IDs, names, descriptions, and, where possible, a sample audio recording.
       *
       * @param {string} dubbingId - ID of the dubbing project.
       * @param {string} speakerId - ID of the speaker.
       * @param {Speaker.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.dubbing.speaker.similarVoices("dubbing_id", "speaker_id")
       */
      similarVoices(dubbingId, speakerId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/dubbing/resource/${encodeURIComponent(dubbingId)}/speaker/${encodeURIComponent(speakerId)}/similar-voices`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/dubbing/resource/{dubbing_id}/speaker/{speaker_id}/similar-voices.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Speaker = Speaker;
  }
});

// node_modules/elevenlabs/api/resources/dubbing/client/Client.js
var require_Client23 = __commonJS({
  "node_modules/elevenlabs/api/resources/dubbing/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Dubbing = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Client_1 = require_Client22();
    var Dubbing = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      get speaker() {
        var _a;
        return (_a = this._speaker) !== null && _a !== void 0 ? _a : this._speaker = new Client_1.Speaker(this._options);
      }
      /**
       * Given a dubbing ID generated from the '/v1/dubbing' endpoint with studio enabled, returns the dubbing resource.
       *
       * @param {string} dubbingId - ID of the dubbing project.
       * @param {Dubbing.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.dubbing.getDubbingResource("dubbing_id")
       */
      getDubbingResource(dubbingId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/dubbing/resource/${encodeURIComponent(dubbingId)}`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/dubbing/resource/{dubbing_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Adds the given ElevenLab Turbo V2/V2.5 language code to the resource. Does not automatically generate transcripts/translations/audio.
       *
       * @param {string} dubbingId - ID of the dubbing project.
       * @param {ElevenLabs.BodyAddALanguageToTheResourceV1DubbingResourceDubbingIdLanguagePost} request
       * @param {Dubbing.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.dubbing.addLanguageToResource("dubbing_id")
       */
      addLanguageToResource(dubbingId_1) {
        return __awaiter(this, arguments, void 0, function* (dubbingId, request = {}, requestOptions) {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/dubbing/resource/${encodeURIComponent(dubbingId)}/language`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/dubbing/resource/{dubbing_id}/language.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Modifies a single segment with new text and/or start/end times. Will update the values for only a specific language of a segment. Does not automatically regenerate the dub.
       *
       * @param {string} dubbingId - ID of the dubbing project.
       * @param {string} segmentId - ID of the segment
       * @param {string} language - ID of the language.
       * @param {ElevenLabs.SegmentUpdatePayload} request
       * @param {Dubbing.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.dubbing.updateSegmentLanguage("dubbing_id", "segment_id", "language")
       */
      updateSegmentLanguage(dubbingId_1, segmentId_1, language_1) {
        return __awaiter(this, arguments, void 0, function* (dubbingId, segmentId, language, request = {}, requestOptions) {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/dubbing/resource/${encodeURIComponent(dubbingId)}/segment/${encodeURIComponent(segmentId)}/${encodeURIComponent(language)}`),
            method: "PATCH",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling PATCH /v1/dubbing/resource/{dubbing_id}/segment/{segment_id}/{language}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Deletes a single segment from the dubbing.
       *
       * @param {string} dubbingId - ID of the dubbing project.
       * @param {string} segmentId - ID of the segment
       * @param {Dubbing.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.dubbing.deleteSegment("dubbing_id", "segment_id")
       */
      deleteSegment(dubbingId, segmentId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/dubbing/resource/${encodeURIComponent(dubbingId)}/segment/${encodeURIComponent(segmentId)}`),
            method: "DELETE",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/dubbing/resource/{dubbing_id}/segment/{segment_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Regenerate the transcriptions for the specified segments. Does not automatically regenerate translations or dubs.
       *
       * @param {string} dubbingId - ID of the dubbing project.
       * @param {ElevenLabs.BodyTranscribesSegmentsV1DubbingResourceDubbingIdTranscribePost} request
       * @param {Dubbing.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.dubbing.transcribeSegments("dubbing_id", {
       *         segments: ["segments"]
       *     })
       */
      transcribeSegments(dubbingId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/dubbing/resource/${encodeURIComponent(dubbingId)}/transcribe`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/dubbing/resource/{dubbing_id}/transcribe.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Regenerate the translations for either the entire resource or the specified segments/languages. Will automatically transcribe missing transcriptions. Will not automatically regenerate the dubs.
       *
       * @param {string} dubbingId - ID of the dubbing project.
       * @param {ElevenLabs.BodyTranslatesAllOrSomeSegmentsAndLanguagesV1DubbingResourceDubbingIdTranslatePost} request
       * @param {Dubbing.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.dubbing.translateSegments("dubbing_id", {
       *         segments: ["segments"]
       *     })
       */
      translateSegments(dubbingId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/dubbing/resource/${encodeURIComponent(dubbingId)}/translate`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/dubbing/resource/{dubbing_id}/translate.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Regenerate the dubs for either the entire resource or the specified segments/languages. Will automatically transcribe and translate any missing transcriptions and translations.
       *
       * @param {string} dubbingId - ID of the dubbing project.
       * @param {ElevenLabs.BodyDubsAllOrSomeSegmentsAndLanguagesV1DubbingResourceDubbingIdDubPost} request
       * @param {Dubbing.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.dubbing.dubSegments("dubbing_id", {
       *         segments: ["segments"]
       *     })
       */
      dubSegments(dubbingId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/dubbing/resource/${encodeURIComponent(dubbingId)}/dub`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/dubbing/resource/{dubbing_id}/dub.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Regenerate the dubs for either the entire resource or the specified segments/languages. Will automatically transcribe and translate any missing transcriptions and translations.
       *
       * @param {string} dubbingId - ID of the dubbing project.
       * @param {string} language - Render this language
       * @param {ElevenLabs.BodyRenderAudioOrVideoForTheGivenLanguageV1DubbingResourceDubbingIdRenderLanguagePost} request
       * @param {Dubbing.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.dubbing.renderDub("dubbing_id", "language", {
       *         render_type: "mp4"
       *     })
       */
      renderDub(dubbingId, language, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/dubbing/resource/${encodeURIComponent(dubbingId)}/render/${encodeURIComponent(language)}`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/dubbing/resource/{dubbing_id}/render/{language}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Dubs a provided audio or video file into given language.
       *
       * @param {ElevenLabs.BodyDubAVideoOrAnAudioFileV1DubbingPost} request
       * @param {Dubbing.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.dubbing.dubAVideoOrAnAudioFile({})
       */
      dubAVideoOrAnAudioFile(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _request = yield core.newFormData();
          if (request.file != null) {
            yield _request.appendFile("file", request.file);
          }
          if (request.csv_file != null) {
            yield _request.appendFile("csv_file", request.csv_file);
          }
          if (request.foreground_audio_file != null) {
            yield _request.appendFile("foreground_audio_file", request.foreground_audio_file);
          }
          if (request.background_audio_file != null) {
            yield _request.appendFile("background_audio_file", request.background_audio_file);
          }
          if (request.name != null) {
            _request.append("name", request.name);
          }
          if (request.source_url != null) {
            _request.append("source_url", request.source_url);
          }
          if (request.source_lang != null) {
            _request.append("source_lang", request.source_lang);
          }
          if (request.target_lang != null) {
            _request.append("target_lang", request.target_lang);
          }
          if (request.num_speakers != null) {
            _request.append("num_speakers", request.num_speakers.toString());
          }
          if (request.watermark != null) {
            _request.append("watermark", request.watermark.toString());
          }
          if (request.start_time != null) {
            _request.append("start_time", request.start_time.toString());
          }
          if (request.end_time != null) {
            _request.append("end_time", request.end_time.toString());
          }
          if (request.highest_resolution != null) {
            _request.append("highest_resolution", request.highest_resolution.toString());
          }
          if (request.drop_background_audio != null) {
            _request.append("drop_background_audio", request.drop_background_audio.toString());
          }
          if (request.use_profanity_filter != null) {
            _request.append("use_profanity_filter", request.use_profanity_filter.toString());
          }
          if (request.dubbing_studio != null) {
            _request.append("dubbing_studio", request.dubbing_studio.toString());
          }
          if (request.disable_voice_cloning != null) {
            _request.append("disable_voice_cloning", request.disable_voice_cloning.toString());
          }
          if (request.mode != null) {
            _request.append("mode", request.mode);
          }
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/dubbing"),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/dubbing.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Returns metadata about a dubbing project, including whether it's still in progress or not
       *
       * @param {string} dubbingId - ID of the dubbing project.
       * @param {Dubbing.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.dubbing.getDubbingProjectMetadata("dubbing_id")
       */
      getDubbingProjectMetadata(dubbingId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/dubbing/${encodeURIComponent(dubbingId)}`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/dubbing/{dubbing_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Deletes a dubbing project.
       *
       * @param {string} dubbingId - ID of the dubbing project.
       * @param {Dubbing.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.dubbing.deleteDubbingProject("dubbing_id")
       */
      deleteDubbingProject(dubbingId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/dubbing/${encodeURIComponent(dubbingId)}`),
            method: "DELETE",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/dubbing/{dubbing_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Returns dubbed file as a streamed file. Videos will be returned in MP4 format and audio only dubs will be returned in MP3.
       * @throws {@link ElevenLabs.ForbiddenError}
       * @throws {@link ElevenLabs.NotFoundError}
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       * @throws {@link ElevenLabs.TooEarlyError}
       */
      getDubbedFile(dubbingId, languageCode, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/dubbing/${encodeURIComponent(dubbingId)}/audio/${encodeURIComponent(languageCode)}`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            responseType: "streaming",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 403:
                throw new ElevenLabs.ForbiddenError(_response.error.body);
              case 404:
                throw new ElevenLabs.NotFoundError(_response.error.body);
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              case 425:
                throw new ElevenLabs.TooEarlyError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/dubbing/{dubbing_id}/audio/{language_code}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Returns transcript for the dub as an SRT or WEBVTT file.
       *
       * @param {string} dubbingId - ID of the dubbing project.
       * @param {string} languageCode - ID of the language.
       * @param {ElevenLabs.DubbingGetTranscriptForDubRequest} request
       * @param {Dubbing.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.ForbiddenError}
       * @throws {@link ElevenLabs.NotFoundError}
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       * @throws {@link ElevenLabs.TooEarlyError}
       *
       * @example
       *     await client.dubbing.getTranscriptForDub("dubbing_id", "language_code")
       */
      getTranscriptForDub(dubbingId_1, languageCode_1) {
        return __awaiter(this, arguments, void 0, function* (dubbingId, languageCode, request = {}, requestOptions) {
          var _a, _b;
          const { format_type: formatType } = request;
          const _queryParams = {};
          if (formatType != null) {
            _queryParams["format_type"] = formatType;
          }
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/dubbing/${encodeURIComponent(dubbingId)}/transcript/${encodeURIComponent(languageCode)}`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            responseType: "text",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 403:
                throw new ElevenLabs.ForbiddenError(_response.error.body);
              case 404:
                throw new ElevenLabs.NotFoundError(_response.error.body);
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              case 425:
                throw new ElevenLabs.TooEarlyError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/dubbing/{dubbing_id}/transcript/{language_code}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Dubbing = Dubbing;
  }
});

// node_modules/elevenlabs/api/resources/models/client/Client.js
var require_Client24 = __commonJS({
  "node_modules/elevenlabs/api/resources/models/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Models = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Models = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Gets a list of available models.
       *
       * @param {Models.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.models.getAll()
       */
      getAll(requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/models"),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/models.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Models = Models;
  }
});

// node_modules/elevenlabs/api/resources/audioNative/client/Client.js
var require_Client25 = __commonJS({
  "node_modules/elevenlabs/api/resources/audioNative/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AudioNative = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var AudioNative = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Creates Audio Native enabled project, optionally starts conversion and returns project ID and embeddable HTML snippet.
       *
       * @param {ElevenLabs.BodyCreatesAudioNativeEnabledProjectV1AudioNativePost} request
       * @param {AudioNative.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.audioNative.create({
       *         name: "name"
       *     })
       */
      create(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _request = yield core.newFormData();
          _request.append("name", request.name);
          if (request.image != null) {
            _request.append("image", request.image);
          }
          if (request.author != null) {
            _request.append("author", request.author);
          }
          if (request.title != null) {
            _request.append("title", request.title);
          }
          if (request.small != null) {
            _request.append("small", request.small.toString());
          }
          if (request.text_color != null) {
            _request.append("text_color", request.text_color);
          }
          if (request.background_color != null) {
            _request.append("background_color", request.background_color);
          }
          if (request.sessionization != null) {
            _request.append("sessionization", request.sessionization.toString());
          }
          if (request.voice_id != null) {
            _request.append("voice_id", request.voice_id);
          }
          if (request.model_id != null) {
            _request.append("model_id", request.model_id);
          }
          if (request.file != null) {
            yield _request.appendFile("file", request.file);
          }
          if (request.auto_convert != null) {
            _request.append("auto_convert", request.auto_convert.toString());
          }
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/audio-native"),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/audio-native.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Get player settings for the specific project.
       *
       * @param {string} projectId - The ID of the Studio project.
       * @param {AudioNative.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.audioNative.getSettings("21m00Tcm4TlvDq8ikWAM")
       */
      getSettings(projectId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/audio-native/${encodeURIComponent(projectId)}/settings`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/audio-native/{project_id}/settings.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Updates content for the specific AudioNative Project.
       *
       * @param {string} projectId
       * @param {ElevenLabs.BodyUpdateAudioNativeProjectContentV1AudioNativeProjectIdContentPost} request
       * @param {AudioNative.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.audioNative.updateContent("21m00Tcm4TlvDq8ikWAM", {})
       */
      updateContent(projectId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _request = yield core.newFormData();
          if (request.file != null) {
            yield _request.appendFile("file", request.file);
          }
          if (request.auto_convert != null) {
            _request.append("auto_convert", request.auto_convert.toString());
          }
          if (request.auto_publish != null) {
            _request.append("auto_publish", request.auto_publish.toString());
          }
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/audio-native/${encodeURIComponent(projectId)}/content`),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/audio-native/{project_id}/content.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.AudioNative = AudioNative;
  }
});

// node_modules/elevenlabs/api/resources/usage/client/Client.js
var require_Client26 = __commonJS({
  "node_modules/elevenlabs/api/resources/usage/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Usage = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Usage = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Returns the usage metrics for the current user or the entire workspace they are part of. The response provides a time axis based on the specified aggregation interval (default: day), with usage values for each interval along that axis. Usage is broken down by the selected breakdown type. For example, breakdown type "voice" will return the usage of each voice for each interval along the time axis.
       *
       * @param {ElevenLabs.UsageGetCharactersUsageMetricsRequest} request
       * @param {Usage.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.usage.getCharactersUsageMetrics({
       *         start_unix: 1,
       *         end_unix: 1
       *     })
       */
      getCharactersUsageMetrics(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const { start_unix: startUnix, end_unix: endUnix, include_workspace_metrics: includeWorkspaceMetrics, breakdown_type: breakdownType, aggregation_interval: aggregationInterval, metric } = request;
          const _queryParams = {};
          _queryParams["start_unix"] = startUnix.toString();
          _queryParams["end_unix"] = endUnix.toString();
          if (includeWorkspaceMetrics != null) {
            _queryParams["include_workspace_metrics"] = includeWorkspaceMetrics.toString();
          }
          if (breakdownType != null) {
            _queryParams["breakdown_type"] = breakdownType;
          }
          if (aggregationInterval != null) {
            _queryParams["aggregation_interval"] = aggregationInterval;
          }
          if (metric != null) {
            _queryParams["metric"] = metric;
          }
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/usage/character-stats"),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/usage/character-stats.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Usage = Usage;
  }
});

// node_modules/elevenlabs/api/resources/pronunciationDictionary/client/Client.js
var require_Client27 = __commonJS({
  "node_modules/elevenlabs/api/resources/pronunciationDictionary/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PronunciationDictionary = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var PronunciationDictionary = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Creates a new pronunciation dictionary from a lexicon .PLS file
       *
       * @param {ElevenLabs.BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromFilePost} request
       * @param {PronunciationDictionary.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.pronunciationDictionary.addFromFile({
       *         name: "name"
       *     })
       */
      addFromFile(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _request = yield core.newFormData();
          _request.append("name", request.name);
          if (request.file != null) {
            yield _request.appendFile("file", request.file);
          }
          if (request.description != null) {
            _request.append("description", request.description);
          }
          if (request.workspace_access != null) {
            _request.append("workspace_access", request.workspace_access);
          }
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/pronunciation-dictionaries/add-from-file"),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/pronunciation-dictionaries/add-from-file.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Creates a new pronunciation dictionary from provided rules.
       *
       * @param {ElevenLabs.BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromRulesPost} request
       * @param {PronunciationDictionary.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.pronunciationDictionary.addFromRules({
       *         rules: [{
       *                 type: "alias",
       *                 string_to_replace: "Thailand",
       *                 alias: "tie-land"
       *             }],
       *         name: "My Dictionary"
       *     })
       */
      addFromRules(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/pronunciation-dictionaries/add-from-rules"),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/pronunciation-dictionaries/add-from-rules.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Add rules to the pronunciation dictionary
       *
       * @param {string} pronunciationDictionaryId - The id of the pronunciation dictionary
       * @param {ElevenLabs.PronunciationDictionary} request
       * @param {PronunciationDictionary.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.pronunciationDictionary.addRules("21m00Tcm4TlvDq8ikWAM", {
       *         rules: [{
       *                 type: "alias",
       *                 string_to_replace: "Thailand",
       *                 alias: "tie-land"
       *             }]
       *     })
       */
      addRules(pronunciationDictionaryId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/pronunciation-dictionaries/${encodeURIComponent(pronunciationDictionaryId)}/add-rules`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/add-rules.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Remove rules from the pronunciation dictionary
       *
       * @param {string} pronunciationDictionaryId - The id of the pronunciation dictionary
       * @param {ElevenLabs.RemovePronunciationDictionaryRulesRequest} request
       * @param {PronunciationDictionary.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.pronunciationDictionary.removeRules("21m00Tcm4TlvDq8ikWAM", {
       *         rule_strings: ["rule_strings"]
       *     })
       */
      removeRules(pronunciationDictionaryId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/pronunciation-dictionaries/${encodeURIComponent(pronunciationDictionaryId)}/remove-rules`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/remove-rules.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Get a PLS file with a pronunciation dictionary version rules
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       */
      download(dictionaryId, versionId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/pronunciation-dictionaries/${encodeURIComponent(dictionaryId)}/${encodeURIComponent(versionId)}/download`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            responseType: "streaming",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/pronunciation-dictionaries/{dictionary_id}/{version_id}/download.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Get metadata for a pronunciation dictionary
       *
       * @param {string} pronunciationDictionaryId - The id of the pronunciation dictionary
       * @param {PronunciationDictionary.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.pronunciationDictionary.get("21m00Tcm4TlvDq8ikWAM")
       */
      get(pronunciationDictionaryId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/pronunciation-dictionaries/${encodeURIComponent(pronunciationDictionaryId)}/`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Get a list of the pronunciation dictionaries you have access to and their metadata
       *
       * @param {ElevenLabs.PronunciationDictionaryGetAllRequest} request
       * @param {PronunciationDictionary.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.pronunciationDictionary.getAll()
       */
      getAll() {
        return __awaiter(this, arguments, void 0, function* (request = {}, requestOptions) {
          var _a, _b;
          const { cursor, page_size: pageSize, sort, sort_direction: sortDirection } = request;
          const _queryParams = {};
          if (cursor != null) {
            _queryParams["cursor"] = cursor;
          }
          if (pageSize != null) {
            _queryParams["page_size"] = pageSize.toString();
          }
          if (sort != null) {
            _queryParams["sort"] = sort;
          }
          if (sortDirection != null) {
            _queryParams["sort_direction"] = sortDirection;
          }
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/pronunciation-dictionaries/"),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/pronunciation-dictionaries/.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.PronunciationDictionary = PronunciationDictionary;
  }
});

// node_modules/elevenlabs/api/resources/workspace/client/Client.js
var require_Client28 = __commonJS({
  "node_modules/elevenlabs/api/resources/workspace/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Workspace = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Workspace = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Searches for user groups in the workspace. Multiple or no groups may be returned.
       *
       * @param {ElevenLabs.SearchUserGroupsV1WorkspaceGroupsSearchGetRequest} request
       * @param {Workspace.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.workspace.searchUserGroups({
       *         name: "name"
       *     })
       */
      searchUserGroups(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const { name } = request;
          const _queryParams = {};
          _queryParams["name"] = name;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/workspace/groups/search"),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/workspace/groups/search.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Removes a member from the specified group. This endpoint may only be called by workspace administrators.
       *
       * @param {string} groupId - The ID of the target group.
       * @param {ElevenLabs.BodyDeleteMemberFromUserGroupV1WorkspaceGroupsGroupIdMembersRemovePost} request
       * @param {Workspace.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.workspace.deleteMemberFromUserGroup("group_id", {
       *         email: "email"
       *     })
       */
      deleteMemberFromUserGroup(groupId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/workspace/groups/${encodeURIComponent(groupId)}/members/remove`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/workspace/groups/{group_id}/members/remove.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Adds a member of your workspace to the specified group. This endpoint may only be called by workspace administrators.
       *
       * @param {string} groupId - The ID of the target group.
       * @param {ElevenLabs.AddMemberToGroupRequest} request
       * @param {Workspace.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.workspace.addMemberToUserGroup("group_id", {
       *         email: "email"
       *     })
       */
      addMemberToUserGroup(groupId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/workspace/groups/${encodeURIComponent(groupId)}/members`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/workspace/groups/{group_id}/members.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Sends an email invitation to join your workspace to the provided email. If the user doesn't have an account they will be prompted to create one. If the user accepts this invite they will be added as a user to your workspace and your subscription using one of your seats. This endpoint may only be called by workspace administrators. If the user is already in the workspace a 400 error will be returned.
       *
       * @param {ElevenLabs.InviteUserRequest} request
       * @param {Workspace.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.workspace.inviteUser({
       *         email: "john.doe@testmail.com"
       *     })
       */
      inviteUser(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/workspace/invites/add"),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/workspace/invites/add.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Sends email invitations to join your workspace to the provided emails. Requires all email addresses to be part of a verified domain. If the users don't have an account they will be prompted to create one. If the users accept these invites they will be added as users to your workspace and your subscription using one of your seats. This endpoint may only be called by workspace administrators.
       *
       * @param {ElevenLabs.BodyInviteMultipleUsersV1WorkspaceInvitesAddBulkPost} request
       * @param {Workspace.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.workspace.inviteMultipleUsers({
       *         emails: ["emails"]
       *     })
       */
      inviteMultipleUsers(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/workspace/invites/add-bulk"),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/workspace/invites/add-bulk.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Invalidates an existing email invitation. The invitation will still show up in the inbox it has been delivered to, but activating it to join the workspace won't work. This endpoint may only be called by workspace administrators.
       *
       * @param {ElevenLabs.BodyDeleteExistingInvitationV1WorkspaceInvitesDelete} request
       * @param {Workspace.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.workspace.deleteExistingInvitation({
       *         email: "john.doe@testmail.com"
       *     })
       */
      deleteExistingInvitation(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/workspace/invites"),
            method: "DELETE",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/workspace/invites.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Updates attributes of a workspace member. Apart from the email identifier, all parameters will remain unchanged unless specified. This endpoint may only be called by workspace administrators.
       *
       * @param {ElevenLabs.UpdateMemberRequest} request
       * @param {Workspace.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.workspace.updateMember({
       *         email: "email"
       *     })
       */
      updateMember(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/workspace/members"),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/workspace/members.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Deletes a workspace member. This endpoint may only be called by workspace administrators.
       *
       * @param {ElevenLabs.BodyDeleteMemberV1WorkspaceMembersDelete} request
       * @param {Workspace.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.workspace.deleteMember({
       *         email: "email"
       *     })
       */
      deleteMember(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/workspace/members"),
            method: "DELETE",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/workspace/members.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Gets the metadata of a resource by ID.
       *
       * @param {string} resourceId - The ID of the target resource.
       * @param {ElevenLabs.GetResourceV1WorkspaceResourcesResourceIdGetRequest} request
       * @param {Workspace.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.workspace.getResource("resource_id", {
       *         resource_type: "voice"
       *     })
       */
      getResource(resourceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const { resource_type: resourceType } = request;
          const _queryParams = {};
          _queryParams["resource_type"] = resourceType;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/workspace/resources/${encodeURIComponent(resourceId)}`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/workspace/resources/{resource_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Grants a role on a workspace resource to a user or a group. It overrides any existing role this user/service account/group/workspace api key has on the resource. To target a user or service account, pass only the user email. The user must be in your workspace. To target a group, pass only the group id. To target a workspace api key, pass the api key id. The resource will be shared with the service account associated with the api key. You must have admin access to the resource to share it.
       *
       * @param {string} resourceId - The ID of the target resource.
       * @param {ElevenLabs.BodyShareWorkspaceResourceV1WorkspaceResourcesResourceIdSharePost} request
       * @param {Workspace.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.workspace.shareWorkspaceResource("resource_id", {
       *         role: "admin",
       *         resource_type: "voice"
       *     })
       */
      shareWorkspaceResource(resourceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/workspace/resources/${encodeURIComponent(resourceId)}/share`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/workspace/resources/{resource_id}/share.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Removes any existing role on a workspace resource from a user, service account, group or workspace api key. To target a user or service account, pass only the user email. The user must be in your workspace. To target a group, pass only the group id. To target a workspace api key, pass the api key id. The resource will be unshared from the service account associated with the api key. You must have admin access to the resource to unshare it. You cannot remove permissions from the user who created the resource.
       *
       * @param {string} resourceId - The ID of the target resource.
       * @param {ElevenLabs.BodyUnshareWorkspaceResourceV1WorkspaceResourcesResourceIdUnsharePost} request
       * @param {Workspace.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.workspace.unshareWorkspaceResource("resource_id", {
       *         resource_type: "voice"
       *     })
       */
      unshareWorkspaceResource(resourceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/workspace/resources/${encodeURIComponent(resourceId)}/unshare`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/workspace/resources/{resource_id}/unshare.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Workspace = Workspace;
  }
});

// node_modules/elevenlabs/api/resources/speechToText/client/Client.js
var require_Client29 = __commonJS({
  "node_modules/elevenlabs/api/resources/speechToText/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SpeechToText = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var json_1 = require_json();
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var SpeechToText = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Transcribe an audio or video file.
       *
       * @param {ElevenLabs.BodySpeechToTextV1SpeechToTextPost} request
       * @param {SpeechToText.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.speechToText.convert({
       *         file: fs.createReadStream("/path/to/your/file"),
       *         model_id: "model_id"
       *     })
       */
      convert(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _queryParams = {};
          if (request.enable_logging != null) {
            _queryParams["enable_logging"] = request.enable_logging.toString();
          }
          const _request = yield core.newFormData();
          _request.append("model_id", request.model_id);
          yield _request.appendFile("file", request.file);
          if (request.language_code != null) {
            _request.append("language_code", request.language_code);
          }
          if (request.tag_audio_events != null) {
            _request.append("tag_audio_events", request.tag_audio_events.toString());
          }
          if (request.num_speakers != null) {
            _request.append("num_speakers", request.num_speakers.toString());
          }
          if (request.timestamps_granularity != null) {
            _request.append("timestamps_granularity", request.timestamps_granularity);
          }
          if (request.diarize != null) {
            _request.append("diarize", request.diarize.toString());
          }
          if (request.additional_formats != null) {
            _request.append("additional_formats", (0, json_1.toJson)(request.additional_formats));
          }
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/speech-to-text"),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "1.56.0", "User-Agent": "elevenlabs/1.56.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            queryParameters: _queryParams,
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/speech-to-text.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.SpeechToText = SpeechToText;
  }
});

// node_modules/elevenlabs/api/resources/forcedAlignment/client/Client.js
var require_Client30 = __commonJS({
  "node_modules/elevenlabs/api/resources/forcedAlignment/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ForcedAlignment = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var ForcedAlignment = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Force align an audio file to text. Use this endpoint to get the timing information for each character and word in an audio file based on a provided text transcript.
       *
       * @param {ElevenLabs.BodyCreateForcedAlignmentV1ForcedAlignmentPost} request
       * @param {ForcedAlignment.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.forcedAlignment.create({
       *         file: fs.createReadStream("/path/to/your/file"),
       *         text: "text"
       *     })
       */
      create(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _request = yield core.newFormData();
          yield _request.appendFile("file", request.file);
          _request.append("text", request.text);
          if (request.enabled_spooled_file != null) {
            _request.append("enabled_spooled_file", request.enabled_spooled_file.toString());
          }
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/forced-alignment"),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/forced-alignment.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.ForcedAlignment = ForcedAlignment;
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/resources/agents/client/Client.js
var require_Client31 = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/resources/agents/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Agents = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Agents = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Run a conversation between the agent and a simulated user.
       *
       * @param {string} agentId - The id of an agent. This is returned on agent creation.
       * @param {ElevenLabs.conversationalAi.BodySimulatesAConversationV1ConvaiAgentsAgentIdSimulateConversationPost} request
       * @param {Agents.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.agents.simulateConversation("21m00Tcm4TlvDq8ikWAM", {
       *         simulation_specification: {
       *             simulated_user_config: {
       *                 first_message: "Hello, how can I help you today?",
       *                 language: "en"
       *             }
       *         }
       *     })
       */
      simulateConversation(agentId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/agents/${encodeURIComponent(agentId)}/simulate-conversation`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/agents/{agent_id}/simulate-conversation.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Run a conversation between the agent and a simulated user and stream back the response. Response is streamed back as partial lists of messages that should be concatenated and once the conversation has complete a single final message with the conversation analysis will be sent.
       *
       * @param {string} agentId - The id of an agent. This is returned on agent creation.
       * @param {ElevenLabs.conversationalAi.BodySimulatesAConversationStreamV1ConvaiAgentsAgentIdSimulateConversationStreamPost} request
       * @param {Agents.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.agents.simulateConversationStream("21m00Tcm4TlvDq8ikWAM", {
       *         simulation_specification: {
       *             simulated_user_config: {
       *                 first_message: "Hello, how can I help you today?",
       *                 language: "en"
       *             }
       *         }
       *     })
       */
      simulateConversationStream(agentId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/agents/${encodeURIComponent(agentId)}/simulate-conversation/stream`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/agents/{agent_id}/simulate-conversation/stream.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Agents = Agents;
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/resources/sipTrunk/client/Client.js
var require_Client32 = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/resources/sipTrunk/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SipTrunk = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var SipTrunk = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * Handle an outbound call via SIP trunk
       *
       * @param {ElevenLabs.conversationalAi.BodyHandleAnOutboundCallViaSipTrunkV1ConvaiSipTrunkOutboundCallPost} request
       * @param {SipTrunk.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.sipTrunk.outboundCall({
       *         agent_id: "agent_id",
       *         agent_phone_number_id: "agent_phone_number_id",
       *         to_number: "to_number"
       *     })
       */
      outboundCall(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/convai/sip-trunk/outbound-call"),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/sip-trunk/outbound-call.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.SipTrunk = SipTrunk;
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/resources/knowledgeBase/resources/document/client/Client.js
var require_Client33 = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/resources/knowledgeBase/resources/document/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Document = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Document = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      /**
       * In case the document is not RAG indexed, it triggers rag indexing task, otherwise it just returns the current status.
       *
       * @param {string} documentationId - The id of a document from the knowledge base. This is returned on document addition.
       * @param {ElevenLabs.conversationalAi.knowledgeBase.RagIndexRequestModel} request
       * @param {Document.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.knowledgeBase.document.computeRagIndex("21m00Tcm4TlvDq8ikWAM", {
       *         model: "e5_mistral_7b_instruct"
       *     })
       */
      computeRagIndex(documentationId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/knowledge-base/${encodeURIComponent(documentationId)}/rag-index`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/knowledge-base/{documentation_id}/rag-index.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.Document = Document;
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/resources/knowledgeBase/client/Client.js
var require_Client34 = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/resources/knowledgeBase/client/Client.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.KnowledgeBase = void 0;
    var Client_1 = require_Client33();
    var KnowledgeBase = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      get document() {
        var _a;
        return (_a = this._document) !== null && _a !== void 0 ? _a : this._document = new Client_1.Document(this._options);
      }
    };
    exports.KnowledgeBase = KnowledgeBase;
  }
});

// node_modules/elevenlabs/api/resources/conversationalAi/client/Client.js
var require_Client35 = __commonJS({
  "node_modules/elevenlabs/api/resources/conversationalAi/client/Client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ConversationalAi = void 0;
    var environments = __importStar(require_environments());
    var core = __importStar(require_core());
    var ElevenLabs = __importStar(require_api());
    var url_join_1 = __importDefault(require_url_join());
    var errors = __importStar(require_errors());
    var Client_1 = require_Client31();
    var Client_2 = require_Client32();
    var Client_3 = require_Client34();
    var ConversationalAi = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      get agents() {
        var _a;
        return (_a = this._agents) !== null && _a !== void 0 ? _a : this._agents = new Client_1.Agents(this._options);
      }
      get sipTrunk() {
        var _a;
        return (_a = this._sipTrunk) !== null && _a !== void 0 ? _a : this._sipTrunk = new Client_2.SipTrunk(this._options);
      }
      get knowledgeBase() {
        var _a;
        return (_a = this._knowledgeBase) !== null && _a !== void 0 ? _a : this._knowledgeBase = new Client_3.KnowledgeBase(this._options);
      }
      /**
       * Get a signed url to start a conversation with an agent with an agent that requires authorization
       *
       * @param {ElevenLabs.ConversationalAiGetSignedUrlRequest} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.getSignedUrl({
       *         agent_id: "21m00Tcm4TlvDq8ikWAM"
       *     })
       */
      getSignedUrl(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const { agent_id: agentId } = request;
          const _queryParams = {};
          _queryParams["agent_id"] = agentId;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/convai/conversation/get-signed-url"),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/conversation/get-signed-url.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Handle an outbound call via Twilio
       *
       * @param {ElevenLabs.BodyHandleAnOutboundCallViaTwilioV1ConvaiTwilioOutboundCallPost} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.twilioOutboundCall({
       *         agent_id: "agent_id",
       *         agent_phone_number_id: "agent_phone_number_id",
       *         to_number: "to_number"
       *     })
       */
      twilioOutboundCall(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/convai/twilio/outbound-call"),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/twilio/outbound-call.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Create an agent from a config object
       *
       * @param {ElevenLabs.BodyCreateAgentV1ConvaiAgentsCreatePost} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.createAgent({
       *         conversation_config: {}
       *     })
       */
      createAgent(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/convai/agents/create"),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/agents/create.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Retrieve config for an agent
       *
       * @param {string} agentId - The id of an agent. This is returned on agent creation.
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.getAgent("21m00Tcm4TlvDq8ikWAM")
       */
      getAgent(agentId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/agents/${encodeURIComponent(agentId)}`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/agents/{agent_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Delete an agent
       *
       * @param {string} agentId - The id of an agent. This is returned on agent creation.
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.deleteAgent("21m00Tcm4TlvDq8ikWAM")
       */
      deleteAgent(agentId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/agents/${encodeURIComponent(agentId)}`),
            method: "DELETE",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/convai/agents/{agent_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Patches an Agent settings
       *
       * @param {string} agentId - The id of an agent. This is returned on agent creation.
       * @param {ElevenLabs.UpdateAgentRequest} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.updateAgent("21m00Tcm4TlvDq8ikWAM")
       */
      updateAgent(agentId_1) {
        return __awaiter(this, arguments, void 0, function* (agentId, request = {}, requestOptions) {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/agents/${encodeURIComponent(agentId)}`),
            method: "PATCH",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling PATCH /v1/convai/agents/{agent_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Retrieve the widget configuration for an agent
       *
       * @param {string} agentId - The id of an agent. This is returned on agent creation.
       * @param {ElevenLabs.ConversationalAiGetAgentWidgetRequest} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.getAgentWidget("21m00Tcm4TlvDq8ikWAM")
       */
      getAgentWidget(agentId_1) {
        return __awaiter(this, arguments, void 0, function* (agentId, request = {}, requestOptions) {
          var _a, _b;
          const { conversation_signature: conversationSignature } = request;
          const _queryParams = {};
          if (conversationSignature != null) {
            _queryParams["conversation_signature"] = conversationSignature;
          }
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/agents/${encodeURIComponent(agentId)}/widget`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/agents/{agent_id}/widget.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Get the current link used to share the agent with others
       *
       * @param {string} agentId - The id of an agent. This is returned on agent creation.
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.getAgentLink("21m00Tcm4TlvDq8ikWAM")
       */
      getAgentLink(agentId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/agents/${encodeURIComponent(agentId)}/link`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/agents/{agent_id}/link.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Sets the avatar for an agent displayed in the widget
       *
       * @param {string} agentId
       * @param {ElevenLabs.BodyPostAgentAvatarV1ConvaiAgentsAgentIdAvatarPost} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.postAgentAvatar("21m00Tcm4TlvDq8ikWAM", {
       *         avatar_file: fs.createReadStream("/path/to/your/file")
       *     })
       */
      postAgentAvatar(agentId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _request = yield core.newFormData();
          yield _request.appendFile("avatar_file", request.avatar_file);
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/agents/${encodeURIComponent(agentId)}/avatar`),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/agents/{agent_id}/avatar.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Returns a list of your agents and their metadata.
       *
       * @param {ElevenLabs.ConversationalAiGetAgentsRequest} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.getAgents()
       */
      getAgents() {
        return __awaiter(this, arguments, void 0, function* (request = {}, requestOptions) {
          var _a, _b;
          const { cursor, page_size: pageSize, search } = request;
          const _queryParams = {};
          if (cursor != null) {
            _queryParams["cursor"] = cursor;
          }
          if (pageSize != null) {
            _queryParams["page_size"] = pageSize.toString();
          }
          if (search != null) {
            _queryParams["search"] = search;
          }
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/convai/agents"),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/agents.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Get all conversations of agents that user owns. With option to restrict to a specific agent.
       *
       * @param {ElevenLabs.ConversationalAiGetConversationsRequest} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.getConversations()
       */
      getConversations() {
        return __awaiter(this, arguments, void 0, function* (request = {}, requestOptions) {
          var _a, _b;
          const { cursor, agent_id: agentId, call_successful: callSuccessful, call_start_before_unix: callStartBeforeUnix, call_start_after_unix: callStartAfterUnix, page_size: pageSize } = request;
          const _queryParams = {};
          if (cursor != null) {
            _queryParams["cursor"] = cursor;
          }
          if (agentId != null) {
            _queryParams["agent_id"] = agentId;
          }
          if (callSuccessful != null) {
            _queryParams["call_successful"] = callSuccessful;
          }
          if (callStartBeforeUnix != null) {
            _queryParams["call_start_before_unix"] = callStartBeforeUnix.toString();
          }
          if (callStartAfterUnix != null) {
            _queryParams["call_start_after_unix"] = callStartAfterUnix.toString();
          }
          if (pageSize != null) {
            _queryParams["page_size"] = pageSize.toString();
          }
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/convai/conversations"),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/conversations.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Get the details of a particular conversation
       *
       * @param {string} conversationId - The id of the conversation you're taking the action on.
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.getConversation("123")
       */
      getConversation(conversationId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/conversations/${encodeURIComponent(conversationId)}`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/conversations/{conversation_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Delete a particular conversation
       *
       * @param {string} conversationId - The id of the conversation you're taking the action on.
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.deleteConversation("21m00Tcm4TlvDq8ikWAM")
       */
      deleteConversation(conversationId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/conversations/${encodeURIComponent(conversationId)}`),
            method: "DELETE",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/convai/conversations/{conversation_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Get the audio recording of a particular conversation
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       */
      getConversationAudio(conversationId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/conversations/${encodeURIComponent(conversationId)}/audio`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            responseType: "streaming",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/conversations/{conversation_id}/audio.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Send the feedback for the given conversation
       *
       * @param {string} conversationId - The id of the conversation you're taking the action on.
       * @param {ElevenLabs.BodySendConversationFeedbackV1ConvaiConversationsConversationIdFeedbackPost} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.postConversationFeedback("21m00Tcm4TlvDq8ikWAM", {
       *         feedback: "like"
       *     })
       */
      postConversationFeedback(conversationId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/conversations/${encodeURIComponent(conversationId)}/feedback`),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/conversations/{conversation_id}/feedback.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Import Phone Number from provider configuration (Twilio or SIP trunk)
       *
       * @param {ElevenLabs.ConversationalAiCreatePhoneNumberRequestBody} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.createPhoneNumber({
       *         provider: "twilio",
       *         phone_number: "phone_number",
       *         label: "label",
       *         sid: "sid",
       *         token: "token"
       *     })
       */
      createPhoneNumber(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/convai/phone-numbers/create"),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/phone-numbers/create.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Retrieve Phone Number details by ID
       *
       * @param {string} phoneNumberId - The id of an agent. This is returned on agent creation.
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.getPhoneNumber("TeaqRRdTcIfIu2i7BYfT")
       */
      getPhoneNumber(phoneNumberId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/phone-numbers/${encodeURIComponent(phoneNumberId)}`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/phone-numbers/{phone_number_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Delete Phone Number by ID
       *
       * @param {string} phoneNumberId - The id of an agent. This is returned on agent creation.
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.deletePhoneNumber("TeaqRRdTcIfIu2i7BYfT")
       */
      deletePhoneNumber(phoneNumberId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/phone-numbers/${encodeURIComponent(phoneNumberId)}`),
            method: "DELETE",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/convai/phone-numbers/{phone_number_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Update Phone Number details by ID
       *
       * @param {string} phoneNumberId - The id of an agent. This is returned on agent creation.
       * @param {ElevenLabs.UpdatePhoneNumberRequest} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.updatePhoneNumber("TeaqRRdTcIfIu2i7BYfT")
       */
      updatePhoneNumber(phoneNumberId_1) {
        return __awaiter(this, arguments, void 0, function* (phoneNumberId, request = {}, requestOptions) {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/phone-numbers/${encodeURIComponent(phoneNumberId)}`),
            method: "PATCH",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling PATCH /v1/convai/phone-numbers/{phone_number_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Retrieve all Phone Numbers
       *
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.getPhoneNumbers()
       */
      getPhoneNumbers(requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/convai/phone-numbers/"),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/phone-numbers/.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Get a list of available knowledge base documents
       *
       * @param {ElevenLabs.ConversationalAiGetKnowledgeBaseListRequest} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.getKnowledgeBaseList()
       */
      getKnowledgeBaseList() {
        return __awaiter(this, arguments, void 0, function* (request = {}, requestOptions) {
          var _a, _b;
          const { cursor, page_size: pageSize, search, show_only_owned_documents: showOnlyOwnedDocuments, types, use_typesense: useTypesense } = request;
          const _queryParams = {};
          if (cursor != null) {
            _queryParams["cursor"] = cursor;
          }
          if (pageSize != null) {
            _queryParams["page_size"] = pageSize.toString();
          }
          if (search != null) {
            _queryParams["search"] = search;
          }
          if (showOnlyOwnedDocuments != null) {
            _queryParams["show_only_owned_documents"] = showOnlyOwnedDocuments.toString();
          }
          if (types != null) {
            if (Array.isArray(types)) {
              _queryParams["types"] = types.map((item) => item);
            } else {
              _queryParams["types"] = types;
            }
          }
          if (useTypesense != null) {
            _queryParams["use_typesense"] = useTypesense.toString();
          }
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/convai/knowledge-base"),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/knowledge-base.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Upload a file or webpage URL to create a knowledge base document. <br> <Note> After creating the document, update the agent's knowledge base by calling [Update agent](/docs/conversational-ai/api-reference/agents/update-agent). </Note>
       *
       * @param {ElevenLabs.BodyAddToKnowledgeBaseV1ConvaiKnowledgeBasePost} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.addToKnowledgeBase({})
       */
      addToKnowledgeBase(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _request = yield core.newFormData();
          if (request.name != null) {
            _request.append("name", request.name);
          }
          if (request.url != null) {
            _request.append("url", request.url);
          }
          if (request.file != null) {
            yield _request.appendFile("file", request.file);
          }
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/convai/knowledge-base"),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/knowledge-base.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Create a knowledge base document generated by scraping the given webpage.
       *
       * @param {ElevenLabs.BodyCreateUrlDocumentV1ConvaiKnowledgeBaseUrlPost} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.createKnowledgeBaseUrlDocument({
       *         url: "url"
       *     })
       */
      createKnowledgeBaseUrlDocument(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/convai/knowledge-base/url"),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/knowledge-base/url.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Create a knowledge base document generated form the uploaded file.
       *
       * @param {ElevenLabs.BodyCreateFileDocumentV1ConvaiKnowledgeBaseFilePost} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.createKnowledgeBaseFileDocument({
       *         file: fs.createReadStream("/path/to/your/file")
       *     })
       */
      createKnowledgeBaseFileDocument(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _request = yield core.newFormData();
          yield _request.appendFile("file", request.file);
          if (request.name != null) {
            _request.append("name", request.name);
          }
          const _maybeEncodedRequest = yield _request.getRequest();
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/convai/knowledge-base/file"),
            method: "POST",
            headers: Object.assign(Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            requestType: "file",
            duplex: _maybeEncodedRequest.duplex,
            body: _maybeEncodedRequest.body,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/knowledge-base/file.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Create a knowledge base document containing the provided text.
       *
       * @param {ElevenLabs.BodyCreateTextDocumentV1ConvaiKnowledgeBaseTextPost} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.createKnowledgeBaseTextDocument({
       *         text: "text"
       *     })
       */
      createKnowledgeBaseTextDocument(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/convai/knowledge-base/text"),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/knowledge-base/text.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Get details about a specific documentation making up the agent's knowledge base
       *
       * @param {string} documentationId - The id of a document from the knowledge base. This is returned on document addition.
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.getKnowledgeBaseDocumentById("21m00Tcm4TlvDq8ikWAM")
       */
      getKnowledgeBaseDocumentById(documentationId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/knowledge-base/${encodeURIComponent(documentationId)}`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/knowledge-base/{documentation_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Delete a document from the knowledge base
       *
       * @param {string} documentationId - The id of a document from the knowledge base. This is returned on document addition.
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.deleteKnowledgeBaseDocument("21m00Tcm4TlvDq8ikWAM")
       */
      deleteKnowledgeBaseDocument(documentationId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/knowledge-base/${encodeURIComponent(documentationId)}`),
            method: "DELETE",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/convai/knowledge-base/{documentation_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Update the name of a document
       *
       * @param {string} documentationId - The id of a document from the knowledge base. This is returned on document addition.
       * @param {ElevenLabs.BodyUpdateDocumentV1ConvaiKnowledgeBaseDocumentationIdPatch} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.updateKnowledgeBaseDocument("21m00Tcm4TlvDq8ikWAM", {
       *         name: "name"
       *     })
       */
      updateKnowledgeBaseDocument(documentationId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/knowledge-base/${encodeURIComponent(documentationId)}`),
            method: "PATCH",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling PATCH /v1/convai/knowledge-base/{documentation_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Get a list of agents depending on this knowledge base document
       *
       * @param {string} documentationId - The id of a document from the knowledge base. This is returned on document addition.
       * @param {ElevenLabs.ConversationalAiGetDependentAgentsRequest} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.getDependentAgents("21m00Tcm4TlvDq8ikWAM")
       */
      getDependentAgents(documentationId_1) {
        return __awaiter(this, arguments, void 0, function* (documentationId, request = {}, requestOptions) {
          var _a, _b;
          const { cursor, page_size: pageSize } = request;
          const _queryParams = {};
          if (cursor != null) {
            _queryParams["cursor"] = cursor;
          }
          if (pageSize != null) {
            _queryParams["page_size"] = pageSize.toString();
          }
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/knowledge-base/${encodeURIComponent(documentationId)}/dependent-agents`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            queryParameters: _queryParams,
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/knowledge-base/{documentation_id}/dependent-agents.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Get the entire content of a document from the knowledge base
       *
       * @param {string} documentationId - The id of a document from the knowledge base. This is returned on document addition.
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.getKnowledgeBaseDocumentContent("21m00Tcm4TlvDq8ikWAM")
       */
      getKnowledgeBaseDocumentContent(documentationId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/knowledge-base/${encodeURIComponent(documentationId)}/content`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/knowledge-base/{documentation_id}/content.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Get details about a specific documentation part used by RAG.
       *
       * @param {string} documentationId - The id of a document from the knowledge base. This is returned on document addition.
       * @param {string} chunkId - The id of a document RAG chunk from the knowledge base.
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.getKnowledgeBaseDocumentPartById("21m00Tcm4TlvDq8ikWAM", "chunk_id")
       */
      getKnowledgeBaseDocumentPartById(documentationId, chunkId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/knowledge-base/${encodeURIComponent(documentationId)}/chunk/${encodeURIComponent(chunkId)}`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/knowledge-base/{documentation_id}/chunk/{chunk_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Retrieve Convai settings for the workspace
       *
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.getSettings()
       */
      getSettings(requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/convai/settings"),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/settings.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Update Convai settings for the workspace
       *
       * @param {ElevenLabs.PatchConvAiSettingsRequest} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.updateSettings()
       */
      updateSettings() {
        return __awaiter(this, arguments, void 0, function* (request = {}, requestOptions) {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/convai/settings"),
            method: "PATCH",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling PATCH /v1/convai/settings.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Retrieve Convai dashboard settings for the workspace
       *
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.getDashboardSettings()
       */
      getDashboardSettings(requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/convai/settings/dashboard"),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/settings/dashboard.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Update Convai dashboard settings for the workspace
       *
       * @param {ElevenLabs.PatchConvAiDashboardSettingsRequest} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.updateDashboardSettings()
       */
      updateDashboardSettings() {
        return __awaiter(this, arguments, void 0, function* (request = {}, requestOptions) {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/convai/settings/dashboard"),
            method: "PATCH",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: request,
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling PATCH /v1/convai/settings/dashboard.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Get all workspace secrets for the user
       *
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.getSecrets()
       */
      getSecrets(requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/convai/secrets"),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/secrets.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Create a new secret for the workspace
       *
       * @param {ElevenLabs.PostWorkspaceSecretRequest} request
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.createSecret({
       *         name: "name",
       *         value: "value"
       *     })
       */
      createSecret(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, "v1/convai/secrets"),
            method: "POST",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            body: Object.assign(Object.assign({}, request), { type: "new" }),
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/secrets.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Delete a workspace secret if it's not in use
       *
       * @param {string} secretId
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.deleteSecret("secret_id")
       */
      deleteSecret(secretId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/secrets/${encodeURIComponent(secretId)}`),
            method: "DELETE",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/convai/secrets/{secret_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
      /**
       * Get detailed information about a batch call including all recipients.
       *
       * @param {string} batchId
       * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
       *
       * @throws {@link ElevenLabs.UnprocessableEntityError}
       *
       * @example
       *     await client.conversationalAi.getBatchCall("batch_id")
       */
      getBatchCall(batchId, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
          var _a, _b;
          const _response = yield core.fetcher({
            url: (0, url_join_1.default)((_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : ((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production).base, `v1/convai/batch-calling/${encodeURIComponent(batchId)}`),
            method: "GET",
            headers: Object.assign({ "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "elevenlabs", "X-Fern-SDK-Version": "v1.59.0", "User-Agent": "elevenlabs/v1.59.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
            contentType: "application/json",
            requestType: "json",
            timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 6e4,
            maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
            abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
          });
          if (_response.ok) {
            return _response.body;
          }
          if (_response.error.reason === "status-code") {
            switch (_response.error.statusCode) {
              case 422:
                throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
              default:
                throw new errors.ElevenLabsError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.body
                });
            }
          }
          switch (_response.error.reason) {
            case "non-json":
              throw new errors.ElevenLabsError({
                statusCode: _response.error.statusCode,
                body: _response.error.rawBody
              });
            case "timeout":
              throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/batch-calling/{batch_id}.");
            case "unknown":
              throw new errors.ElevenLabsError({
                message: _response.error.errorMessage
              });
          }
        });
      }
    };
    exports.ConversationalAi = ConversationalAi;
  }
});

// node_modules/elevenlabs/Client.js
var require_Client36 = __commonJS({
  "node_modules/elevenlabs/Client.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ElevenLabsClient = void 0;
    var Client_1 = require_Client();
    var Client_2 = require_Client2();
    var Client_3 = require_Client3();
    var Client_4 = require_Client4();
    var Client_5 = require_Client5();
    var Client_6 = require_Client6();
    var Client_7 = require_Client7();
    var Client_8 = require_Client8();
    var Client_9 = require_Client17();
    var Client_10 = require_Client20();
    var Client_11 = require_Client23();
    var Client_12 = require_Client24();
    var Client_13 = require_Client25();
    var Client_14 = require_Client26();
    var Client_15 = require_Client27();
    var Client_16 = require_Client28();
    var Client_17 = require_Client29();
    var Client_18 = require_Client30();
    var Client_19 = require_Client35();
    var ElevenLabsClient = class {
      constructor(_options = {}) {
        this._options = _options;
      }
      get history() {
        var _a;
        return (_a = this._history) !== null && _a !== void 0 ? _a : this._history = new Client_1.History(this._options);
      }
      get textToSoundEffects() {
        var _a;
        return (_a = this._textToSoundEffects) !== null && _a !== void 0 ? _a : this._textToSoundEffects = new Client_2.TextToSoundEffects(this._options);
      }
      get audioIsolation() {
        var _a;
        return (_a = this._audioIsolation) !== null && _a !== void 0 ? _a : this._audioIsolation = new Client_3.AudioIsolation(this._options);
      }
      get samples() {
        var _a;
        return (_a = this._samples) !== null && _a !== void 0 ? _a : this._samples = new Client_4.Samples(this._options);
      }
      get textToSpeech() {
        var _a;
        return (_a = this._textToSpeech) !== null && _a !== void 0 ? _a : this._textToSpeech = new Client_5.TextToSpeech(this._options);
      }
      get speechToSpeech() {
        var _a;
        return (_a = this._speechToSpeech) !== null && _a !== void 0 ? _a : this._speechToSpeech = new Client_6.SpeechToSpeech(this._options);
      }
      get textToVoice() {
        var _a;
        return (_a = this._textToVoice) !== null && _a !== void 0 ? _a : this._textToVoice = new Client_7.TextToVoice(this._options);
      }
      get user() {
        var _a;
        return (_a = this._user) !== null && _a !== void 0 ? _a : this._user = new Client_8.User(this._options);
      }
      get voices() {
        var _a;
        return (_a = this._voices) !== null && _a !== void 0 ? _a : this._voices = new Client_9.Voices(this._options);
      }
      get studio() {
        var _a;
        return (_a = this._studio) !== null && _a !== void 0 ? _a : this._studio = new Client_10.Studio(this._options);
      }
      get dubbing() {
        var _a;
        return (_a = this._dubbing) !== null && _a !== void 0 ? _a : this._dubbing = new Client_11.Dubbing(this._options);
      }
      get models() {
        var _a;
        return (_a = this._models) !== null && _a !== void 0 ? _a : this._models = new Client_12.Models(this._options);
      }
      get audioNative() {
        var _a;
        return (_a = this._audioNative) !== null && _a !== void 0 ? _a : this._audioNative = new Client_13.AudioNative(this._options);
      }
      get usage() {
        var _a;
        return (_a = this._usage) !== null && _a !== void 0 ? _a : this._usage = new Client_14.Usage(this._options);
      }
      get pronunciationDictionary() {
        var _a;
        return (_a = this._pronunciationDictionary) !== null && _a !== void 0 ? _a : this._pronunciationDictionary = new Client_15.PronunciationDictionary(this._options);
      }
      get workspace() {
        var _a;
        return (_a = this._workspace) !== null && _a !== void 0 ? _a : this._workspace = new Client_16.Workspace(this._options);
      }
      get speechToText() {
        var _a;
        return (_a = this._speechToText) !== null && _a !== void 0 ? _a : this._speechToText = new Client_17.SpeechToText(this._options);
      }
      get forcedAlignment() {
        var _a;
        return (_a = this._forcedAlignment) !== null && _a !== void 0 ? _a : this._forcedAlignment = new Client_18.ForcedAlignment(this._options);
      }
      get conversationalAi() {
        var _a;
        return (_a = this._conversationalAi) !== null && _a !== void 0 ? _a : this._conversationalAi = new Client_19.ConversationalAi(this._options);
      }
    };
    exports.ElevenLabsClient = ElevenLabsClient;
  }
});

// node_modules/elevenlabs/wrapper/ElevenLabsClient.js
var require_ElevenLabsClient = __commonJS({
  "node_modules/elevenlabs/wrapper/ElevenLabsClient.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ElevenLabsClient = void 0;
    var Client_1 = require_Client36();
    var errors = __importStar(require_errors());
    var ElevenLabsClient = class extends Client_1.ElevenLabsClient {
      constructor(options = {}) {
        var _a;
        const apiKey = (_a = options.apiKey) !== null && _a !== void 0 ? _a : process.env["ELEVENLABS_API_KEY"];
        if (apiKey == null) {
          throw new errors.ElevenLabsError({
            message: "Please pass in your ElevenLabs API Key or export ELEVENLABS_API_KEY in your environment."
          });
        }
        options.apiKey = apiKey;
        super(options);
      }
      /**
       * Generates audio for a voice.
       *
       * @deprecated Use `textToSpeech.convert` or `textToSpeech.convertAsStream` instead. Will be removed in a future major version.
       *
       * @example Generate the entire audio
       * import { play } from "elevenlabs";
       *
       * const audio = eleven.generate({
       *   voiceId: "Matilda" // defaults to Sarah
       * })
       * await play(audio);
       *
       * @example
       * import { stream } from "elevenlabs"
       *
       * const audioStream = eleven.generate({
       *   stream: true,
       *   voice: "Sarah"
       * })
       * await stream(audioStream);
       */
      generate(request_1) {
        return __awaiter(this, arguments, void 0, function* (request, requestOptions = {}) {
          var _a, _b;
          const voiceIdOrName = (_a = request.voice) !== null && _a !== void 0 ? _a : "Sarah";
          const voiceId = isVoiceId(voiceIdOrName) ? voiceIdOrName : (_b = (yield this.voices.getAll({
            show_legacy: true
          })).voices.filter((voice) => voice.name === voiceIdOrName)[0]) === null || _b === void 0 ? void 0 : _b.voice_id;
          if (voiceId == null) {
            throw new errors.ElevenLabsError({
              message: `${voiceIdOrName} is not a valid voice name`
            });
          }
          if (isGenerateAudioStream(request)) {
            return yield this.textToSpeech.convertAsStream(voiceId, request, requestOptions);
          } else {
            return yield this.textToSpeech.convert(voiceId, request, requestOptions);
          }
        });
      }
    };
    exports.ElevenLabsClient = ElevenLabsClient;
    function isGenerateAudioStream(value) {
      return value.stream != null;
    }
    function isVoiceId(val) {
      return /^[a-zA-Z0-9]{20}$/.test(val);
    }
  }
});

// browser-external:command-exists
var require_command_exists = __commonJS({
  "browser-external:command-exists"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "command-exists" has been externalized for browser compatibility. Cannot access "command-exists.${key}" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:execa
var require_execa = __commonJS({
  "browser-external:execa"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "execa" has been externalized for browser compatibility. Cannot access "execa.${key}" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// node_modules/elevenlabs/wrapper/play.js
var require_play = __commonJS({
  "node_modules/elevenlabs/wrapper/play.js"(exports) {
    "use strict";
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __asyncValues = exports && exports.__asyncValues || function(o) {
      if (!Symbol.asyncIterator)
        throw new TypeError("Symbol.asyncIterator is not defined.");
      var m = o[Symbol.asyncIterator], i;
      return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
      }, i);
      function verb(n) {
        i[n] = o[n] && function(v) {
          return new Promise(function(resolve, reject) {
            v = o[n](v), settle(resolve, reject, v.done, v.value);
          });
        };
      }
      function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v2) {
          resolve({ value: v2, done: d });
        }, reject);
      }
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.play = play;
    var command_exists_1 = __importDefault(require_command_exists());
    var ElevenLabsError_1 = require_ElevenLabsError();
    var execa_1 = __importDefault(require_execa());
    function play(audio) {
      return __awaiter(this, void 0, void 0, function* () {
        var _a, audio_1, audio_1_1;
        var _b, e_1, _c, _d;
        var _e, _f;
        if (!(0, command_exists_1.default)("ffplay")) {
          throw new ElevenLabsError_1.ElevenLabsError({
            message: `ffplay from ffmpeg not found, necessary to play audio. 
            On mac you can install it with 'brew install ffmpeg'. 
            On linux and windows you can install it from https://ffmpeg.org/`
          });
        }
        const ffmpeg = (0, execa_1.default)("ffplay", ["-autoexit", "-", "-nodisp"]);
        try {
          for (_a = true, audio_1 = __asyncValues(audio); audio_1_1 = yield audio_1.next(), _b = audio_1_1.done, !_b; _a = true) {
            _d = audio_1_1.value;
            _a = false;
            const data = _d;
            (_e = ffmpeg.stdin) === null || _e === void 0 ? void 0 : _e.write(data);
          }
        } catch (e_1_1) {
          e_1 = { error: e_1_1 };
        } finally {
          try {
            if (!_a && !_b && (_c = audio_1.return))
              yield _c.call(audio_1);
          } finally {
            if (e_1)
              throw e_1.error;
          }
        }
        (_f = ffmpeg.stdin) === null || _f === void 0 ? void 0 : _f.end();
        yield ffmpeg;
      });
    }
  }
});

// node_modules/elevenlabs/wrapper/stream.js
var require_stream2 = __commonJS({
  "node_modules/elevenlabs/wrapper/stream.js"(exports) {
    "use strict";
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __asyncValues = exports && exports.__asyncValues || function(o) {
      if (!Symbol.asyncIterator)
        throw new TypeError("Symbol.asyncIterator is not defined.");
      var m = o[Symbol.asyncIterator], i;
      return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
      }, i);
      function verb(n) {
        i[n] = o[n] && function(v) {
          return new Promise(function(resolve, reject) {
            v = o[n](v), settle(resolve, reject, v.done, v.value);
          });
        };
      }
      function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v2) {
          resolve({ value: v2, done: d });
        }, reject);
      }
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.stream = stream;
    var command_exists_1 = __importDefault(require_command_exists());
    var ElevenLabsError_1 = require_ElevenLabsError();
    var runtime_1 = require_runtime();
    var execa_1 = __importDefault(require_execa());
    function stream(audio) {
      return __awaiter(this, void 0, void 0, function* () {
        var _a, audio_1, audio_1_1;
        var _b, e_1, _c, _d;
        var _e, _f;
        if (runtime_1.RUNTIME.type !== "node") {
          throw new ElevenLabsError_1.ElevenLabsError({
            message: `This function is only supported in node environments. ${runtime_1.RUNTIME.type} is not supported`
          });
        }
        if (!(0, command_exists_1.default)("mpv")) {
          throw new ElevenLabsError_1.ElevenLabsError({
            message: `mpv not found, necessary to stream audio."
            On mac you can install it with 'brew install mpv'.
            On linux and windows you can install it from https://mpv.io/`
          });
        }
        const mpv = (0, execa_1.default)("mpv", ["--no-cache", "--no-terminal", "--", "fd://0"]);
        try {
          for (_a = true, audio_1 = __asyncValues(audio); audio_1_1 = yield audio_1.next(), _b = audio_1_1.done, !_b; _a = true) {
            _d = audio_1_1.value;
            _a = false;
            const data = _d;
            (_e = mpv.stdin) === null || _e === void 0 ? void 0 : _e.write(data);
          }
        } catch (e_1_1) {
          e_1 = { error: e_1_1 };
        } finally {
          try {
            if (!_a && !_b && (_c = audio_1.return))
              yield _c.call(audio_1);
          } finally {
            if (e_1)
              throw e_1.error;
          }
        }
        (_f = mpv.stdin) === null || _f === void 0 ? void 0 : _f.end();
        yield mpv;
      });
    }
  }
});

// node_modules/elevenlabs/wrapper/index.js
var require_wrapper = __commonJS({
  "node_modules/elevenlabs/wrapper/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.stream = exports.play = exports.ElevenLabsClient = void 0;
    var ElevenLabsClient_1 = require_ElevenLabsClient();
    Object.defineProperty(exports, "ElevenLabsClient", { enumerable: true, get: function() {
      return ElevenLabsClient_1.ElevenLabsClient;
    } });
    var play_1 = require_play();
    Object.defineProperty(exports, "play", { enumerable: true, get: function() {
      return play_1.play;
    } });
    var stream_1 = require_stream2();
    Object.defineProperty(exports, "stream", { enumerable: true, get: function() {
      return stream_1.stream;
    } });
  }
});

// node_modules/elevenlabs/index.js
var require_elevenlabs = __commonJS({
  "node_modules/elevenlabs/index.js"(exports) {
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function() {
      var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o2) {
          var ar = [];
          for (var k in o2)
            if (Object.prototype.hasOwnProperty.call(o2, k))
              ar[ar.length] = k;
          return ar;
        };
        return ownKeys(o);
      };
      return function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k = ownKeys(mod), i = 0; i < k.length; i++)
            if (k[i] !== "default")
              __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
      };
    }();
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ElevenLabsTimeoutError = exports.ElevenLabsError = exports.ElevenLabsEnvironment = exports.ElevenLabs = void 0;
    exports.ElevenLabs = __importStar(require_api());
    __exportStar(require_wrapper(), exports);
    var environments_1 = require_environments();
    Object.defineProperty(exports, "ElevenLabsEnvironment", { enumerable: true, get: function() {
      return environments_1.ElevenLabsEnvironment;
    } });
    var errors_1 = require_errors();
    Object.defineProperty(exports, "ElevenLabsError", { enumerable: true, get: function() {
      return errors_1.ElevenLabsError;
    } });
    Object.defineProperty(exports, "ElevenLabsTimeoutError", { enumerable: true, get: function() {
      return errors_1.ElevenLabsTimeoutError;
    } });
  }
});
export default require_elevenlabs();
//# sourceMappingURL=elevenlabs.js.map

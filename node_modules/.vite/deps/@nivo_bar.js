import {
  $r,
  AnimatedObject,
  Dr,
  E,
  FluidValue,
  Fr,
  It,
  L,
  M,
  Mn,
  Pt,
  R,
  Rn,
  Rt,
  T,
  Ye,
  a,
  addFluidObserver,
  b,
  bn,
  callFluidObservers,
  cn,
  colors2,
  createHost,
  createStringInterpolator2,
  ct,
  d,
  each,
  eachProp,
  ft,
  getFluidValue,
  globals_exports,
  gn,
  gt,
  hasFluidValue,
  hn,
  hr,
  ht,
  is,
  kn,
  removeFluidObserver,
  require_Set,
  require_SetCache,
  require_Stack,
  require_Symbol,
  require_arrayFilter,
  require_arrayIncludes,
  require_arrayIncludesWith,
  require_arrayMap,
  require_arrayPush,
  require_assignValue,
  require_baseFlatten,
  require_baseFor,
  require_baseGet,
  require_baseGetAllKeys,
  require_baseGetTag,
  require_baseIsEqual,
  require_baseRest,
  require_baseUnary,
  require_cacheHas,
  require_castPath,
  require_cloneArrayBuffer,
  require_cloneBuffer,
  require_cloneTypedArray,
  require_copyArray,
  require_copyObject,
  require_flatRest,
  require_get,
  require_getAllKeys,
  require_getPrototype,
  require_getSymbols,
  require_getTag,
  require_hasIn,
  require_identity,
  require_initCloneObject,
  require_isArray,
  require_isArrayLike,
  require_isBuffer,
  require_isIterateeCall,
  require_isKey,
  require_isObject,
  require_isObjectLike,
  require_isPlainObject,
  require_isSymbol,
  require_keys,
  require_keysIn,
  require_last,
  require_nodeUtil,
  require_setToArray,
  require_stubArray,
  require_toKey,
  to,
  toArray,
  useSpring,
  useTransition,
  ut,
  w,
  wn,
  z
} from "./chunk-ECJH67H6.js";
import "./chunk-VGV52YNA.js";
import {
  band,
  diverging_default,
  format,
  friday,
  hour_default,
  linear,
  log,
  millisecond_default,
  minute_default,
  monday,
  month_default,
  newInterval,
  number_default,
  point,
  round_default,
  saturday,
  second_default,
  stack_default,
  sunday,
  symlog,
  thursday,
  time,
  timeFormat,
  timeParse,
  tuesday,
  utcFriday,
  utcHour_default,
  utcMinute_default,
  utcMonday,
  utcMonth_default,
  utcParse,
  utcSaturday,
  utcSunday,
  utcThursday,
  utcTime,
  utcTuesday,
  utcWednesday,
  utcYear_default,
  wednesday,
  year_default
} from "./chunk-MAW773I4.js";
import {
  require_jsx_runtime
} from "./chunk-BXO5MYLN.js";
import {
  require_react_dom
} from "./chunk-SJTIRSW6.js";
import {
  require_react
} from "./chunk-QZNU24ZE.js";
import {
  __commonJS,
  __toESM
} from "./chunk-FOWDQQBS.js";

// node_modules/lodash/noop.js
var require_noop = __commonJS({
  "node_modules/lodash/noop.js"(exports, module) {
    function noop() {
    }
    module.exports = noop;
  }
});

// node_modules/lodash/_createSet.js
var require_createSet = __commonJS({
  "node_modules/lodash/_createSet.js"(exports, module) {
    var Set = require_Set();
    var noop = require_noop();
    var setToArray = require_setToArray();
    var INFINITY = 1 / 0;
    var createSet = !(Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY) ? noop : function(values) {
      return new Set(values);
    };
    module.exports = createSet;
  }
});

// node_modules/lodash/_baseUniq.js
var require_baseUniq = __commonJS({
  "node_modules/lodash/_baseUniq.js"(exports, module) {
    var SetCache = require_SetCache();
    var arrayIncludes = require_arrayIncludes();
    var arrayIncludesWith = require_arrayIncludesWith();
    var cacheHas = require_cacheHas();
    var createSet = require_createSet();
    var setToArray = require_setToArray();
    var LARGE_ARRAY_SIZE = 200;
    function baseUniq(array, iteratee, comparator) {
      var index = -1, includes = arrayIncludes, length = array.length, isCommon = true, result = [], seen = result;
      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      } else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache();
      } else {
        seen = iteratee ? [] : result;
      }
      outer:
        while (++index < length) {
          var value = array[index], computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;
          if (isCommon && computed === computed) {
            var seenIndex = seen.length;
            while (seenIndex--) {
              if (seen[seenIndex] === computed) {
                continue outer;
              }
            }
            if (iteratee) {
              seen.push(computed);
            }
            result.push(value);
          } else if (!includes(seen, computed, comparator)) {
            if (seen !== result) {
              seen.push(computed);
            }
            result.push(value);
          }
        }
      return result;
    }
    module.exports = baseUniq;
  }
});

// node_modules/lodash/uniq.js
var require_uniq = __commonJS({
  "node_modules/lodash/uniq.js"(exports, module) {
    var baseUniq = require_baseUniq();
    function uniq(array) {
      return array && array.length ? baseUniq(array) : [];
    }
    module.exports = uniq;
  }
});

// node_modules/lodash/_baseIsMatch.js
var require_baseIsMatch = __commonJS({
  "node_modules/lodash/_baseIsMatch.js"(exports, module) {
    var Stack = require_Stack();
    var baseIsEqual = require_baseIsEqual();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length, length = index, noCustomizer = !customizer;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0], objValue = object[key], srcValue = data[1];
        if (noCustomizer && data[2]) {
          if (objValue === void 0 && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack();
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === void 0 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
            return false;
          }
        }
      }
      return true;
    }
    module.exports = baseIsMatch;
  }
});

// node_modules/lodash/_isStrictComparable.js
var require_isStrictComparable = __commonJS({
  "node_modules/lodash/_isStrictComparable.js"(exports, module) {
    var isObject = require_isObject();
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }
    module.exports = isStrictComparable;
  }
});

// node_modules/lodash/_getMatchData.js
var require_getMatchData = __commonJS({
  "node_modules/lodash/_getMatchData.js"(exports, module) {
    var isStrictComparable = require_isStrictComparable();
    var keys = require_keys();
    function getMatchData(object) {
      var result = keys(object), length = result.length;
      while (length--) {
        var key = result[length], value = object[key];
        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }
    module.exports = getMatchData;
  }
});

// node_modules/lodash/_matchesStrictComparable.js
var require_matchesStrictComparable = __commonJS({
  "node_modules/lodash/_matchesStrictComparable.js"(exports, module) {
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
      };
    }
    module.exports = matchesStrictComparable;
  }
});

// node_modules/lodash/_baseMatches.js
var require_baseMatches = __commonJS({
  "node_modules/lodash/_baseMatches.js"(exports, module) {
    var baseIsMatch = require_baseIsMatch();
    var getMatchData = require_getMatchData();
    var matchesStrictComparable = require_matchesStrictComparable();
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }
    module.exports = baseMatches;
  }
});

// node_modules/lodash/_baseMatchesProperty.js
var require_baseMatchesProperty = __commonJS({
  "node_modules/lodash/_baseMatchesProperty.js"(exports, module) {
    var baseIsEqual = require_baseIsEqual();
    var get = require_get();
    var hasIn = require_hasIn();
    var isKey = require_isKey();
    var isStrictComparable = require_isStrictComparable();
    var matchesStrictComparable = require_matchesStrictComparable();
    var toKey = require_toKey();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return objValue === void 0 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }
    module.exports = baseMatchesProperty;
  }
});

// node_modules/lodash/_baseProperty.js
var require_baseProperty = __commonJS({
  "node_modules/lodash/_baseProperty.js"(exports, module) {
    function baseProperty(key) {
      return function(object) {
        return object == null ? void 0 : object[key];
      };
    }
    module.exports = baseProperty;
  }
});

// node_modules/lodash/_basePropertyDeep.js
var require_basePropertyDeep = __commonJS({
  "node_modules/lodash/_basePropertyDeep.js"(exports, module) {
    var baseGet = require_baseGet();
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }
    module.exports = basePropertyDeep;
  }
});

// node_modules/lodash/property.js
var require_property = __commonJS({
  "node_modules/lodash/property.js"(exports, module) {
    var baseProperty = require_baseProperty();
    var basePropertyDeep = require_basePropertyDeep();
    var isKey = require_isKey();
    var toKey = require_toKey();
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }
    module.exports = property;
  }
});

// node_modules/lodash/_baseIteratee.js
var require_baseIteratee = __commonJS({
  "node_modules/lodash/_baseIteratee.js"(exports, module) {
    var baseMatches = require_baseMatches();
    var baseMatchesProperty = require_baseMatchesProperty();
    var identity = require_identity();
    var isArray = require_isArray();
    var property = require_property();
    function baseIteratee(value) {
      if (typeof value == "function") {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == "object") {
        return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
      }
      return property(value);
    }
    module.exports = baseIteratee;
  }
});

// node_modules/lodash/uniqBy.js
var require_uniqBy = __commonJS({
  "node_modules/lodash/uniqBy.js"(exports, module) {
    var baseIteratee = require_baseIteratee();
    var baseUniq = require_baseUniq();
    function uniqBy(array, iteratee) {
      return array && array.length ? baseUniq(array, baseIteratee(iteratee, 2)) : [];
    }
    module.exports = uniqBy;
  }
});

// node_modules/lodash/_baseForOwn.js
var require_baseForOwn = __commonJS({
  "node_modules/lodash/_baseForOwn.js"(exports, module) {
    var baseFor = require_baseFor();
    var keys = require_keys();
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }
    module.exports = baseForOwn;
  }
});

// node_modules/lodash/_createBaseEach.js
var require_createBaseEach = __commonJS({
  "node_modules/lodash/_createBaseEach.js"(exports, module) {
    var isArrayLike = require_isArrayLike();
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length, index = fromRight ? length : -1, iterable = Object(collection);
        while (fromRight ? index-- : ++index < length) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }
    module.exports = createBaseEach;
  }
});

// node_modules/lodash/_baseEach.js
var require_baseEach = __commonJS({
  "node_modules/lodash/_baseEach.js"(exports, module) {
    var baseForOwn = require_baseForOwn();
    var createBaseEach = require_createBaseEach();
    var baseEach = createBaseEach(baseForOwn);
    module.exports = baseEach;
  }
});

// node_modules/lodash/_baseMap.js
var require_baseMap = __commonJS({
  "node_modules/lodash/_baseMap.js"(exports, module) {
    var baseEach = require_baseEach();
    var isArrayLike = require_isArrayLike();
    function baseMap(collection, iteratee) {
      var index = -1, result = isArrayLike(collection) ? Array(collection.length) : [];
      baseEach(collection, function(value, key, collection2) {
        result[++index] = iteratee(value, key, collection2);
      });
      return result;
    }
    module.exports = baseMap;
  }
});

// node_modules/lodash/_baseSortBy.js
var require_baseSortBy = __commonJS({
  "node_modules/lodash/_baseSortBy.js"(exports, module) {
    function baseSortBy(array, comparer) {
      var length = array.length;
      array.sort(comparer);
      while (length--) {
        array[length] = array[length].value;
      }
      return array;
    }
    module.exports = baseSortBy;
  }
});

// node_modules/lodash/_compareAscending.js
var require_compareAscending = __commonJS({
  "node_modules/lodash/_compareAscending.js"(exports, module) {
    var isSymbol = require_isSymbol();
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== void 0, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol(value);
        var othIsDefined = other !== void 0, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol(other);
        if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
          return 1;
        }
        if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }
    module.exports = compareAscending;
  }
});

// node_modules/lodash/_compareMultiple.js
var require_compareMultiple = __commonJS({
  "node_modules/lodash/_compareMultiple.js"(exports, module) {
    var compareAscending = require_compareAscending();
    function compareMultiple(object, other, orders) {
      var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == "desc" ? -1 : 1);
        }
      }
      return object.index - other.index;
    }
    module.exports = compareMultiple;
  }
});

// node_modules/lodash/_baseOrderBy.js
var require_baseOrderBy = __commonJS({
  "node_modules/lodash/_baseOrderBy.js"(exports, module) {
    var arrayMap = require_arrayMap();
    var baseGet = require_baseGet();
    var baseIteratee = require_baseIteratee();
    var baseMap = require_baseMap();
    var baseSortBy = require_baseSortBy();
    var baseUnary = require_baseUnary();
    var compareMultiple = require_compareMultiple();
    var identity = require_identity();
    var isArray = require_isArray();
    function baseOrderBy(collection, iteratees, orders) {
      if (iteratees.length) {
        iteratees = arrayMap(iteratees, function(iteratee) {
          if (isArray(iteratee)) {
            return function(value) {
              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
            };
          }
          return iteratee;
        });
      } else {
        iteratees = [identity];
      }
      var index = -1;
      iteratees = arrayMap(iteratees, baseUnary(baseIteratee));
      var result = baseMap(collection, function(value, key, collection2) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { "criteria": criteria, "index": ++index, "value": value };
      });
      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }
    module.exports = baseOrderBy;
  }
});

// node_modules/lodash/sortBy.js
var require_sortBy = __commonJS({
  "node_modules/lodash/sortBy.js"(exports, module) {
    var baseFlatten = require_baseFlatten();
    var baseOrderBy = require_baseOrderBy();
    var baseRest = require_baseRest();
    var isIterateeCall = require_isIterateeCall();
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });
    module.exports = sortBy;
  }
});

// node_modules/lodash/_baseIsDate.js
var require_baseIsDate = __commonJS({
  "node_modules/lodash/_baseIsDate.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var dateTag = "[object Date]";
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }
    module.exports = baseIsDate;
  }
});

// node_modules/lodash/isDate.js
var require_isDate = __commonJS({
  "node_modules/lodash/isDate.js"(exports, module) {
    var baseIsDate = require_baseIsDate();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsDate = nodeUtil && nodeUtil.isDate;
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
    module.exports = isDate;
  }
});

// node_modules/lodash/_baseFilter.js
var require_baseFilter = __commonJS({
  "node_modules/lodash/_baseFilter.js"(exports, module) {
    var baseEach = require_baseEach();
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection2) {
        if (predicate(value, index, collection2)) {
          result.push(value);
        }
      });
      return result;
    }
    module.exports = baseFilter;
  }
});

// node_modules/lodash/filter.js
var require_filter = __commonJS({
  "node_modules/lodash/filter.js"(exports, module) {
    var arrayFilter = require_arrayFilter();
    var baseFilter = require_baseFilter();
    var baseIteratee = require_baseIteratee();
    var isArray = require_isArray();
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, baseIteratee(predicate, 3));
    }
    module.exports = filter;
  }
});

// node_modules/lodash/isNumber.js
var require_isNumber = __commonJS({
  "node_modules/lodash/isNumber.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var numberTag = "[object Number]";
    function isNumber(value) {
      return typeof value == "number" || isObjectLike(value) && baseGetTag(value) == numberTag;
    }
    module.exports = isNumber;
  }
});

// node_modules/lodash/_arrayEach.js
var require_arrayEach = __commonJS({
  "node_modules/lodash/_arrayEach.js"(exports, module) {
    function arrayEach(array, iteratee) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (iteratee(array[index], index, array) === false) {
          break;
        }
      }
      return array;
    }
    module.exports = arrayEach;
  }
});

// node_modules/lodash/_baseAssign.js
var require_baseAssign = __commonJS({
  "node_modules/lodash/_baseAssign.js"(exports, module) {
    var copyObject = require_copyObject();
    var keys = require_keys();
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }
    module.exports = baseAssign;
  }
});

// node_modules/lodash/_baseAssignIn.js
var require_baseAssignIn = __commonJS({
  "node_modules/lodash/_baseAssignIn.js"(exports, module) {
    var copyObject = require_copyObject();
    var keysIn = require_keysIn();
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }
    module.exports = baseAssignIn;
  }
});

// node_modules/lodash/_copySymbols.js
var require_copySymbols = __commonJS({
  "node_modules/lodash/_copySymbols.js"(exports, module) {
    var copyObject = require_copyObject();
    var getSymbols = require_getSymbols();
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }
    module.exports = copySymbols;
  }
});

// node_modules/lodash/_getSymbolsIn.js
var require_getSymbolsIn = __commonJS({
  "node_modules/lodash/_getSymbolsIn.js"(exports, module) {
    var arrayPush = require_arrayPush();
    var getPrototype = require_getPrototype();
    var getSymbols = require_getSymbols();
    var stubArray = require_stubArray();
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };
    module.exports = getSymbolsIn;
  }
});

// node_modules/lodash/_copySymbolsIn.js
var require_copySymbolsIn = __commonJS({
  "node_modules/lodash/_copySymbolsIn.js"(exports, module) {
    var copyObject = require_copyObject();
    var getSymbolsIn = require_getSymbolsIn();
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }
    module.exports = copySymbolsIn;
  }
});

// node_modules/lodash/_getAllKeysIn.js
var require_getAllKeysIn = __commonJS({
  "node_modules/lodash/_getAllKeysIn.js"(exports, module) {
    var baseGetAllKeys = require_baseGetAllKeys();
    var getSymbolsIn = require_getSymbolsIn();
    var keysIn = require_keysIn();
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }
    module.exports = getAllKeysIn;
  }
});

// node_modules/lodash/_initCloneArray.js
var require_initCloneArray = __commonJS({
  "node_modules/lodash/_initCloneArray.js"(exports, module) {
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function initCloneArray(array) {
      var length = array.length, result = new array.constructor(length);
      if (length && typeof array[0] == "string" && hasOwnProperty.call(array, "index")) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }
    module.exports = initCloneArray;
  }
});

// node_modules/lodash/_cloneDataView.js
var require_cloneDataView = __commonJS({
  "node_modules/lodash/_cloneDataView.js"(exports, module) {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }
    module.exports = cloneDataView;
  }
});

// node_modules/lodash/_cloneRegExp.js
var require_cloneRegExp = __commonJS({
  "node_modules/lodash/_cloneRegExp.js"(exports, module) {
    var reFlags = /\w*$/;
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }
    module.exports = cloneRegExp;
  }
});

// node_modules/lodash/_cloneSymbol.js
var require_cloneSymbol = __commonJS({
  "node_modules/lodash/_cloneSymbol.js"(exports, module) {
    var Symbol = require_Symbol();
    var symbolProto = Symbol ? Symbol.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }
    module.exports = cloneSymbol;
  }
});

// node_modules/lodash/_initCloneByTag.js
var require_initCloneByTag = __commonJS({
  "node_modules/lodash/_initCloneByTag.js"(exports, module) {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    var cloneDataView = require_cloneDataView();
    var cloneRegExp = require_cloneRegExp();
    var cloneSymbol = require_cloneSymbol();
    var cloneTypedArray = require_cloneTypedArray();
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);
        case boolTag:
        case dateTag:
          return new Ctor(+object);
        case dataViewTag:
          return cloneDataView(object, isDeep);
        case float32Tag:
        case float64Tag:
        case int8Tag:
        case int16Tag:
        case int32Tag:
        case uint8Tag:
        case uint8ClampedTag:
        case uint16Tag:
        case uint32Tag:
          return cloneTypedArray(object, isDeep);
        case mapTag:
          return new Ctor();
        case numberTag:
        case stringTag:
          return new Ctor(object);
        case regexpTag:
          return cloneRegExp(object);
        case setTag:
          return new Ctor();
        case symbolTag:
          return cloneSymbol(object);
      }
    }
    module.exports = initCloneByTag;
  }
});

// node_modules/lodash/_baseIsMap.js
var require_baseIsMap = __commonJS({
  "node_modules/lodash/_baseIsMap.js"(exports, module) {
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var mapTag = "[object Map]";
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }
    module.exports = baseIsMap;
  }
});

// node_modules/lodash/isMap.js
var require_isMap = __commonJS({
  "node_modules/lodash/isMap.js"(exports, module) {
    var baseIsMap = require_baseIsMap();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsMap = nodeUtil && nodeUtil.isMap;
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
    module.exports = isMap;
  }
});

// node_modules/lodash/_baseIsSet.js
var require_baseIsSet = __commonJS({
  "node_modules/lodash/_baseIsSet.js"(exports, module) {
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var setTag = "[object Set]";
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }
    module.exports = baseIsSet;
  }
});

// node_modules/lodash/isSet.js
var require_isSet = __commonJS({
  "node_modules/lodash/isSet.js"(exports, module) {
    var baseIsSet = require_baseIsSet();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsSet = nodeUtil && nodeUtil.isSet;
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
    module.exports = isSet;
  }
});

// node_modules/lodash/_baseClone.js
var require_baseClone = __commonJS({
  "node_modules/lodash/_baseClone.js"(exports, module) {
    var Stack = require_Stack();
    var arrayEach = require_arrayEach();
    var assignValue = require_assignValue();
    var baseAssign = require_baseAssign();
    var baseAssignIn = require_baseAssignIn();
    var cloneBuffer = require_cloneBuffer();
    var copyArray = require_copyArray();
    var copySymbols = require_copySymbols();
    var copySymbolsIn = require_copySymbolsIn();
    var getAllKeys = require_getAllKeys();
    var getAllKeysIn = require_getAllKeysIn();
    var getTag = require_getTag();
    var initCloneArray = require_initCloneArray();
    var initCloneByTag = require_initCloneByTag();
    var initCloneObject = require_initCloneObject();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isMap = require_isMap();
    var isObject = require_isObject();
    var isSet = require_isSet();
    var keys = require_keys();
    var keysIn = require_keysIn();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_FLAT_FLAG = 2;
    var CLONE_SYMBOLS_FLAG = 4;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var cloneableTags = {};
    cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
    cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== void 0) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || isFunc && !object) {
          result = isFlat || isFunc ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      stack || (stack = new Stack());
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);
      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key2) {
          result.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
        });
      }
      var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
      var props = isArr ? void 0 : keysFunc(value);
      arrayEach(props || value, function(subValue, key2) {
        if (props) {
          key2 = subValue;
          subValue = value[key2];
        }
        assignValue(result, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
      });
      return result;
    }
    module.exports = baseClone;
  }
});

// node_modules/lodash/_baseSlice.js
var require_baseSlice = __commonJS({
  "node_modules/lodash/_baseSlice.js"(exports, module) {
    function baseSlice(array, start, end) {
      var index = -1, length = array.length;
      if (start < 0) {
        start = -start > length ? 0 : length + start;
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : end - start >>> 0;
      start >>>= 0;
      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }
    module.exports = baseSlice;
  }
});

// node_modules/lodash/_parent.js
var require_parent = __commonJS({
  "node_modules/lodash/_parent.js"(exports, module) {
    var baseGet = require_baseGet();
    var baseSlice = require_baseSlice();
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }
    module.exports = parent;
  }
});

// node_modules/lodash/_baseUnset.js
var require_baseUnset = __commonJS({
  "node_modules/lodash/_baseUnset.js"(exports, module) {
    var castPath = require_castPath();
    var last = require_last();
    var parent = require_parent();
    var toKey = require_toKey();
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }
    module.exports = baseUnset;
  }
});

// node_modules/lodash/_customOmitClone.js
var require_customOmitClone = __commonJS({
  "node_modules/lodash/_customOmitClone.js"(exports, module) {
    var isPlainObject = require_isPlainObject();
    function customOmitClone(value) {
      return isPlainObject(value) ? void 0 : value;
    }
    module.exports = customOmitClone;
  }
});

// node_modules/lodash/omit.js
var require_omit = __commonJS({
  "node_modules/lodash/omit.js"(exports, module) {
    var arrayMap = require_arrayMap();
    var baseClone = require_baseClone();
    var baseUnset = require_baseUnset();
    var castPath = require_castPath();
    var copyObject = require_copyObject();
    var customOmitClone = require_customOmitClone();
    var flatRest = require_flatRest();
    var getAllKeysIn = require_getAllKeysIn();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_FLAT_FLAG = 2;
    var CLONE_SYMBOLS_FLAG = 4;
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });
    module.exports = omit;
  }
});

// node_modules/@nivo/bar/dist/nivo-bar.mjs
var import_react3 = __toESM(require_react(), 1);

// node_modules/@nivo/axes/dist/nivo-axes.mjs
var t2 = __toESM(require_react(), 1);
var import_react = __toESM(require_react(), 1);

// node_modules/@nivo/axes/node_modules/@react-spring/web/dist/react-spring_web.modern.mjs
var import_react_dom = __toESM(require_react_dom(), 1);
var isCustomPropRE = /^--/;
function dangerousStyleValue(name, value) {
  if (value == null || typeof value === "boolean" || value === "")
    return "";
  if (typeof value === "number" && value !== 0 && !isCustomPropRE.test(name) && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]))
    return value + "px";
  return ("" + value).trim();
}
var attributeCache = {};
function applyAnimatedValues(instance, props) {
  if (!instance.nodeType || !instance.setAttribute) {
    return false;
  }
  const isFilterElement = instance.nodeName === "filter" || instance.parentNode && instance.parentNode.nodeName === "filter";
  const {
    className,
    style,
    children,
    scrollTop,
    scrollLeft,
    viewBox,
    ...attributes
  } = props;
  const values = Object.values(attributes);
  const names = Object.keys(attributes).map(
    (name) => isFilterElement || instance.hasAttribute(name) ? name : attributeCache[name] || (attributeCache[name] = name.replace(
      /([A-Z])/g,
      // Attributes are written in dash case
      (n5) => "-" + n5.toLowerCase()
    ))
  );
  if (children !== void 0) {
    instance.textContent = children;
  }
  for (const name in style) {
    if (style.hasOwnProperty(name)) {
      const value = dangerousStyleValue(name, style[name]);
      if (isCustomPropRE.test(name)) {
        instance.style.setProperty(name, value);
      } else {
        instance.style[name] = value;
      }
    }
  }
  names.forEach((name, i5) => {
    instance.setAttribute(name, values[i5]);
  });
  if (className !== void 0) {
    instance.className = className;
  }
  if (scrollTop !== void 0) {
    instance.scrollTop = scrollTop;
  }
  if (scrollLeft !== void 0) {
    instance.scrollLeft = scrollLeft;
  }
  if (viewBox !== void 0) {
    instance.setAttribute("viewBox", viewBox);
  }
}
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};
var prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);
var prefixes = ["Webkit", "Ms", "Moz", "O"];
isUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {
  prefixes.forEach((prefix) => acc[prefixKey(prefix, prop)] = acc[prop]);
  return acc;
}, isUnitlessNumber);
var domTransforms = /^(matrix|translate|scale|rotate|skew)/;
var pxTransforms = /^(translate)/;
var degTransforms = /^(rotate|skew)/;
var addUnit = (value, unit) => is.num(value) && value !== 0 ? value + unit : value;
var isValueIdentity = (value, id) => is.arr(value) ? value.every((v2) => isValueIdentity(v2, id)) : is.num(value) ? value === id : parseFloat(value) === id;
var AnimatedStyle = class extends AnimatedObject {
  constructor({ x: x2, y, z: z4, ...style }) {
    const inputs = [];
    const transforms = [];
    if (x2 || y || z4) {
      inputs.push([x2 || 0, y || 0, z4 || 0]);
      transforms.push((xyz) => [
        `translate3d(${xyz.map((v2) => addUnit(v2, "px")).join(",")})`,
        // prettier-ignore
        isValueIdentity(xyz, 0)
      ]);
    }
    eachProp(style, (value, key) => {
      if (key === "transform") {
        inputs.push([value || ""]);
        transforms.push((transform) => [transform, transform === ""]);
      } else if (domTransforms.test(key)) {
        delete style[key];
        if (is.und(value))
          return;
        const unit = pxTransforms.test(key) ? "px" : degTransforms.test(key) ? "deg" : "";
        inputs.push(toArray(value));
        transforms.push(
          key === "rotate3d" ? ([x22, y2, z22, deg]) => [
            `rotate3d(${x22},${y2},${z22},${addUnit(deg, unit)})`,
            isValueIdentity(deg, 0)
          ] : (input) => [
            `${key}(${input.map((v2) => addUnit(v2, unit)).join(",")})`,
            isValueIdentity(input, key.startsWith("scale") ? 1 : 0)
          ]
        );
      }
    });
    if (inputs.length) {
      style.transform = new FluidTransform(inputs, transforms);
    }
    super(style);
  }
};
var FluidTransform = class extends FluidValue {
  constructor(inputs, transforms) {
    super();
    this.inputs = inputs;
    this.transforms = transforms;
    this._value = null;
  }
  get() {
    return this._value || (this._value = this._get());
  }
  _get() {
    let transform = "";
    let identity = true;
    each(this.inputs, (input, i5) => {
      const arg1 = getFluidValue(input[0]);
      const [t5, id] = this.transforms[i5](
        is.arr(arg1) ? arg1 : input.map(getFluidValue)
      );
      transform += " " + t5;
      identity = identity && id;
    });
    return identity ? "none" : transform;
  }
  // Start observing our inputs once we have an observer.
  observerAdded(count) {
    if (count == 1)
      each(
        this.inputs,
        (input) => each(
          input,
          (value) => hasFluidValue(value) && addFluidObserver(value, this)
        )
      );
  }
  // Stop observing our inputs once we have no observers.
  observerRemoved(count) {
    if (count == 0)
      each(
        this.inputs,
        (input) => each(
          input,
          (value) => hasFluidValue(value) && removeFluidObserver(value, this)
        )
      );
  }
  eventObserved(event) {
    if (event.type == "change") {
      this._value = null;
    }
    callFluidObservers(this, event);
  }
};
var primitives = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
];
globals_exports.assign({
  batchedUpdates: import_react_dom.unstable_batchedUpdates,
  createStringInterpolator: createStringInterpolator2,
  colors: colors2
});
var host = createHost(primitives, {
  applyAnimatedValues,
  createAnimatedStyle: (style) => new AnimatedStyle(style),
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  getComponentProps: ({ scrollTop, scrollLeft, ...props }) => props
});
var animated = host.animated;

// node_modules/@nivo/scales/dist/nivo-scales.mjs
var import_uniq = __toESM(require_uniq(), 1);
var import_uniqBy = __toESM(require_uniqBy(), 1);
var import_sortBy = __toESM(require_sortBy(), 1);
var import_last = __toESM(require_last(), 1);
var import_isDate = __toESM(require_isDate(), 1);
var L2 = [function(n5) {
  return n5.setMilliseconds(0);
}, function(n5) {
  return n5.setSeconds(0);
}, function(n5) {
  return n5.setMinutes(0);
}, function(n5) {
  return n5.setHours(0);
}, function(n5) {
  return n5.setDate(1);
}, function(n5) {
  return n5.setMonth(0);
}];
var Q = { millisecond: [], second: L2.slice(0, 1), minute: L2.slice(0, 2), hour: L2.slice(0, 3), day: L2.slice(0, 4), month: L2.slice(0, 5), year: L2.slice(0, 6) };
var W = function(n5) {
  return function(t5) {
    return Q[n5].forEach(function(n6) {
      n6(t5);
    }), t5;
  };
};
var X = function(n5) {
  var t5 = n5.format, e5 = void 0 === t5 ? "native" : t5, r4 = n5.precision, i5 = void 0 === r4 ? "millisecond" : r4, u = n5.useUTC, c = void 0 === u || u, s = W(i5);
  return function(n6) {
    if (void 0 === n6)
      return n6;
    if ("native" === e5 || n6 instanceof Date)
      return s(n6);
    var t6 = c ? utcParse(e5) : timeParse(e5);
    return s(t6(n6));
  };
};
var Y = { type: "linear", min: 0, max: "auto", stacked: false, reverse: false, clamp: false, nice: true, round: false };
var Z = function(n5, t5, e5, r4) {
  var i5, a4, o4, c, s = n5.min, d2 = void 0 === s ? Y.min : s, m2 = n5.max, f = void 0 === m2 ? Y.max : m2, l2 = n5.stacked, y = void 0 === l2 ? Y.stacked : l2, h = n5.reverse, g2 = void 0 === h ? Y.reverse : h, x2 = n5.clamp, k2 = void 0 === x2 ? Y.clamp : x2, T5 = n5.nice, b4 = void 0 === T5 ? Y.nice : T5, M3 = n5.round, w4 = void 0 === M3 ? Y.round : M3;
  "auto" === d2 ? i5 = true === y ? null != (a4 = t5.minStacked) ? a4 : 0 : t5.min : i5 = d2;
  "auto" === f ? o4 = true === y ? null != (c = t5.maxStacked) ? c : 0 : t5.max : o4 = f;
  var E4 = linear().range("x" === r4 ? [0, e5] : [e5, 0]).interpolate(w4 ? round_default : number_default).domain(g2 ? [o4, i5] : [i5, o4]).clamp(k2);
  return true === b4 ? E4.nice() : "number" == typeof b4 && E4.nice(b4), _(E4, y);
};
var _ = function(n5, t5) {
  void 0 === t5 && (t5 = false);
  var e5 = n5;
  return e5.type = "linear", e5.stacked = t5, e5;
};
var nn = function(n5, t5, e5) {
  var r4 = point().range([0, e5]).domain(t5.all);
  return r4.type = "point", r4;
};
var en = { type: "band", round: false };
var rn = function(n5, t5, e5, r4) {
  var i5 = n5.round, a4 = void 0 === i5 ? en.round : i5, o4 = band().range("x" === r4 ? [0, e5] : [e5, 0]).domain(t5.all).round(a4);
  return an(o4);
};
var an = function(n5) {
  var t5 = n5;
  return t5.type = "band", t5;
};
var on = { type: "time", format: "native", precision: "millisecond", min: "auto", max: "auto", useUTC: true, nice: false };
var un = function(n5, t5, e5) {
  var r4, i5, a4 = n5.format, o4 = void 0 === a4 ? on.format : a4, u = n5.precision, c = void 0 === u ? on.precision : u, s = n5.min, f = void 0 === s ? on.min : s, l2 = n5.max, v2 = void 0 === l2 ? on.max : l2, p2 = n5.useUTC, y = void 0 === p2 ? on.useUTC : p2, h = n5.nice, g2 = void 0 === h ? on.nice : h, x2 = X({ format: o4, precision: c, useUTC: y });
  r4 = "auto" === f ? x2(t5.min) : "native" !== o4 ? x2(f) : f, i5 = "auto" === v2 ? x2(t5.max) : "native" !== o4 ? x2(v2) : v2;
  var k2 = y ? utcTime() : time();
  k2.range([0, e5]), r4 && i5 && k2.domain([r4, i5]), true === g2 ? k2.nice() : "object" != typeof g2 && "number" != typeof g2 || k2.nice(g2);
  var T5 = k2;
  return T5.type = "time", T5.useUTC = y, T5;
};
var cn2 = { type: "log", base: 10, min: "auto", max: "auto", round: false, reverse: false, nice: true };
var sn = function(n5, t5, e5, r4) {
  var i5, a4 = n5.base, o4 = void 0 === a4 ? cn2.base : a4, u = n5.min, c = void 0 === u ? cn2.min : u, s = n5.max, d2 = void 0 === s ? cn2.max : s, m2 = n5.round, l2 = void 0 === m2 ? cn2.round : m2, v2 = n5.reverse, p2 = void 0 === v2 ? cn2.reverse : v2, y = n5.nice, h = void 0 === y ? cn2.nice : y;
  if (t5.all.some(function(n6) {
    return 0 === n6;
  }))
    throw new Error("a log scale domain must not include or cross zero");
  var g2, x2, k2 = false;
  if (t5.all.filter(function(n6) {
    return null != n6;
  }).forEach(function(n6) {
    k2 || (void 0 === i5 ? i5 = Math.sign(n6) : Math.sign(n6) !== i5 && (k2 = true));
  }), k2)
    throw new Error("a log scale domain must be strictly-positive or strictly-negative");
  g2 = "auto" === c ? t5.min : c, x2 = "auto" === d2 ? t5.max : d2;
  var T5 = log().base(o4), b4 = "x" === r4 ? [0, e5] : [e5, 0];
  true === l2 ? T5.rangeRound(b4) : T5.range(b4), true === p2 ? T5.domain([x2, g2]) : T5.domain([g2, x2]), true === h ? T5.nice() : "number" == typeof h && T5.nice(h);
  var M3 = T5;
  return M3.type = "log", M3;
};
var dn = { type: "symlog", constant: 1, min: "auto", max: "auto", round: false, reverse: false, nice: true };
var mn = function(n5, t5, e5, r4) {
  var i5, a4, o4 = n5.constant, u = void 0 === o4 ? dn.constant : o4, c = n5.min, s = void 0 === c ? dn.min : c, d2 = n5.max, m2 = void 0 === d2 ? dn.max : d2, f = n5.round, v2 = void 0 === f ? dn.round : f, p2 = n5.reverse, y = void 0 === p2 ? dn.reverse : p2, h = n5.nice, g2 = void 0 === h ? dn.nice : h;
  i5 = "auto" === s ? t5.min : s, a4 = "auto" === m2 ? t5.max : m2;
  var x2 = symlog().constant(u), k2 = "x" === r4 ? [0, e5] : [e5, 0];
  true === v2 ? x2.rangeRound(k2) : x2.range(k2), true === y ? x2.domain([a4, i5]) : x2.domain([i5, a4]), true === g2 ? x2.nice() : "number" == typeof g2 && x2.nice(g2);
  var T5 = x2;
  return T5.type = "symlog", T5;
};
function pn(n5, t5, e5, r4) {
  switch (n5.type) {
    case "linear":
      return Z(n5, t5, e5, r4);
    case "point":
      return nn(0, t5, e5);
    case "band":
      return rn(n5, t5, e5, r4);
    case "time":
      return un(n5, t5, e5);
    case "log":
      return sn(n5, t5, e5, r4);
    case "symlog":
      return mn(n5, t5, e5, r4);
    default:
      throw new Error("invalid scale spec");
  }
}
var Mn2 = function(n5) {
  var t5 = n5.bandwidth();
  if (0 === t5)
    return n5;
  var e5 = t5 / 2;
  return n5.round() && (e5 = Math.round(e5)), function(t6) {
    var r4;
    return (null != (r4 = n5(t6)) ? r4 : 0) + e5;
  };
};
var wn2 = { millisecond: [millisecond_default, millisecond_default], second: [second_default, second_default], minute: [minute_default, utcMinute_default], hour: [hour_default, utcHour_default], day: [newInterval(function(n5) {
  return n5.setHours(0, 0, 0, 0);
}, function(n5, t5) {
  return n5.setDate(n5.getDate() + t5);
}, function(n5, t5) {
  return (t5.getTime() - n5.getTime()) / 864e5;
}, function(n5) {
  return Math.floor(n5.getTime() / 864e5);
}), newInterval(function(n5) {
  return n5.setUTCHours(0, 0, 0, 0);
}, function(n5, t5) {
  return n5.setUTCDate(n5.getUTCDate() + t5);
}, function(n5, t5) {
  return (t5.getTime() - n5.getTime()) / 864e5;
}, function(n5) {
  return Math.floor(n5.getTime() / 864e5);
})], week: [sunday, utcSunday], sunday: [sunday, utcSunday], monday: [monday, utcMonday], tuesday: [tuesday, utcTuesday], wednesday: [wednesday, utcWednesday], thursday: [thursday, utcThursday], friday: [friday, utcFriday], saturday: [saturday, utcSaturday], month: [month_default, utcMonth_default], year: [year_default, utcYear_default] };
var En = Object.keys(wn2);
var Sn = new RegExp("^every\\s*(\\d+)?\\s*(" + En.join("|") + ")s?$", "i");
var Cn = function(n5, t5) {
  if (Array.isArray(t5))
    return t5;
  if ("string" == typeof t5 && "useUTC" in n5) {
    var e5 = t5.match(Sn);
    if (e5) {
      var r4 = e5[1], i5 = e5[2], a4 = wn2[i5][n5.useUTC ? 1 : 0];
      if ("day" === i5) {
        var o4, u, c = n5.domain(), s = c[0], d2 = c[1], m2 = new Date(d2);
        return m2.setDate(m2.getDate() + 1), null != (o4 = null == (u = a4.every(Number(null != r4 ? r4 : 1))) ? void 0 : u.range(s, m2)) ? o4 : [];
      }
      if (void 0 === r4)
        return n5.ticks(a4);
      var f = a4.every(Number(r4));
      if (f)
        return n5.ticks(f);
    }
    throw new Error("Invalid tickValues: " + t5);
  }
  if ("ticks" in n5) {
    if (void 0 === t5)
      return n5.ticks();
    if ("number" == typeof (l2 = t5) && isFinite(l2) && Math.floor(l2) === l2)
      return n5.ticks(t5);
  }
  var l2;
  return n5.domain();
};

// node_modules/@nivo/axes/dist/nivo-axes.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
function A() {
  return A = Object.assign ? Object.assign.bind() : function(t5) {
    for (var e5 = 1; e5 < arguments.length; e5++) {
      var i5 = arguments[e5];
      for (var n5 in i5)
        ({}).hasOwnProperty.call(i5, n5) && (t5[n5] = i5[n5]);
    }
    return t5;
  }, A.apply(null, arguments);
}
var T2 = function(t5) {
  var e5, i5 = t5.axis, n5 = t5.scale, r4 = t5.ticksPosition, o4 = t5.tickValues, l2 = t5.tickSize, c = t5.tickPadding, s = t5.tickRotation, f = t5.truncateTickAt, d2 = t5.engine, u = void 0 === d2 ? "svg" : d2, x2 = Cn(n5, o4), m2 = gt[u], y = "bandwidth" in n5 ? Mn2(n5) : n5, g2 = { lineX: 0, lineY: 0 }, v2 = { textX: 0, textY: 0 }, k2 = "object" == typeof document && "rtl" === document.dir, b4 = m2.align.center, P3 = m2.baseline.center;
  "x" === i5 ? (e5 = function(t6) {
    var e6;
    return { x: null != (e6 = y(t6)) ? e6 : 0, y: 0 };
  }, g2.lineY = l2 * ("after" === r4 ? 1 : -1), v2.textY = (l2 + c) * ("after" === r4 ? 1 : -1), P3 = "after" === r4 ? m2.baseline.top : m2.baseline.bottom, 0 === s ? b4 = m2.align.center : "after" === r4 && s < 0 || "before" === r4 && s > 0 ? (b4 = m2.align[k2 ? "left" : "right"], P3 = m2.baseline.center) : ("after" === r4 && s > 0 || "before" === r4 && s < 0) && (b4 = m2.align[k2 ? "right" : "left"], P3 = m2.baseline.center)) : (e5 = function(t6) {
    var e6;
    return { x: 0, y: null != (e6 = y(t6)) ? e6 : 0 };
  }, g2.lineX = l2 * ("after" === r4 ? 1 : -1), v2.textX = (l2 + c) * ("after" === r4 ? 1 : -1), b4 = "after" === r4 ? m2.align.left : m2.align.right);
  return { ticks: x2.map(function(t6) {
    var i6 = "string" == typeof t6 ? function(t7) {
      var e6 = String(t7).length;
      return f && f > 0 && e6 > f ? "" + String(t7).slice(0, f).concat("...") : "" + t7;
    }(t6) : t6;
    return A({ key: t6 instanceof Date ? "" + t6.valueOf() : "" + t6, value: i6 }, e5(t6), g2, v2);
  }), textAlign: b4, textBaseline: P3 };
};
var w2 = function(t5, e5) {
  if (void 0 === t5 || "function" == typeof t5)
    return t5;
  if ("time" === e5.type) {
    var i5 = timeFormat(t5);
    return function(t6) {
      return i5(t6 instanceof Date ? t6 : new Date(t6));
    };
  }
  return format(t5);
};
var O = function(t5) {
  var e5, i5 = t5.width, n5 = t5.height, r4 = t5.scale, a4 = t5.axis, o4 = t5.values, l2 = (e5 = o4, Array.isArray(e5) ? o4 : void 0) || Cn(r4, o4), c = "bandwidth" in r4 ? Mn2(r4) : r4, s = "x" === a4 ? l2.map(function(t6) {
    var e6, i6;
    return { key: t6 instanceof Date ? "" + t6.valueOf() : "" + t6, x1: null != (e6 = c(t6)) ? e6 : 0, x2: null != (i6 = c(t6)) ? i6 : 0, y1: 0, y2: n5 };
  }) : l2.map(function(t6) {
    var e6, n6;
    return { key: t6 instanceof Date ? "" + t6.valueOf() : "" + t6, x1: 0, x2: i5, y1: null != (e6 = c(t6)) ? e6 : 0, y2: null != (n6 = c(t6)) ? n6 : 0 };
  });
  return s;
};
var X2 = (0, import_react.memo)(function(t5) {
  var e5, n5 = t5.value, r4 = t5.format, a4 = t5.lineX, o4 = t5.lineY, l2 = t5.onClick, c = t5.textBaseline, s = t5.textAnchor, f = t5.theme, u = t5.animatedProps, x2 = null != (e5 = null == r4 ? void 0 : r4(n5)) ? e5 : n5, y = (0, import_react.useMemo)(function() {
    var t6 = { opacity: u.opacity };
    return l2 ? { style: A({}, t6, { cursor: "pointer" }), onClick: function(t7) {
      return l2(t7, x2);
    } } : { style: t6 };
  }, [u.opacity, l2, x2]);
  return (0, import_jsx_runtime.jsxs)(animated.g, A({ transform: u.transform }, y, { children: [(0, import_jsx_runtime.jsx)("line", { x1: 0, x2: a4, y1: 0, y2: o4, style: f.line }), (0, import_jsx_runtime.jsx)(b, { dominantBaseline: c, textAnchor: s, transform: u.textTransform, style: f.text, children: "" + x2 })] }));
});
var Y2 = { tickSize: 5, tickPadding: 5, tickRotation: 0, legendPosition: "middle", legendOffset: 0 };
var B = function(e5) {
  var r4 = e5.axis, a4 = e5.scale, l2 = e5.x, f = void 0 === l2 ? 0 : l2, u = e5.y, x2 = void 0 === u ? 0 : u, v2 = e5.length, k2 = e5.ticksPosition, h = e5.tickValues, p2 = e5.tickSize, O3 = void 0 === p2 ? Y2.tickSize : p2, B2 = e5.tickPadding, z4 = void 0 === B2 ? Y2.tickPadding : B2, R4 = e5.tickRotation, V3 = void 0 === R4 ? Y2.tickRotation : R4, C3 = e5.format, D3 = e5.renderTick, j3 = void 0 === D3 ? X2 : D3, E4 = e5.truncateTickAt, W4 = e5.legend, q3 = e5.legendPosition, H2 = void 0 === q3 ? Y2.legendPosition : q3, I2 = e5.legendOffset, F = void 0 === I2 ? Y2.legendOffset : I2, G = e5.style, J3 = e5.onClick, K = e5.ariaHidden, L4 = M(), M3 = w(L4.axis, G), N = (0, import_react.useMemo)(function() {
    return w2(C3, a4);
  }, [C3, a4]), Q3 = T2({ axis: r4, scale: a4, ticksPosition: k2, tickValues: h, tickSize: O3, tickPadding: z4, tickRotation: V3, truncateTickAt: E4 }), U2 = Q3.ticks, Z3 = Q3.textAlign, $2 = Q3.textBaseline, _2 = null;
  if (void 0 !== W4) {
    var tt, et = 0, it = 0, nt = 0;
    "y" === r4 ? (nt = -90, et = F, "start" === H2 ? (tt = "start", it = v2) : "middle" === H2 ? (tt = "middle", it = v2 / 2) : "end" === H2 && (tt = "end")) : (it = F, "start" === H2 ? tt = "start" : "middle" === H2 ? (tt = "middle", et = v2 / 2) : "end" === H2 && (tt = "end", et = v2)), _2 = (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: (0, import_jsx_runtime.jsx)(b, { transform: "translate(" + et + ", " + it + ") rotate(" + nt + ")", textAnchor: tt, style: A({}, M3.legend.text, { dominantBaseline: "central" }), children: W4 }) });
  }
  var rt = Dr(), at = rt.animate, ot = rt.config, lt = useSpring({ transform: "translate(" + f + "," + x2 + ")", lineX2: "x" === r4 ? v2 : 0, lineY2: "x" === r4 ? 0 : v2, config: ot, immediate: !at }), ct2 = (0, import_react.useCallback)(function(t5) {
    return { opacity: 1, transform: "translate(" + t5.x + "," + t5.y + ")", textTransform: "translate(" + t5.textX + "," + t5.textY + ") rotate(" + V3 + ")" };
  }, [V3]), st = (0, import_react.useCallback)(function(t5) {
    return { opacity: 0, transform: "translate(" + t5.x + "," + t5.y + ")", textTransform: "translate(" + t5.textX + "," + t5.textY + ") rotate(" + V3 + ")" };
  }, [V3]), ft2 = useTransition(U2, { keys: function(t5) {
    return t5.key;
  }, initial: ct2, from: st, enter: ct2, update: ct2, leave: { opacity: 0 }, config: ot, immediate: !at });
  return (0, import_jsx_runtime.jsxs)(animated.g, { transform: lt.transform, "aria-hidden": K, children: [ft2(function(e6, i5, n5, r5) {
    return t2.createElement(j3, A({ tickIndex: r5, format: N, rotate: V3, textBaseline: $2, textAnchor: Z3, truncateTickAt: E4, animatedProps: e6, theme: M3.ticks }, i5, J3 ? { onClick: J3 } : {}));
  }), (0, import_jsx_runtime.jsx)(animated.line, { style: M3.domain.line, x1: 0, x2: lt.lineX2, y1: 0, y2: lt.lineY2 }), _2] });
};
var z2 = (0, import_react.memo)(B);
var R2 = ["top", "right", "bottom", "left"];
var V = (0, import_react.memo)(function(t5) {
  var e5 = t5.xScale, i5 = t5.yScale, n5 = t5.width, r4 = t5.height, a4 = { top: t5.top, right: t5.right, bottom: t5.bottom, left: t5.left };
  return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: R2.map(function(t6) {
    var o4 = a4[t6];
    if (!o4)
      return null;
    var l2 = "top" === t6 || "bottom" === t6;
    return (0, import_jsx_runtime.jsx)(z2, A({}, o4, { axis: l2 ? "x" : "y", x: "right" === t6 ? n5 : 0, y: "bottom" === t6 ? r4 : 0, scale: l2 ? e5 : i5, length: l2 ? n5 : r4, ticksPosition: "top" === t6 || "left" === t6 ? "before" : "after", truncateTickAt: o4.truncateTickAt }), t6);
  }) });
});
var C = (0, import_react.memo)(function(t5) {
  var e5 = t5.animatedProps, i5 = M();
  return (0, import_jsx_runtime.jsx)(animated.line, A({}, e5, i5.grid.line));
});
var D = (0, import_react.memo)(function(t5) {
  var e5 = t5.lines, i5 = Dr(), n5 = i5.animate, a4 = i5.config, l2 = useTransition(e5, { keys: function(t6) {
    return t6.key;
  }, initial: function(t6) {
    return { opacity: 1, x1: t6.x1, x2: t6.x2, y1: t6.y1, y2: t6.y2 };
  }, from: function(t6) {
    return { opacity: 0, x1: t6.x1, x2: t6.x2, y1: t6.y1, y2: t6.y2 };
  }, enter: function(t6) {
    return { opacity: 1, x1: t6.x1, x2: t6.x2, y1: t6.y1, y2: t6.y2 };
  }, update: function(t6) {
    return { opacity: 1, x1: t6.x1, x2: t6.x2, y1: t6.y1, y2: t6.y2 };
  }, leave: { opacity: 0 }, config: a4, immediate: !n5 });
  return (0, import_jsx_runtime.jsx)("g", { children: l2(function(t6, e6) {
    return (0, import_react.createElement)(C, A({}, e6, { key: e6.key, animatedProps: t6 }));
  }) });
});
var j = (0, import_react.memo)(function(t5) {
  var e5 = t5.width, n5 = t5.height, r4 = t5.xScale, a4 = t5.yScale, o4 = t5.xValues, l2 = t5.yValues, c = (0, import_react.useMemo)(function() {
    return !!r4 && O({ width: e5, height: n5, scale: r4, axis: "x", values: o4 });
  }, [r4, o4, e5, n5]), s = (0, import_react.useMemo)(function() {
    return !!a4 && O({ width: e5, height: n5, scale: a4, axis: "y", values: l2 });
  }, [n5, e5, a4, l2]);
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [c && (0, import_jsx_runtime.jsx)(D, { lines: c }), s && (0, import_jsx_runtime.jsx)(D, { lines: s })] });
});
var E2 = function(t5, e5) {
  var i5, n5, r4 = e5.axis, a4 = e5.scale, o4 = e5.x, c = void 0 === o4 ? 0 : o4, s = e5.y, d2 = void 0 === s ? 0 : s, m2 = e5.length, y = e5.ticksPosition, g2 = e5.tickValues, v2 = e5.tickSize, k2 = void 0 === v2 ? Y2.tickSize : v2, h = e5.tickPadding, p2 = void 0 === h ? Y2.tickPadding : h, b4 = e5.tickRotation, P3 = void 0 === b4 ? Y2.tickRotation : b4, S3 = e5.format, A2 = e5.legend, w4 = e5.legendPosition, O3 = void 0 === w4 ? Y2.legendPosition : w4, X3 = e5.legendOffset, B2 = void 0 === X3 ? Y2.legendOffset : X3, z4 = e5.theme, R4 = e5.style, V3 = T2({ axis: r4, scale: a4, ticksPosition: y, tickValues: g2, tickSize: k2, tickPadding: p2, tickRotation: P3, engine: "canvas" }), C3 = V3.ticks, D3 = V3.textAlign, j3 = V3.textBaseline;
  t5.save(), t5.translate(c, d2);
  var E4 = R(z4.axis, R4);
  t5.textAlign = D3, t5.textBaseline = j3, a(t5, E4.ticks.text);
  var W4 = null != (i5 = E4.domain.line.strokeWidth) ? i5 : 0;
  "string" != typeof W4 && W4 > 0 && (t5.lineWidth = W4, t5.lineCap = "square", E4.domain.line.stroke && (t5.strokeStyle = E4.domain.line.stroke), t5.beginPath(), t5.moveTo(0, 0), t5.lineTo("x" === r4 ? m2 : 0, "x" === r4 ? 0 : m2), t5.stroke());
  var q3 = "function" == typeof S3 ? S3 : function(t6) {
    return "" + t6;
  }, H2 = null != (n5 = E4.ticks.line.strokeWidth) ? n5 : 0, I2 = "string" != typeof H2 && H2 > 0;
  if (C3.forEach(function(e6) {
    I2 && (t5.lineWidth = H2, t5.lineCap = "square", E4.ticks.line.stroke && (t5.strokeStyle = E4.ticks.line.stroke), t5.beginPath(), t5.moveTo(e6.x, e6.y), t5.lineTo(e6.x + e6.lineX, e6.y + e6.lineY), t5.stroke());
    var i6 = q3(e6.value);
    t5.save(), t5.translate(e6.x + e6.textX, e6.y + e6.textY), t5.rotate(ut(P3)), d(t5, E4.ticks.text, "" + i6), t5.fillText("" + i6, 0, 0), t5.restore();
  }), void 0 !== A2) {
    var F = 0, G = 0, J3 = 0, K = "center";
    "y" === r4 ? (J3 = -90, F = B2, "start" === O3 ? (K = "start", G = m2) : "middle" === O3 ? (K = "center", G = m2 / 2) : "end" === O3 && (K = "end")) : (G = B2, "start" === O3 ? K = "start" : "middle" === O3 ? (K = "center", F = m2 / 2) : "end" === O3 && (K = "end", F = m2)), t5.translate(F, G), t5.rotate(ut(J3)), a(t5, E4.legend.text), E4.legend.text.fill && (t5.fillStyle = E4.legend.text.fill), t5.textAlign = K, t5.textBaseline = "middle", d(t5, E4.legend.text, A2);
  }
  t5.restore();
};
var W2 = function(t5, e5) {
  var i5 = e5.xScale, n5 = e5.yScale, r4 = e5.width, a4 = e5.height, o4 = e5.top, l2 = e5.right, c = e5.bottom, s = e5.left, f = e5.theme, d2 = { top: o4, right: l2, bottom: c, left: s };
  R2.forEach(function(e6) {
    var o5 = d2[e6];
    if (!o5)
      return null;
    var l3 = "top" === e6 || "bottom" === e6, c2 = "top" === e6 || "left" === e6 ? "before" : "after", s2 = l3 ? i5 : n5, u = w2(o5.format, s2);
    E2(t5, A({}, o5, { axis: l3 ? "x" : "y", x: "right" === e6 ? r4 : 0, y: "bottom" === e6 ? a4 : 0, scale: s2, format: u, length: l3 ? r4 : a4, ticksPosition: c2, theme: f }));
  });
};
var q = function(t5, e5) {
  var i5 = e5.width, n5 = e5.height, r4 = e5.scale, a4 = e5.axis, o4 = e5.values;
  O({ width: i5, height: n5, scale: r4, axis: a4, values: o4 }).forEach(function(e6) {
    t5.beginPath(), t5.moveTo(e6.x1, e6.y1), t5.lineTo(e6.x2, e6.y2), t5.stroke();
  });
};

// node_modules/@nivo/bar/node_modules/@react-spring/web/dist/react-spring_web.modern.mjs
var import_react_dom2 = __toESM(require_react_dom(), 1);
var isCustomPropRE2 = /^--/;
function dangerousStyleValue2(name, value) {
  if (value == null || typeof value === "boolean" || value === "")
    return "";
  if (typeof value === "number" && value !== 0 && !isCustomPropRE2.test(name) && !(isUnitlessNumber2.hasOwnProperty(name) && isUnitlessNumber2[name]))
    return value + "px";
  return ("" + value).trim();
}
var attributeCache2 = {};
function applyAnimatedValues2(instance, props) {
  if (!instance.nodeType || !instance.setAttribute) {
    return false;
  }
  const isFilterElement = instance.nodeName === "filter" || instance.parentNode && instance.parentNode.nodeName === "filter";
  const {
    className,
    style,
    children,
    scrollTop,
    scrollLeft,
    viewBox,
    ...attributes
  } = props;
  const values = Object.values(attributes);
  const names = Object.keys(attributes).map(
    (name) => isFilterElement || instance.hasAttribute(name) ? name : attributeCache2[name] || (attributeCache2[name] = name.replace(
      /([A-Z])/g,
      // Attributes are written in dash case
      (n5) => "-" + n5.toLowerCase()
    ))
  );
  if (children !== void 0) {
    instance.textContent = children;
  }
  for (const name in style) {
    if (style.hasOwnProperty(name)) {
      const value = dangerousStyleValue2(name, style[name]);
      if (isCustomPropRE2.test(name)) {
        instance.style.setProperty(name, value);
      } else {
        instance.style[name] = value;
      }
    }
  }
  names.forEach((name, i5) => {
    instance.setAttribute(name, values[i5]);
  });
  if (className !== void 0) {
    instance.className = className;
  }
  if (scrollTop !== void 0) {
    instance.scrollTop = scrollTop;
  }
  if (scrollLeft !== void 0) {
    instance.scrollLeft = scrollLeft;
  }
  if (viewBox !== void 0) {
    instance.setAttribute("viewBox", viewBox);
  }
}
var isUnitlessNumber2 = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};
var prefixKey2 = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);
var prefixes2 = ["Webkit", "Ms", "Moz", "O"];
isUnitlessNumber2 = Object.keys(isUnitlessNumber2).reduce((acc, prop) => {
  prefixes2.forEach((prefix) => acc[prefixKey2(prefix, prop)] = acc[prop]);
  return acc;
}, isUnitlessNumber2);
var domTransforms2 = /^(matrix|translate|scale|rotate|skew)/;
var pxTransforms2 = /^(translate)/;
var degTransforms2 = /^(rotate|skew)/;
var addUnit2 = (value, unit) => is.num(value) && value !== 0 ? value + unit : value;
var isValueIdentity2 = (value, id) => is.arr(value) ? value.every((v2) => isValueIdentity2(v2, id)) : is.num(value) ? value === id : parseFloat(value) === id;
var AnimatedStyle2 = class extends AnimatedObject {
  constructor({ x: x2, y, z: z4, ...style }) {
    const inputs = [];
    const transforms = [];
    if (x2 || y || z4) {
      inputs.push([x2 || 0, y || 0, z4 || 0]);
      transforms.push((xyz) => [
        `translate3d(${xyz.map((v2) => addUnit2(v2, "px")).join(",")})`,
        // prettier-ignore
        isValueIdentity2(xyz, 0)
      ]);
    }
    eachProp(style, (value, key) => {
      if (key === "transform") {
        inputs.push([value || ""]);
        transforms.push((transform) => [transform, transform === ""]);
      } else if (domTransforms2.test(key)) {
        delete style[key];
        if (is.und(value))
          return;
        const unit = pxTransforms2.test(key) ? "px" : degTransforms2.test(key) ? "deg" : "";
        inputs.push(toArray(value));
        transforms.push(
          key === "rotate3d" ? ([x22, y2, z22, deg]) => [
            `rotate3d(${x22},${y2},${z22},${addUnit2(deg, unit)})`,
            isValueIdentity2(deg, 0)
          ] : (input) => [
            `${key}(${input.map((v2) => addUnit2(v2, unit)).join(",")})`,
            isValueIdentity2(input, key.startsWith("scale") ? 1 : 0)
          ]
        );
      }
    });
    if (inputs.length) {
      style.transform = new FluidTransform2(inputs, transforms);
    }
    super(style);
  }
};
var FluidTransform2 = class extends FluidValue {
  constructor(inputs, transforms) {
    super();
    this.inputs = inputs;
    this.transforms = transforms;
    this._value = null;
  }
  get() {
    return this._value || (this._value = this._get());
  }
  _get() {
    let transform = "";
    let identity = true;
    each(this.inputs, (input, i5) => {
      const arg1 = getFluidValue(input[0]);
      const [t5, id] = this.transforms[i5](
        is.arr(arg1) ? arg1 : input.map(getFluidValue)
      );
      transform += " " + t5;
      identity = identity && id;
    });
    return identity ? "none" : transform;
  }
  // Start observing our inputs once we have an observer.
  observerAdded(count) {
    if (count == 1)
      each(
        this.inputs,
        (input) => each(
          input,
          (value) => hasFluidValue(value) && addFluidObserver(value, this)
        )
      );
  }
  // Stop observing our inputs once we have no observers.
  observerRemoved(count) {
    if (count == 0)
      each(
        this.inputs,
        (input) => each(
          input,
          (value) => hasFluidValue(value) && removeFluidObserver(value, this)
        )
      );
  }
  eventObserved(event) {
    if (event.type == "change") {
      this._value = null;
    }
    callFluidObservers(this, event);
  }
};
var primitives2 = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
];
globals_exports.assign({
  batchedUpdates: import_react_dom2.unstable_batchedUpdates,
  createStringInterpolator: createStringInterpolator2,
  colors: colors2
});
var host2 = createHost(primitives2, {
  applyAnimatedValues: applyAnimatedValues2,
  createAnimatedStyle: (style) => new AnimatedStyle2(style),
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  getComponentProps: ({ scrollTop, scrollLeft, ...props }) => props
});
var animated2 = host2.animated;

// node_modules/@nivo/annotations/dist/nivo-annotations.mjs
var import_react2 = __toESM(require_react(), 1);
var import_filter = __toESM(require_filter(), 1);
var import_isNumber = __toESM(require_isNumber(), 1);
var import_omit = __toESM(require_omit(), 1);

// node_modules/@nivo/annotations/node_modules/@react-spring/web/dist/react-spring_web.modern.mjs
var import_react_dom3 = __toESM(require_react_dom(), 1);
var isCustomPropRE3 = /^--/;
function dangerousStyleValue3(name, value) {
  if (value == null || typeof value === "boolean" || value === "")
    return "";
  if (typeof value === "number" && value !== 0 && !isCustomPropRE3.test(name) && !(isUnitlessNumber3.hasOwnProperty(name) && isUnitlessNumber3[name]))
    return value + "px";
  return ("" + value).trim();
}
var attributeCache3 = {};
function applyAnimatedValues3(instance, props) {
  if (!instance.nodeType || !instance.setAttribute) {
    return false;
  }
  const isFilterElement = instance.nodeName === "filter" || instance.parentNode && instance.parentNode.nodeName === "filter";
  const {
    className,
    style,
    children,
    scrollTop,
    scrollLeft,
    viewBox,
    ...attributes
  } = props;
  const values = Object.values(attributes);
  const names = Object.keys(attributes).map(
    (name) => isFilterElement || instance.hasAttribute(name) ? name : attributeCache3[name] || (attributeCache3[name] = name.replace(
      /([A-Z])/g,
      // Attributes are written in dash case
      (n5) => "-" + n5.toLowerCase()
    ))
  );
  if (children !== void 0) {
    instance.textContent = children;
  }
  for (const name in style) {
    if (style.hasOwnProperty(name)) {
      const value = dangerousStyleValue3(name, style[name]);
      if (isCustomPropRE3.test(name)) {
        instance.style.setProperty(name, value);
      } else {
        instance.style[name] = value;
      }
    }
  }
  names.forEach((name, i5) => {
    instance.setAttribute(name, values[i5]);
  });
  if (className !== void 0) {
    instance.className = className;
  }
  if (scrollTop !== void 0) {
    instance.scrollTop = scrollTop;
  }
  if (scrollLeft !== void 0) {
    instance.scrollLeft = scrollLeft;
  }
  if (viewBox !== void 0) {
    instance.setAttribute("viewBox", viewBox);
  }
}
var isUnitlessNumber3 = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};
var prefixKey3 = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);
var prefixes3 = ["Webkit", "Ms", "Moz", "O"];
isUnitlessNumber3 = Object.keys(isUnitlessNumber3).reduce((acc, prop) => {
  prefixes3.forEach((prefix) => acc[prefixKey3(prefix, prop)] = acc[prop]);
  return acc;
}, isUnitlessNumber3);
var domTransforms3 = /^(matrix|translate|scale|rotate|skew)/;
var pxTransforms3 = /^(translate)/;
var degTransforms3 = /^(rotate|skew)/;
var addUnit3 = (value, unit) => is.num(value) && value !== 0 ? value + unit : value;
var isValueIdentity3 = (value, id) => is.arr(value) ? value.every((v2) => isValueIdentity3(v2, id)) : is.num(value) ? value === id : parseFloat(value) === id;
var AnimatedStyle3 = class extends AnimatedObject {
  constructor({ x: x2, y, z: z4, ...style }) {
    const inputs = [];
    const transforms = [];
    if (x2 || y || z4) {
      inputs.push([x2 || 0, y || 0, z4 || 0]);
      transforms.push((xyz) => [
        `translate3d(${xyz.map((v2) => addUnit3(v2, "px")).join(",")})`,
        // prettier-ignore
        isValueIdentity3(xyz, 0)
      ]);
    }
    eachProp(style, (value, key) => {
      if (key === "transform") {
        inputs.push([value || ""]);
        transforms.push((transform) => [transform, transform === ""]);
      } else if (domTransforms3.test(key)) {
        delete style[key];
        if (is.und(value))
          return;
        const unit = pxTransforms3.test(key) ? "px" : degTransforms3.test(key) ? "deg" : "";
        inputs.push(toArray(value));
        transforms.push(
          key === "rotate3d" ? ([x22, y2, z22, deg]) => [
            `rotate3d(${x22},${y2},${z22},${addUnit3(deg, unit)})`,
            isValueIdentity3(deg, 0)
          ] : (input) => [
            `${key}(${input.map((v2) => addUnit3(v2, unit)).join(",")})`,
            isValueIdentity3(input, key.startsWith("scale") ? 1 : 0)
          ]
        );
      }
    });
    if (inputs.length) {
      style.transform = new FluidTransform3(inputs, transforms);
    }
    super(style);
  }
};
var FluidTransform3 = class extends FluidValue {
  constructor(inputs, transforms) {
    super();
    this.inputs = inputs;
    this.transforms = transforms;
    this._value = null;
  }
  get() {
    return this._value || (this._value = this._get());
  }
  _get() {
    let transform = "";
    let identity = true;
    each(this.inputs, (input, i5) => {
      const arg1 = getFluidValue(input[0]);
      const [t5, id] = this.transforms[i5](
        is.arr(arg1) ? arg1 : input.map(getFluidValue)
      );
      transform += " " + t5;
      identity = identity && id;
    });
    return identity ? "none" : transform;
  }
  // Start observing our inputs once we have an observer.
  observerAdded(count) {
    if (count == 1)
      each(
        this.inputs,
        (input) => each(
          input,
          (value) => hasFluidValue(value) && addFluidObserver(value, this)
        )
      );
  }
  // Stop observing our inputs once we have no observers.
  observerRemoved(count) {
    if (count == 0)
      each(
        this.inputs,
        (input) => each(
          input,
          (value) => hasFluidValue(value) && removeFluidObserver(value, this)
        )
      );
  }
  eventObserved(event) {
    if (event.type == "change") {
      this._value = null;
    }
    callFluidObservers(this, event);
  }
};
var primitives3 = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
];
globals_exports.assign({
  batchedUpdates: import_react_dom3.unstable_batchedUpdates,
  createStringInterpolator: createStringInterpolator2,
  colors: colors2
});
var host3 = createHost(primitives3, {
  applyAnimatedValues: applyAnimatedValues3,
  createAnimatedStyle: (style) => new AnimatedStyle3(style),
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  getComponentProps: ({ scrollTop, scrollLeft, ...props }) => props
});
var animated3 = host3.animated;

// node_modules/@nivo/annotations/dist/nivo-annotations.mjs
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
function g() {
  return g = Object.assign ? Object.assign.bind() : function(t5) {
    for (var n5 = 1; n5 < arguments.length; n5++) {
      var i5 = arguments[n5];
      for (var o4 in i5)
        ({}).hasOwnProperty.call(i5, o4) && (t5[o4] = i5[o4]);
    }
    return t5;
  }, g.apply(null, arguments);
}
var k = { dotSize: 4, noteWidth: 120, noteTextOffset: 8, animate: true };
var W3 = function(n5) {
  var i5 = typeof n5;
  return (0, import_react2.isValidElement)(n5) || "string" === i5 || "function" === i5 || "object" === i5;
};
var v = function(t5) {
  var n5 = typeof t5;
  return "string" === n5 || "function" === n5;
};
var b3 = function(t5) {
  return "circle" === t5.type;
};
var w3 = function(t5) {
  return "dot" === t5.type;
};
var z3 = function(t5) {
  return "rect" === t5.type;
};
var P2 = function(t5) {
  var n5 = t5.data, i5 = t5.annotations, e5 = t5.getPosition, r4 = t5.getDimensions;
  return i5.reduce(function(t6, i6) {
    var s = i6.offset || 0;
    return [].concat(t6, (0, import_filter.default)(n5, i6.match).map(function(t7) {
      var n6 = e5(t7), o4 = r4(t7);
      return (b3(i6) || z3(i6)) && (o4.size = o4.size + 2 * s, o4.width = o4.width + 2 * s, o4.height = o4.height + 2 * s), g({}, (0, import_omit.default)(i6, ["match", "offset"]), n6, o4, { size: i6.size || o4.size, datum: t7 });
    }));
  }, []);
};
var C2 = function(t5, n5, i5, o4) {
  var e5 = Math.atan2(o4 - n5, i5 - t5);
  return ht(ct(e5));
};
var S2 = function(t5) {
  var n5, i5, o4 = t5.x, a4 = t5.y, r4 = t5.noteX, s = t5.noteY, h = t5.noteWidth, d2 = void 0 === h ? k.noteWidth : h, c = t5.noteTextOffset, f = void 0 === c ? k.noteTextOffset : c;
  if ((0, import_isNumber.default)(r4))
    n5 = o4 + r4;
  else {
    if (void 0 === r4.abs)
      throw new Error("noteX should be either a number or an object containing an 'abs' property");
    n5 = r4.abs;
  }
  if ((0, import_isNumber.default)(s))
    i5 = a4 + s;
  else {
    if (void 0 === s.abs)
      throw new Error("noteY should be either a number or an object containing an 'abs' property");
    i5 = s.abs;
  }
  var y = o4, x2 = a4, m2 = C2(o4, a4, n5, i5);
  if (b3(t5)) {
    var p2 = ft(ut(m2), t5.size / 2);
    y += p2.x, x2 += p2.y;
  }
  if (z3(t5)) {
    var g2 = Math.round((m2 + 90) / 45) % 8;
    0 === g2 && (x2 -= t5.height / 2), 1 === g2 && (y += t5.width / 2, x2 -= t5.height / 2), 2 === g2 && (y += t5.width / 2), 3 === g2 && (y += t5.width / 2, x2 += t5.height / 2), 4 === g2 && (x2 += t5.height / 2), 5 === g2 && (y -= t5.width / 2, x2 += t5.height / 2), 6 === g2 && (y -= t5.width / 2), 7 === g2 && (y -= t5.width / 2, x2 -= t5.height / 2);
  }
  var W4 = n5, v2 = n5;
  return (m2 + 90) % 360 > 180 ? (W4 -= d2, v2 -= d2) : v2 += d2, { points: [[y, x2], [n5, i5], [v2, i5]], text: [W4, i5 - f], angle: m2 + 90 };
};
var O2 = function(t5) {
  var i5 = t5.data, o4 = t5.annotations, e5 = t5.getPosition, a4 = t5.getDimensions;
  return (0, import_react2.useMemo)(function() {
    return P2({ data: i5, annotations: o4, getPosition: e5, getDimensions: a4 });
  }, [i5, o4, e5, a4]);
};
var j2 = function(t5) {
  var i5 = t5.annotations;
  return (0, import_react2.useMemo)(function() {
    return i5.map(function(t6) {
      return g({}, t6, { computed: S2(g({}, t6)) });
    });
  }, [i5]);
};
var M2 = function(t5) {
  return (0, import_react2.useMemo)(function() {
    return S2(t5);
  }, [t5]);
};
var T3 = function(t5) {
  var n5 = t5.datum, o4 = t5.x, e5 = t5.y, r4 = t5.note, s = M(), l2 = Dr(), u = l2.animate, d2 = l2.config, k2 = useSpring({ x: o4, y: e5, config: d2, immediate: !u });
  return "function" == typeof r4 ? (0, import_react2.createElement)(r4, { x: o4, y: e5, datum: n5 }) : (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [s.annotations.text.outlineWidth > 0 && (0, import_jsx_runtime2.jsx)(animated3.text, { x: k2.x, y: k2.y, style: g({}, s.annotations.text, { strokeLinejoin: "round", strokeWidth: 2 * s.annotations.text.outlineWidth, stroke: s.annotations.text.outlineColor }), children: r4 }), (0, import_jsx_runtime2.jsx)(animated3.text, { x: k2.x, y: k2.y, style: (0, import_omit.default)(s.annotations.text, ["outlineWidth", "outlineColor"]), children: r4 })] });
};
var E3 = function(t5) {
  var i5 = t5.points, o4 = t5.isOutline, e5 = void 0 !== o4 && o4, a4 = M(), r4 = (0, import_react2.useMemo)(function() {
    var t6 = i5[0];
    return i5.slice(1).reduce(function(t7, n5) {
      return t7 + " L" + n5[0] + "," + n5[1];
    }, "M" + t6[0] + "," + t6[1]);
  }, [i5]), s = It(r4);
  if (e5 && a4.annotations.link.outlineWidth <= 0)
    return null;
  var l2 = g({}, a4.annotations.link);
  return e5 && (l2.strokeLinecap = "square", l2.strokeWidth = a4.annotations.link.strokeWidth + 2 * a4.annotations.link.outlineWidth, l2.stroke = a4.annotations.link.outlineColor, l2.opacity = a4.annotations.link.outlineOpacity), (0, import_jsx_runtime2.jsx)(animated3.path, { fill: "none", d: s, style: l2 });
};
var I = function(t5) {
  var n5 = t5.x, i5 = t5.y, o4 = t5.size, e5 = M(), a4 = Dr(), r4 = a4.animate, s = a4.config, l2 = useSpring({ x: n5, y: i5, radius: o4 / 2, config: s, immediate: !r4 });
  return (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [e5.annotations.outline.outlineWidth > 0 && (0, import_jsx_runtime2.jsx)(animated3.circle, { cx: l2.x, cy: l2.y, r: l2.radius, style: g({}, e5.annotations.outline, { fill: "none", strokeWidth: e5.annotations.outline.strokeWidth + 2 * e5.annotations.outline.outlineWidth, stroke: e5.annotations.outline.outlineColor, opacity: e5.annotations.outline.outlineOpacity }) }), (0, import_jsx_runtime2.jsx)(animated3.circle, { cx: l2.x, cy: l2.y, r: l2.radius, style: e5.annotations.outline })] });
};
var D2 = function(t5) {
  var n5 = t5.x, i5 = t5.y, o4 = t5.size, e5 = void 0 === o4 ? k.dotSize : o4, a4 = M(), r4 = Dr(), s = r4.animate, l2 = r4.config, u = useSpring({ x: n5, y: i5, radius: e5 / 2, config: l2, immediate: !s });
  return (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [a4.annotations.outline.outlineWidth > 0 && (0, import_jsx_runtime2.jsx)(animated3.circle, { cx: u.x, cy: u.y, r: u.radius, style: g({}, a4.annotations.outline, { fill: "none", strokeWidth: 2 * a4.annotations.outline.outlineWidth, stroke: a4.annotations.outline.outlineColor, opacity: a4.annotations.outline.outlineOpacity }) }), (0, import_jsx_runtime2.jsx)(animated3.circle, { cx: u.x, cy: u.y, r: u.radius, style: a4.annotations.symbol })] });
};
var L3 = function(t5) {
  var n5 = t5.x, i5 = t5.y, o4 = t5.width, e5 = t5.height, a4 = t5.borderRadius, r4 = void 0 === a4 ? 6 : a4, s = M(), l2 = Dr(), u = l2.animate, d2 = l2.config, k2 = useSpring({ x: n5 - o4 / 2, y: i5 - e5 / 2, width: o4, height: e5, config: d2, immediate: !u });
  return (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [s.annotations.outline.outlineWidth > 0 && (0, import_jsx_runtime2.jsx)(animated3.rect, { x: k2.x, y: k2.y, rx: r4, ry: r4, width: k2.width, height: k2.height, style: g({}, s.annotations.outline, { fill: "none", strokeWidth: s.annotations.outline.strokeWidth + 2 * s.annotations.outline.outlineWidth, stroke: s.annotations.outline.outlineColor, opacity: s.annotations.outline.outlineOpacity }) }), (0, import_jsx_runtime2.jsx)(animated3.rect, { x: k2.x, y: k2.y, rx: r4, ry: r4, width: k2.width, height: k2.height, style: s.annotations.outline })] });
};
var R3 = function(t5) {
  var n5 = t5.datum, i5 = t5.x, o4 = t5.y, e5 = t5.note, a4 = M2(t5);
  if (!W3(e5))
    throw new Error("note should be a valid react element");
  return (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [(0, import_jsx_runtime2.jsx)(E3, { points: a4.points, isOutline: true }), b3(t5) && (0, import_jsx_runtime2.jsx)(I, { x: i5, y: o4, size: t5.size }), w3(t5) && (0, import_jsx_runtime2.jsx)(D2, { x: i5, y: o4, size: t5.size }), z3(t5) && (0, import_jsx_runtime2.jsx)(L3, { x: i5, y: o4, width: t5.width, height: t5.height, borderRadius: t5.borderRadius }), (0, import_jsx_runtime2.jsx)(E3, { points: a4.points }), (0, import_jsx_runtime2.jsx)(T3, { datum: n5, x: a4.text[0], y: a4.text[1], note: e5 })] });
};
var q2 = function(t5, n5) {
  n5.forEach(function(n6, i5) {
    var o4 = n6[0], e5 = n6[1];
    0 === i5 ? t5.moveTo(o4, e5) : t5.lineTo(o4, e5);
  });
};
var J = function(t5, n5) {
  var i5 = n5.annotations, o4 = n5.theme;
  0 !== i5.length && (t5.save(), i5.forEach(function(n6) {
    if (!v(n6.note))
      throw new Error("note is invalid for canvas implementation");
    o4.annotations.link.outlineWidth > 0 && (t5.lineCap = "square", t5.strokeStyle = o4.annotations.link.outlineColor, t5.lineWidth = o4.annotations.link.strokeWidth + 2 * o4.annotations.link.outlineWidth, t5.beginPath(), q2(t5, n6.computed.points), t5.stroke(), t5.lineCap = "butt"), b3(n6) && o4.annotations.outline.outlineWidth > 0 && (t5.strokeStyle = o4.annotations.outline.outlineColor, t5.lineWidth = o4.annotations.outline.strokeWidth + 2 * o4.annotations.outline.outlineWidth, t5.beginPath(), t5.arc(n6.x, n6.y, n6.size / 2, 0, 2 * Math.PI), t5.stroke()), w3(n6) && o4.annotations.symbol.outlineWidth > 0 && (t5.strokeStyle = o4.annotations.symbol.outlineColor, t5.lineWidth = 2 * o4.annotations.symbol.outlineWidth, t5.beginPath(), t5.arc(n6.x, n6.y, n6.size / 2, 0, 2 * Math.PI), t5.stroke()), z3(n6) && o4.annotations.outline.outlineWidth > 0 && (t5.strokeStyle = o4.annotations.outline.outlineColor, t5.lineWidth = o4.annotations.outline.strokeWidth + 2 * o4.annotations.outline.outlineWidth, t5.beginPath(), t5.rect(n6.x - n6.width / 2, n6.y - n6.height / 2, n6.width, n6.height), t5.stroke()), t5.strokeStyle = o4.annotations.link.stroke, t5.lineWidth = o4.annotations.link.strokeWidth, t5.beginPath(), q2(t5, n6.computed.points), t5.stroke(), b3(n6) && (t5.strokeStyle = o4.annotations.outline.stroke, t5.lineWidth = o4.annotations.outline.strokeWidth, t5.beginPath(), t5.arc(n6.x, n6.y, n6.size / 2, 0, 2 * Math.PI), t5.stroke()), w3(n6) && (t5.fillStyle = o4.annotations.symbol.fill, t5.beginPath(), t5.arc(n6.x, n6.y, n6.size / 2, 0, 2 * Math.PI), t5.fill()), z3(n6) && (t5.strokeStyle = o4.annotations.outline.stroke, t5.lineWidth = o4.annotations.outline.strokeWidth, t5.beginPath(), t5.rect(n6.x - n6.width / 2, n6.y - n6.height / 2, n6.width, n6.height), t5.stroke()), "function" == typeof n6.note ? n6.note(t5, { datum: n6.datum, x: n6.computed.text[0], y: n6.computed.text[1], theme: o4 }) : (t5.font = o4.annotations.text.fontSize + "px " + o4.annotations.text.fontFamily, t5.textAlign = "left", t5.textBaseline = "alphabetic", t5.fillStyle = o4.annotations.text.fill, t5.strokeStyle = o4.annotations.text.outlineColor, t5.lineWidth = 2 * o4.annotations.text.outlineWidth, o4.annotations.text.outlineWidth > 0 && (t5.lineJoin = "round", t5.strokeText(n6.note, n6.computed.text[0], n6.computed.text[1]), t5.lineJoin = "miter"), t5.fillText(n6.note, n6.computed.text[0], n6.computed.text[1]));
  }), t5.restore());
};

// node_modules/@nivo/bar/dist/nivo-bar.mjs
var import_jsx_runtime3 = __toESM(require_jsx_runtime(), 1);

// node_modules/@nivo/canvas/dist/nivo-canvas.mjs
var o2 = function(o4, e5, r4, a4, i5, u) {
  u > 0 ? (o4.moveTo(e5 + u, r4), o4.lineTo(e5 + a4 - u, r4), o4.quadraticCurveTo(e5 + a4, r4, e5 + a4, r4 + u), o4.lineTo(e5 + a4, r4 + i5 - u), o4.quadraticCurveTo(e5 + a4, r4 + i5, e5 + a4 - u, r4 + i5), o4.lineTo(e5 + u, r4 + i5), o4.quadraticCurveTo(e5, r4 + i5, e5, r4 + i5 - u), o4.lineTo(e5, r4 + u), o4.quadraticCurveTo(e5, r4, e5 + u, r4), o4.closePath()) : o4.rect(e5, r4, a4, i5);
};

// node_modules/@nivo/bar/dist/nivo-bar.mjs
var import_uniqBy2 = __toESM(require_uniqBy(), 1);
function Q2() {
  return Q2 = Object.assign ? Object.assign.bind() : function(e5) {
    for (var t5 = 1; t5 < arguments.length; t5++) {
      var a4 = arguments[t5];
      for (var i5 in a4)
        ({}).hasOwnProperty.call(a4, i5) && (e5[i5] = a4[i5]);
    }
    return e5;
  }, Q2.apply(null, arguments);
}
function U(e5, t5) {
  if (null == e5)
    return {};
  var a4 = {};
  for (var i5 in e5)
    if ({}.hasOwnProperty.call(e5, i5)) {
      if (-1 !== t5.indexOf(i5))
        continue;
      a4[i5] = e5[i5];
    }
  return a4;
}
var Z2;
var $ = function(e5) {
  var t5 = e5.bars, a4 = e5.annotations, i5 = O2({ data: t5, annotations: a4, getPosition: function(e6) {
    return { x: e6.x + e6.width / 2, y: e6.y + e6.height / 2 };
  }, getDimensions: function(e6) {
    var t6 = e6.height, a5 = e6.width;
    return { width: a5, height: t6, size: Math.max(a5, t6) };
  } });
  return (0, import_jsx_runtime3.jsx)(import_jsx_runtime3.Fragment, { children: i5.map(function(e6, t6) {
    return (0, import_jsx_runtime3.jsx)(R3, Q2({}, e6), t6);
  }) });
};
var ee = function(e5) {
  var t5 = e5.width, a4 = e5.height, i5 = e5.legends, n5 = e5.toggleSerie;
  return (0, import_jsx_runtime3.jsx)(import_jsx_runtime3.Fragment, { children: i5.map(function(e6, i6) {
    var l2, r4 = e6[0], o4 = e6[1];
    return (0, import_jsx_runtime3.jsx)(E, Q2({}, r4, { containerWidth: t5, containerHeight: a4, data: null != (l2 = r4.data) ? l2 : o4, toggleSerie: r4.toggleSerie && "keys" === r4.dataFrom ? n5 : void 0 }), i6);
  }) });
};
var te = ["data"];
var ae = function(i5) {
  var n5, l2 = i5.bar, r4 = l2.data, o4 = U(l2, te), d2 = i5.style, u = d2.borderColor, s = d2.color, c = d2.height, h = d2.labelColor, f = d2.labelOpacity, b4 = d2.labelX, g2 = d2.labelY, v2 = d2.transform, m2 = d2.width, p2 = d2.textAnchor, y = i5.borderRadius, x2 = i5.borderWidth, S3 = i5.label, k2 = i5.shouldRenderLabel, w4 = i5.isInteractive, L4 = i5.onClick, M3 = i5.onMouseEnter, B2 = i5.onMouseLeave, R4 = i5.tooltip, O3 = i5.isFocusable, I2 = i5.ariaLabel, T5 = i5.ariaLabelledBy, P3 = i5.ariaDescribedBy, E4 = i5.ariaDisabled, F = i5.ariaHidden, z4 = M(), X3 = z(), G = X3.showTooltipFromEvent, N = X3.showTooltipAt, j3 = X3.hideTooltip, K = (0, import_react3.useMemo)(function() {
    return function() {
      return (0, import_react3.createElement)(R4, Q2({}, o4, r4));
    };
  }, [R4, o4, r4]), _2 = (0, import_react3.useCallback)(function(e5) {
    null == L4 || L4(Q2({ color: o4.color }, r4), e5);
  }, [o4, r4, L4]), q3 = (0, import_react3.useCallback)(function(e5) {
    return G(K(), e5);
  }, [G, K]), J3 = (0, import_react3.useCallback)(function(e5) {
    null == M3 || M3(r4, e5), G(K(), e5);
  }, [r4, M3, G, K]), Z3 = (0, import_react3.useCallback)(function(e5) {
    null == B2 || B2(r4, e5), j3();
  }, [r4, j3, B2]), $2 = (0, import_react3.useCallback)(function() {
    N(K(), [o4.absX + o4.width / 2, o4.absY]);
  }, [N, K, o4]), ee2 = (0, import_react3.useCallback)(function() {
    j3();
  }, [j3]);
  return (0, import_jsx_runtime3.jsxs)(animated2.g, { transform: v2, children: [(0, import_jsx_runtime3.jsx)(animated2.rect, { width: to(m2, function(e5) {
    return Math.max(e5, 0);
  }), height: to(c, function(e5) {
    return Math.max(e5, 0);
  }), rx: y, ry: y, fill: null != (n5 = r4.fill) ? n5 : s, strokeWidth: x2, stroke: u, focusable: O3, tabIndex: O3 ? 0 : void 0, "aria-label": I2 ? I2(r4) : void 0, "aria-labelledby": T5 ? T5(r4) : void 0, "aria-describedby": P3 ? P3(r4) : void 0, "aria-disabled": E4 ? E4(r4) : void 0, "aria-hidden": F ? F(r4) : void 0, onMouseEnter: w4 ? J3 : void 0, onMouseMove: w4 ? q3 : void 0, onMouseLeave: w4 ? Z3 : void 0, onClick: w4 ? _2 : void 0, onFocus: w4 && O3 ? $2 : void 0, onBlur: w4 && O3 ? ee2 : void 0, "data-testid": "bar.item." + r4.id + "." + r4.index }), k2 && (0, import_jsx_runtime3.jsx)(b, { x: b4, y: g2, textAnchor: p2, dominantBaseline: "central", fillOpacity: f, style: Q2({}, z4.labels.text, { pointerEvents: "none", fill: h }), children: S3 })] });
};
var ie = ["color", "label"];
var ne = function(e5) {
  var t5 = e5.color, a4 = e5.label, i5 = U(e5, ie);
  return (0, import_jsx_runtime3.jsx)(T, { id: a4, value: i5.formattedValue, enableChip: true, color: t5 });
};
var le = { indexBy: "id", keys: ["value"], groupMode: "stacked", layout: "vertical", valueScale: { type: "linear", nice: true, round: false }, indexScale: { type: "band", round: false }, padding: 0.1, innerPadding: 0, enableGridX: false, enableGridY: true, enableLabel: true, label: "formattedValue", labelPosition: "middle", labelOffset: 0, labelSkipWidth: 0, labelSkipHeight: 0, labelTextColor: { theme: "labels.text.fill" }, colorBy: "id", colors: { scheme: "nivo" }, borderRadius: 0, borderWidth: 0, borderColor: { from: "color" }, isInteractive: true, tooltip: ne, tooltipLabel: function(e5) {
  return e5.id + " - " + e5.indexValue;
}, legends: [], initialHiddenIds: [], annotations: [], enableTotals: false, totalsOffset: 10 };
var re = Q2({}, le, { layers: ["grid", "axes", "bars", "totals", "markers", "legends", "annotations"], axisTop: null, axisRight: null, axisBottom: {}, axisLeft: {}, barComponent: ae, defs: [], fill: [], markers: [], animate: true, animateOnMount: false, motionConfig: "default", role: "img", isFocusable: false });
var oe = Q2({}, le, { layers: ["grid", "axes", "bars", "totals", "legends", "annotations"], axisTop: null, axisRight: null, axisBottom: {}, axisLeft: {}, renderBar: function(e5, t5) {
  var a4 = t5.bar, i5 = a4.color, n5 = a4.height, l2 = a4.width, r4 = a4.x, o4 = a4.y, d2 = t5.borderColor, u = t5.borderRadius, s = t5.borderWidth, c = t5.label, h = t5.shouldRenderLabel, f = t5.labelStyle, b4 = t5.labelX, g2 = t5.labelY, v2 = t5.textAnchor;
  e5.fillStyle = i5, s > 0 && (e5.strokeStyle = d2, e5.lineWidth = s), e5.beginPath(), o2(e5, r4, o4, l2, n5, Math.min(u, n5)), e5.fill(), s > 0 && e5.stroke(), h && (e5.textBaseline = "middle", e5.textAlign = "middle" === v2 ? "center" : v2, d(e5, f, c, r4 + b4, o4 + g2));
}, pixelRatio: "undefined" != typeof window && null != (Z2 = window.devicePixelRatio) ? Z2 : 1 });
var de = function(e5, t5, a4, i5, n5, l2) {
  return pn(i5, { all: e5.map(t5), min: 0, max: 0 }, n5, l2).padding(a4);
};
var ue = function(e5, t5) {
  return e5.map(function(e6) {
    return Q2({}, t5.reduce(function(e7, t6) {
      return e7[t6] = null, e7;
    }, {}), e6);
  });
};
var se = function(e5) {
  return Object.keys(e5).reduce(function(t5, a4) {
    return e5[a4] && (t5[a4] = e5[a4]), t5;
  }, {});
};
var ce = function(e5) {
  return [e5, Number(e5)];
};
function he(e5, t5, a4, i5) {
  return void 0 === e5 && (e5 = le.layout), void 0 === a4 && (a4 = le.labelPosition), void 0 === i5 && (i5 = le.labelOffset), function(n5, l2) {
    var r4 = i5 * (t5 ? -1 : 1);
    if ("horizontal" === e5) {
      var o4 = n5 / 2;
      return "start" === a4 ? o4 = t5 ? n5 : 0 : "end" === a4 && (o4 = t5 ? 0 : n5), { labelX: o4 + r4, labelY: l2 / 2, textAnchor: "middle" === a4 ? "middle" : t5 ? "end" : "start" };
    }
    var d2 = l2 / 2;
    return "start" === a4 ? d2 = t5 ? 0 : l2 : "end" === a4 && (d2 = t5 ? l2 : 0), { labelX: n5 / 2, labelY: d2 - r4, textAnchor: "middle" };
  };
}
var fe = ["layout", "width", "height", "padding", "innerPadding", "valueScale", "indexScale", "hiddenIds"];
var be = function(e5, t5) {
  return e5 > t5;
};
var ge = function(e5, t5) {
  return e5 < t5;
};
var ve = function(e5, t5) {
  return Array.from(" ".repeat(t5 - e5), function(t6, a4) {
    return e5 + a4;
  });
};
var me = function(e5) {
  return be(e5, 0) ? 0 : e5;
};
var pe = function(e5, t5, a4, i5) {
  var n5 = e5.data, l2 = e5.formatValue, r4 = e5.getColor, o4 = e5.getIndex, d2 = e5.getTooltipLabel, u = e5.innerPadding, s = void 0 === u ? 0 : u, c = e5.keys, h = e5.xScale, f = e5.yScale, b4 = e5.margin, g2 = a4 ? ge : be, v2 = n5.map(se), m2 = [];
  return c.forEach(function(e6, a5) {
    return ve(0, h.domain().length).forEach(function(u2) {
      var c2, p2, y, x2 = ce(n5[u2][e6]), S3 = x2[0], k2 = x2[1], w4 = o4(n5[u2]), L4 = (null != (c2 = h(w4)) ? c2 : 0) + t5 * a5 + s * a5, C3 = g2(p2 = k2, 0) ? null != (y = f(p2)) ? y : 0 : i5, W4 = function(e7, t6) {
        var a6;
        return g2(e7, 0) ? i5 - t6 : (null != (a6 = f(e7)) ? a6 : 0) - i5;
      }(k2, C3), M3 = { id: e6, value: null === S3 ? S3 : k2, formattedValue: l2(k2), hidden: false, index: u2, indexValue: w4, data: v2[u2] };
      m2.push({ key: e6 + "." + M3.indexValue, index: m2.length, data: M3, x: L4, y: C3, absX: b4.left + L4, absY: b4.top + C3, width: t5, height: W4, color: r4(M3), label: d2(M3) });
    });
  }), m2;
};
var ye = function(e5, t5, a4, i5) {
  var n5 = e5.data, l2 = e5.formatValue, r4 = e5.getIndex, o4 = e5.getColor, d2 = e5.getTooltipLabel, u = e5.keys, s = e5.innerPadding, c = void 0 === s ? 0 : s, h = e5.xScale, f = e5.yScale, b4 = e5.margin, g2 = a4 ? ge : be, v2 = n5.map(se), m2 = [];
  return u.forEach(function(e6, a5) {
    return ve(0, f.domain().length).forEach(function(u2) {
      var s2, p2, y, x2 = ce(n5[u2][e6]), S3 = x2[0], k2 = x2[1], w4 = r4(n5[u2]), L4 = g2(p2 = k2, 0) ? i5 : null != (y = h(p2)) ? y : 0, C3 = (null != (s2 = f(w4)) ? s2 : 0) + t5 * a5 + c * a5, W4 = function(e7, t6) {
        var a6;
        return g2(e7, 0) ? (null != (a6 = h(e7)) ? a6 : 0) - i5 : i5 - t6;
      }(k2, L4), M3 = { id: e6, value: null === S3 ? S3 : k2, formattedValue: l2(k2), hidden: false, index: u2, indexValue: w4, data: v2[u2] };
      m2.push({ key: e6 + "." + M3.indexValue, index: m2.length, data: M3, x: L4, y: C3, absX: b4.left + L4, absY: b4.top + C3, width: W4, height: t5, color: o4(M3), label: d2(M3) });
    });
  }), m2;
};
var xe = function(e5) {
  var t5, a4, i5, n5 = e5.layout, l2 = e5.width, r4 = e5.height, o4 = e5.padding, d2 = void 0 === o4 ? 0 : o4, u = e5.innerPadding, s = void 0 === u ? 0 : u, c = e5.valueScale, h = e5.indexScale, f = e5.hiddenIds, b4 = void 0 === f ? [] : f, g2 = U(e5, fe), v2 = g2.keys.filter(function(e6) {
    return !b4.includes(e6);
  }), m2 = ue(g2.data, v2), p2 = "vertical" === n5 ? ["y", "x", l2] : ["x", "y", r4], y = p2[0], x2 = p2[1], S3 = p2[2], k2 = de(m2, g2.getIndex, d2, h, S3, x2), w4 = "auto" === c.min ? me : function(e6) {
    return e6;
  }, L4 = m2.reduce(function(e6, t6) {
    return [].concat(e6, v2.map(function(e7) {
      return t6[e7];
    }));
  }, []).filter(Boolean), C3 = w4(Math.min.apply(Math, L4)), W4 = (i5 = Math.max.apply(Math, L4), isFinite(i5) ? i5 : 0), M3 = pn(c, { all: L4, min: C3, max: W4 }, "x" === y ? l2 : r4, y), B2 = "vertical" === n5 ? [k2, M3] : [M3, k2], R4 = B2[0], O3 = B2[1], I2 = (k2.bandwidth() - s * (v2.length - 1)) / v2.length, V3 = [Q2({}, g2, { data: m2, keys: v2, innerPadding: s, xScale: R4, yScale: O3 }), I2, null != (t5 = c.reverse) && t5, null != (a4 = M3(0)) ? a4 : 0];
  return { xScale: R4, yScale: O3, bars: I2 > 0 ? "vertical" === n5 ? pe.apply(void 0, V3) : ye.apply(void 0, V3) : [] };
};
var Se = ["data", "layout", "width", "height", "padding", "valueScale", "indexScale", "hiddenIds"];
var ke = function(e5) {
  var t5;
  return e5.some(Array.isArray) ? ke((t5 = []).concat.apply(t5, e5)) : e5;
};
var we = function(e5, t5, a4) {
  var i5 = e5.formatValue, n5 = e5.getColor, l2 = e5.getIndex, r4 = e5.getTooltipLabel, o4 = e5.innerPadding, d2 = e5.stackedData, u = e5.xScale, s = e5.yScale, c = e5.margin, h = [];
  return d2.forEach(function(e6) {
    return u.domain().forEach(function(d3, f) {
      var b4, g2, v2 = e6[f], m2 = null != (b4 = u(l2(v2.data))) ? b4 : 0, p2 = (null != (g2 = function(e7) {
        return s(e7[a4 ? 0 : 1]);
      }(v2)) ? g2 : 0) + 0.5 * o4, y = function(e7, t6) {
        var i6;
        return (null != (i6 = s(e7[a4 ? 1 : 0])) ? i6 : 0) - t6;
      }(v2, p2) - o4, x2 = ce(v2.data[e6.key]), S3 = x2[0], k2 = x2[1], w4 = { id: e6.key, value: null === S3 ? S3 : k2, formattedValue: i5(k2), hidden: false, index: f, indexValue: d3, data: se(v2.data) };
      h.push({ key: e6.key + "." + d3, index: h.length, data: w4, x: m2, y: p2, absX: c.left + m2, absY: c.top + p2, width: t5, height: y, color: n5(w4), label: r4(w4) });
    });
  }), h;
};
var Le = function(e5, t5, a4) {
  var i5 = e5.formatValue, n5 = e5.getColor, l2 = e5.getIndex, r4 = e5.getTooltipLabel, o4 = e5.innerPadding, d2 = e5.stackedData, u = e5.xScale, s = e5.yScale, c = e5.margin, h = [];
  return d2.forEach(function(e6) {
    return s.domain().forEach(function(d3, f) {
      var b4, g2, v2 = e6[f], m2 = null != (b4 = s(l2(v2.data))) ? b4 : 0, p2 = (null != (g2 = function(e7) {
        return u(e7[a4 ? 1 : 0]);
      }(v2)) ? g2 : 0) + 0.5 * o4, y = function(e7, t6) {
        var i6;
        return (null != (i6 = u(e7[a4 ? 0 : 1])) ? i6 : 0) - t6;
      }(v2, p2) - o4, x2 = ce(v2.data[e6.key]), S3 = x2[0], k2 = x2[1], w4 = { id: e6.key, value: null === S3 ? S3 : k2, formattedValue: i5(k2), hidden: false, index: f, indexValue: d3, data: se(v2.data) };
      h.push({ key: e6.key + "." + d3, index: h.length, data: w4, x: p2, y: m2, absX: c.left + p2, absY: c.top + m2, width: y, height: t5, color: n5(w4), label: r4(w4) });
    });
  }), h;
};
var Ce = function(e5) {
  var t5, a4, i5 = e5.data, n5 = e5.layout, l2 = e5.width, r4 = e5.height, o4 = e5.padding, d2 = void 0 === o4 ? 0 : o4, u = e5.valueScale, s = e5.indexScale, c = e5.hiddenIds, h = void 0 === c ? [] : c, f = U(e5, Se), b4 = f.keys.filter(function(e6) {
    return !h.includes(e6);
  }), g2 = stack_default().keys(b4).offset(diverging_default)(ue(i5, b4)), v2 = "vertical" === n5 ? ["y", "x", l2] : ["x", "y", r4], m2 = v2[0], p2 = v2[1], y = v2[2], x2 = de(i5, f.getIndex, d2, s, y, p2), S3 = (a4 = ke(g2), "log" === u.type ? a4.filter(function(e6) {
    return 0 !== e6;
  }) : a4), k2 = Math.min.apply(Math, S3), w4 = Math.max.apply(Math, S3), L4 = pn(u, { all: S3, min: k2, max: w4 }, "x" === m2 ? l2 : r4, m2), C3 = "vertical" === n5 ? [x2, L4] : [L4, x2], W4 = C3[0], M3 = C3[1], B2 = f.innerPadding > 0 ? f.innerPadding : 0, R4 = x2.bandwidth(), O3 = [Q2({}, f, { innerPadding: B2, stackedData: g2, xScale: W4, yScale: M3 }), R4, null != (t5 = u.reverse) && t5];
  return { xScale: W4, yScale: M3, bars: R4 > 0 ? "vertical" === n5 ? we.apply(void 0, O3) : Le.apply(void 0, O3) : [] };
};
var We = function(e5) {
  var t5 = e5.bars, a4 = e5.direction, i5 = e5.from, n5 = e5.groupMode, l2 = e5.layout, r4 = e5.legendLabel, o4 = e5.reverse, d2 = gn(null != r4 ? r4 : "indexes" === i5 ? "indexValue" : "id");
  return "indexes" === i5 ? function(e6, t6, a5) {
    var i6 = (0, import_uniqBy2.default)(e6.map(function(e7) {
      var t7, i7;
      return { id: null != (t7 = e7.data.indexValue) ? t7 : "", label: a5(e7.data), hidden: e7.data.hidden, color: null != (i7 = e7.color) ? i7 : "#000" };
    }), function(e7) {
      return e7.id;
    });
    return "horizontal" === t6 && i6.reverse(), i6;
  }(t5, l2, d2) : function(e6, t6, a5, i6, n6, l3) {
    var r5 = (0, import_uniqBy2.default)(e6.map(function(e7) {
      var t7;
      return { id: e7.data.id, label: l3(e7.data), hidden: e7.data.hidden, color: null != (t7 = e7.color) ? t7 : "#000" };
    }), function(e7) {
      return e7.id;
    });
    return ("vertical" === t6 && "stacked" === i6 && "column" === a5 && true !== n6 || "horizontal" === t6 && "stacked" === i6 && true === n6) && r5.reverse(), r5;
  }(t5, l2, a4, n5, o4, d2);
};
var Me = function(e5, t5, a4) {
  var i5 = e5.get(t5) || 0;
  e5.set(t5, i5 + a4);
};
var Be = function(e5, t5, a4) {
  var i5 = e5.get(t5) || 0;
  e5.set(t5, i5 + (a4 > 0 ? a4 : 0));
};
var Re = function(e5, t5, a4) {
  var i5 = e5.get(t5) || 0;
  e5.set(t5, Math.max(i5, Number(a4)));
};
var Oe = function(e5, t5) {
  var a4 = e5.get(t5) || 0;
  e5.set(t5, a4 + 1);
};
var Ie = function(t5) {
  var n5, l2 = t5.indexBy, r4 = void 0 === l2 ? le.indexBy : l2, o4 = t5.keys, d2 = void 0 === o4 ? le.keys : o4, u = t5.label, s = void 0 === u ? le.label : u, c = t5.tooltipLabel, h = void 0 === c ? le.tooltipLabel : c, g2 = t5.valueFormat, v2 = t5.colors, m2 = void 0 === v2 ? le.colors : v2, p2 = t5.colorBy, y = void 0 === p2 ? le.colorBy : p2, x2 = t5.borderColor, S3 = void 0 === x2 ? le.borderColor : x2, k2 = t5.labelTextColor, w4 = void 0 === k2 ? le.labelTextColor : k2, L4 = t5.groupMode, C3 = void 0 === L4 ? le.groupMode : L4, W4 = t5.layout, M3 = void 0 === W4 ? le.layout : W4, B2 = t5.data, R4 = t5.margin, O3 = t5.width, I2 = t5.height, V3 = t5.padding, T5 = void 0 === V3 ? le.padding : V3, H2 = t5.innerPadding, P3 = void 0 === H2 ? le.innerPadding : H2, E4 = t5.valueScale, A2 = void 0 === E4 ? le.valueScale : E4, X3 = t5.indexScale, Y3 = void 0 === X3 ? le.indexScale : X3, G = t5.initialHiddenIds, N = void 0 === G ? le.initialHiddenIds : G, j3 = t5.enableLabel, K = void 0 === j3 ? le.enableLabel : j3, _2 = t5.labelSkipWidth, q3 = void 0 === _2 ? le.labelSkipWidth : _2, J3 = t5.labelSkipHeight, U2 = void 0 === J3 ? le.labelSkipHeight : J3, Z3 = t5.legends, $2 = void 0 === Z3 ? le.legends : Z3, ee2 = t5.legendLabel, te2 = t5.totalsOffset, ae2 = void 0 === te2 ? le.totalsOffset : te2, ie2 = (0, import_react3.useState)(null != N ? N : []), ne2 = ie2[0], re2 = ie2[1], oe2 = (0, import_react3.useCallback)(function(e5) {
    re2(function(t6) {
      return t6.indexOf(e5) > -1 ? t6.filter(function(t7) {
        return t7 !== e5;
      }) : [].concat(t6, [e5]);
    });
  }, []), de2 = bn(r4), ue2 = bn(s), se2 = bn(h), ce2 = hn(g2), he2 = M(), fe2 = hr(m2, y), be2 = Ye(S3, he2), ge2 = Ye(w4, he2), ve2 = ("grouped" === C3 ? xe : Ce)({ layout: M3, data: B2, getIndex: de2, keys: d2, width: O3, height: I2, getColor: fe2, padding: T5, innerPadding: P3, valueScale: A2, indexScale: Y3, hiddenIds: ne2, formatValue: ce2, getTooltipLabel: se2, margin: R4 }), me2 = ve2.bars, pe2 = ve2.xScale, ye2 = ve2.yScale, Se2 = (0, import_react3.useMemo)(function() {
    return me2.filter(function(e5) {
      return null !== e5.data.value;
    }).map(function(e5, t6) {
      return Q2({}, e5, { index: t6 });
    });
  }, [me2]), ke2 = (0, import_react3.useCallback)(function(e5) {
    var t6 = e5.width, a4 = e5.height;
    return !!K && (!(q3 > 0 && t6 < q3) && !(U2 > 0 && a4 < U2));
  }, [K, q3, U2]), we2 = (0, import_react3.useMemo)(function() {
    return d2.map(function(e5) {
      var t6 = me2.find(function(t7) {
        return t7.data.id === e5;
      });
      return Q2({}, t6, { data: Q2({ id: e5 }, null == t6 ? void 0 : t6.data, { hidden: ne2.includes(e5) }) });
    });
  }, [ne2, d2, me2]), Le2 = null != (n5 = A2.reverse) && n5, Ie2 = (0, import_react3.useMemo)(function() {
    return $2.map(function(e5) {
      return [e5, We({ bars: "keys" === e5.dataFrom ? we2 : me2, direction: e5.direction, from: e5.dataFrom, groupMode: C3, layout: M3, legendLabel: ee2, reverse: Le2 })];
    });
  }, [$2, we2, me2, C3, M3, ee2, Le2]), Ve2 = (0, import_react3.useMemo)(function() {
    return function(e5, t6, a4, i5, n6, l3, r5) {
      void 0 === i5 && (i5 = le.layout), void 0 === n6 && (n6 = le.groupMode);
      var o5 = [];
      if (0 === e5.length)
        return o5;
      var d3 = /* @__PURE__ */ new Map(), u2 = e5[0].width, s2 = e5[0].height;
      if ("stacked" === n6) {
        var c2 = /* @__PURE__ */ new Map();
        e5.forEach(function(e6) {
          var t7 = e6.data, a5 = t7.indexValue, i6 = t7.value;
          Me(d3, a5, Number(i6)), Be(c2, a5, Number(i6));
        }), c2.forEach(function(e6, n7) {
          var c3, h3, f2, b4 = d3.get(n7) || 0;
          "vertical" === i5 ? (c3 = t6(n7), h3 = a4(e6), f2 = a4(e6 / 2)) : (c3 = t6(e6), h3 = a4(n7), f2 = t6(e6 / 2)), c3 += "vertical" === i5 ? u2 / 2 : l3, h3 += "vertical" === i5 ? -l3 : s2 / 2, o5.push({ key: "total_" + n7, x: c3, y: h3, value: b4, formattedValue: r5(b4), animationOffset: f2 });
        });
      } else if ("grouped" === n6) {
        var h2 = /* @__PURE__ */ new Map(), f = /* @__PURE__ */ new Map();
        e5.forEach(function(e6) {
          var t7 = e6.data, a5 = t7.indexValue, i6 = t7.value;
          Me(d3, a5, Number(i6)), Re(h2, a5, Number(i6)), Oe(f, a5);
        }), h2.forEach(function(e6, n7) {
          var c3, h3, b4, g3 = d3.get(n7) || 0, v3 = f.get(n7);
          "vertical" === i5 ? (c3 = t6(n7), h3 = a4(e6), b4 = a4(e6 / 2)) : (c3 = t6(e6), h3 = a4(n7), b4 = t6(e6 / 2)), c3 += "vertical" === i5 ? v3 * u2 / 2 : l3, h3 += "vertical" === i5 ? -l3 : v3 * s2 / 2, o5.push({ key: "total_" + n7, x: c3, y: h3, value: g3, formattedValue: r5(g3), animationOffset: b4 });
        });
      }
      return o5;
    }(me2, pe2, ye2, M3, C3, ae2, ce2);
  }, [me2, pe2, ye2, M3, C3, ae2, ce2]);
  return { bars: me2, barsWithValue: Se2, xScale: pe2, yScale: ye2, getIndex: de2, getLabel: ue2, getTooltipLabel: se2, formatValue: ce2, getColor: fe2, getBorderColor: be2, getLabelColor: ge2, shouldRenderBarLabel: ke2, hiddenIds: ne2, toggleSerie: oe2, legendsWithData: Ie2, barTotals: Ve2 };
};
var Ve = function(e5) {
  var t5 = e5.data, a4 = e5.springConfig, i5 = e5.animate, n5 = e5.layout, l2 = void 0 === n5 ? re.layout : n5, r4 = M();
  return useTransition(t5, { keys: function(e6) {
    return e6.key;
  }, from: function(e6) {
    return { x: "vertical" === l2 ? e6.x : e6.animationOffset, y: "vertical" === l2 ? e6.animationOffset : e6.y, labelOpacity: 0 };
  }, enter: function(e6) {
    return { x: e6.x, y: e6.y, labelOpacity: 1 };
  }, update: function(e6) {
    return { x: e6.x, y: e6.y, labelOpacity: 1 };
  }, leave: function(e6) {
    return { x: "vertical" === l2 ? e6.x : e6.animationOffset, y: "vertical" === l2 ? e6.animationOffset : e6.y, labelOpacity: 0 };
  }, config: a4, immediate: !i5, initial: i5 ? void 0 : null })(function(e6, t6) {
    return (0, import_jsx_runtime3.jsx)(animated2.text, { x: e6.x, y: e6.y, fillOpacity: e6.labelOpacity, style: Q2({}, r4.labels.text, { pointerEvents: "none" }), fontWeight: "bold", fontSize: r4.labels.text.fontSize, fontFamily: r4.labels.text.fontFamily, textAnchor: "vertical" === l2 ? "middle" : "start", alignmentBaseline: "vertical" === l2 ? "alphabetic" : "middle", children: t6.formattedValue }, t6.key);
  });
};
var Te = ["isInteractive", "animate", "motionConfig", "theme", "renderWrapper"];
var He = function(a4) {
  var i5, n5 = a4.data, r4 = a4.indexBy, o4 = a4.keys, s = a4.margin, c = a4.width, h = a4.height, f = a4.groupMode, b4 = a4.layout, g2 = a4.valueScale, S3 = a4.indexScale, k2 = a4.padding, w4 = a4.innerPadding, L4 = a4.axisTop, C3 = a4.axisRight, W4 = a4.axisBottom, B2 = void 0 === W4 ? re.axisBottom : W4, R4 = a4.axisLeft, O3 = void 0 === R4 ? re.axisLeft : R4, I2 = a4.enableGridX, T5 = void 0 === I2 ? re.enableGridX : I2, H2 = a4.enableGridY, P3 = void 0 === H2 ? re.enableGridY : H2, E4 = a4.gridXValues, F = a4.gridYValues, z4 = a4.layers, D3 = void 0 === z4 ? re.layers : z4, A2 = a4.barComponent, X3 = void 0 === A2 ? re.barComponent : A2, Y3 = a4.enableLabel, G = void 0 === Y3 ? re.enableLabel : Y3, N = a4.label, j3 = a4.labelSkipWidth, K = void 0 === j3 ? re.labelSkipWidth : j3, _2 = a4.labelSkipHeight, q3 = void 0 === _2 ? re.labelSkipHeight : _2, J3 = a4.labelTextColor, U2 = a4.labelPosition, Z3 = void 0 === U2 ? re.labelPosition : U2, te2 = a4.labelOffset, ae2 = void 0 === te2 ? re.labelOffset : te2, ie2 = a4.markers, ne2 = void 0 === ie2 ? re.markers : ie2, le2 = a4.colorBy, oe2 = a4.colors, de2 = a4.defs, ue2 = void 0 === de2 ? re.defs : de2, se2 = a4.fill, ce2 = void 0 === se2 ? re.fill : se2, fe2 = a4.borderRadius, be2 = void 0 === fe2 ? re.borderRadius : fe2, ge2 = a4.borderWidth, ve2 = void 0 === ge2 ? re.borderWidth : ge2, me2 = a4.borderColor, pe2 = a4.annotations, ye2 = void 0 === pe2 ? re.annotations : pe2, xe2 = a4.legendLabel, Se2 = a4.tooltipLabel, ke2 = a4.valueFormat, we2 = a4.isInteractive, Le2 = void 0 === we2 ? re.isInteractive : we2, Ce2 = a4.tooltip, We2 = void 0 === Ce2 ? re.tooltip : Ce2, Me2 = a4.onClick, Be2 = a4.onMouseEnter, Re2 = a4.onMouseLeave, Oe2 = a4.legends, Te2 = a4.role, He2 = void 0 === Te2 ? re.role : Te2, Pe2 = a4.ariaLabel, Ee2 = a4.ariaLabelledBy, Fe2 = a4.ariaDescribedBy, ze2 = a4.isFocusable, De2 = void 0 === ze2 ? re.isFocusable : ze2, Ae2 = a4.barAriaLabel, Xe2 = a4.barAriaLabelledBy, Ye3 = a4.barAriaDescribedBy, Ge2 = a4.barAriaHidden, Ne = a4.barAriaDisabled, je = a4.initialHiddenIds, Ke = a4.enableTotals, _e = void 0 === Ke ? re.enableTotals : Ke, qe = a4.totalsOffset, Je = void 0 === qe ? re.totalsOffset : qe, Qe = a4.forwardedRef, Ue = Dr(), Ze = Ue.animate, $e = Ue.config, et = cn(c, h, s), tt = et.outerWidth, at = et.outerHeight, it = et.margin, nt = et.innerWidth, lt = et.innerHeight, rt = Ie({ indexBy: r4, label: N, tooltipLabel: Se2, valueFormat: ke2, colors: oe2, colorBy: le2, borderColor: me2, labelTextColor: J3, groupMode: f, layout: b4, data: n5, keys: o4, margin: it, width: nt, height: lt, padding: k2, innerPadding: w4, valueScale: g2, indexScale: S3, enableLabel: G, labelSkipWidth: K, labelSkipHeight: q3, legends: Oe2, legendLabel: xe2, initialHiddenIds: je, totalsOffset: Je }), ot = rt.bars, dt = rt.barsWithValue, ut2 = rt.xScale, st = rt.yScale, ct2 = rt.getLabel, ht2 = rt.getTooltipLabel, ft2 = rt.getBorderColor, bt = rt.getLabelColor, gt2 = rt.shouldRenderBarLabel, vt = rt.toggleSerie, mt = rt.legendsWithData, pt = rt.barTotals, yt = rt.getColor, xt = he(b4, null != (i5 = null == g2 ? void 0 : g2.reverse) && i5, Z3, ae2), St = useTransition(dt, { keys: function(e5) {
    return e5.key;
  }, from: function(e5) {
    return Q2({ borderColor: ft2(e5), color: e5.color, height: 0, labelColor: bt(e5), labelOpacity: 0 }, xt(e5.width, e5.height), { transform: "translate(" + e5.x + ", " + (e5.y + e5.height) + ")", width: e5.width }, "vertical" === b4 ? {} : { height: e5.height, transform: "translate(" + e5.x + ", " + e5.y + ")", width: 0 });
  }, enter: function(e5) {
    return Q2({ borderColor: ft2(e5), color: e5.color, height: e5.height, labelColor: bt(e5), labelOpacity: 1 }, xt(e5.width, e5.height), { transform: "translate(" + e5.x + ", " + e5.y + ")", width: e5.width });
  }, update: function(e5) {
    return Q2({ borderColor: ft2(e5), color: e5.color, height: e5.height, labelColor: bt(e5), labelOpacity: 1 }, xt(e5.width, e5.height), { transform: "translate(" + e5.x + ", " + e5.y + ")", width: e5.width });
  }, leave: function(e5) {
    return Q2({ borderColor: ft2(e5), color: e5.color, height: 0, labelColor: bt(e5), labelOpacity: 0 }, xt(e5.width, e5.height), { labelY: 0, transform: "translate(" + e5.x + ", " + (e5.y + e5.height) + ")", width: e5.width }, "vertical" === b4 ? {} : Q2({}, xt(e5.width, e5.height), { labelX: 0, height: e5.height, transform: "translate(" + e5.x + ", " + e5.y + ")", width: 0 }));
  }, config: $e, immediate: !Ze, initial: Ze ? void 0 : null }), kt = (0, import_react3.useMemo)(function() {
    return { borderRadius: be2, borderWidth: ve2, enableLabel: G, isInteractive: Le2, labelSkipWidth: K, labelSkipHeight: q3, onClick: Me2, onMouseEnter: Be2, onMouseLeave: Re2, getTooltipLabel: ht2, tooltip: We2, isFocusable: De2, ariaLabel: Ae2, ariaLabelledBy: Xe2, ariaDescribedBy: Ye3, ariaHidden: Ge2, ariaDisabled: Ne };
  }, [be2, ve2, G, ht2, Le2, q3, K, Me2, Be2, Re2, We2, De2, Ae2, Xe2, Ye3, Ge2, Ne]), wt = Mn(ue2, ot, ce2, { dataKey: "data", targetKey: "data.fill" }), Lt = { annotations: null, axes: null, bars: null, grid: null, legends: null, markers: null, totals: null };
  D3.includes("annotations") && (Lt.annotations = (0, import_jsx_runtime3.jsx)($, { bars: ot, annotations: ye2 }, "annotations")), D3.includes("axes") && (Lt.axes = (0, import_jsx_runtime3.jsx)(V, { xScale: ut2, yScale: st, width: nt, height: lt, top: L4, right: C3, bottom: B2, left: O3 }, "axes")), D3.includes("bars") && (Lt.bars = (0, import_jsx_runtime3.jsx)(import_react3.Fragment, { children: St(function(e5, a5) {
    return (0, import_react3.createElement)(X3, Q2({}, kt, { bar: a5, style: e5, shouldRenderLabel: gt2(a5), label: ct2(a5.data) }));
  }) }, "bars")), D3.includes("grid") && (Lt.grid = (0, import_jsx_runtime3.jsx)(j, { width: nt, height: lt, xScale: T5 ? ut2 : null, yScale: P3 ? st : null, xValues: E4, yValues: F }, "grid")), D3.includes("legends") && (Lt.legends = (0, import_jsx_runtime3.jsx)(ee, { width: nt, height: lt, legends: mt, toggleSerie: vt }, "legends")), D3.includes("markers") && (Lt.markers = (0, import_jsx_runtime3.jsx)(Pt, { markers: ne2, width: nt, height: lt, xScale: ut2, yScale: st }, "markers")), D3.includes("totals") && _e && (Lt.totals = (0, import_jsx_runtime3.jsx)(Ve, { data: pt, springConfig: $e, animate: Ze, layout: b4 }, "totals"));
  var Ct = Q2({}, kt, { margin: it, width: c, height: h, innerWidth: nt, innerHeight: lt, bars: ot, legendData: mt, enableLabel: G, xScale: ut2, yScale: st, tooltip: We2, getTooltipLabel: ht2, onClick: Me2, onMouseEnter: Be2, onMouseLeave: Re2, getColor: yt });
  return (0, import_jsx_runtime3.jsx)(Rt, { width: tt, height: at, margin: it, defs: wt, role: He2, ariaLabel: Pe2, ariaLabelledBy: Ee2, ariaDescribedBy: Fe2, isFocusable: De2, ref: Qe, children: D3.map(function(e5, a5) {
    var i6;
    return "function" == typeof e5 ? (0, import_jsx_runtime3.jsx)(import_react3.Fragment, { children: (0, import_react3.createElement)(e5, Ct) }, a5) : null != (i6 = null == Lt ? void 0 : Lt[e5]) ? i6 : null;
  }) });
};
var Pe = (0, import_react3.forwardRef)(function(e5, t5) {
  var a4 = e5.isInteractive, i5 = void 0 === a4 ? re.isInteractive : a4, n5 = e5.animate, l2 = void 0 === n5 ? re.animate : n5, r4 = e5.motionConfig, o4 = void 0 === r4 ? re.motionConfig : r4, d2 = e5.theme, u = e5.renderWrapper, s = U(e5, Te);
  return (0, import_jsx_runtime3.jsx)(Fr, { animate: l2, isInteractive: i5, motionConfig: o4, renderWrapper: u, theme: d2, children: (0, import_jsx_runtime3.jsx)(He, Q2({}, s, { isInteractive: i5, forwardedRef: t5 })) });
});
var Ee = ["isInteractive", "renderWrapper", "theme"];
var Fe = function(e5, t5, a4, i5) {
  return e5.find(function(e6) {
    return wn(e6.x + t5.left, e6.y + t5.top, e6.width, e6.height, a4, i5);
  });
};
var ze = function(i5) {
  var n5, l2 = i5.data, d2 = i5.indexBy, u = i5.keys, h = i5.margin, f = i5.width, g2 = i5.height, v2 = i5.groupMode, p2 = i5.layout, y = i5.valueScale, x2 = i5.indexScale, w4 = i5.padding, L4 = i5.innerPadding, C3 = i5.axisTop, W4 = i5.axisRight, M3 = i5.axisBottom, R4 = void 0 === M3 ? oe.axisBottom : M3, T5 = i5.axisLeft, H2 = void 0 === T5 ? oe.axisLeft : T5, P3 = i5.enableGridX, F = void 0 === P3 ? oe.enableGridX : P3, z4 = i5.enableGridY, X3 = void 0 === z4 ? oe.enableGridY : z4, Y3 = i5.gridXValues, j3 = i5.gridYValues, K = i5.labelPosition, _2 = void 0 === K ? oe.labelPosition : K, q3 = i5.labelOffset, J3 = void 0 === q3 ? oe.labelOffset : q3, U2 = i5.layers, Z3 = void 0 === U2 ? oe.layers : U2, $2 = i5.renderBar, ee2 = void 0 === $2 ? oe.renderBar : $2, te2 = i5.enableLabel, ae2 = void 0 === te2 ? oe.enableLabel : te2, ie2 = i5.label, ne2 = i5.labelSkipWidth, le2 = void 0 === ne2 ? oe.labelSkipWidth : ne2, re2 = i5.labelSkipHeight, de2 = void 0 === re2 ? oe.labelSkipHeight : re2, ue2 = i5.labelTextColor, se2 = i5.colorBy, ce2 = i5.colors, fe2 = i5.borderRadius, be2 = void 0 === fe2 ? oe.borderRadius : fe2, ge2 = i5.borderWidth, ve2 = void 0 === ge2 ? oe.borderWidth : ge2, me2 = i5.borderColor, pe2 = i5.annotations, ye2 = void 0 === pe2 ? oe.annotations : pe2, xe2 = i5.legendLabel, Se2 = i5.tooltipLabel, ke2 = i5.valueFormat, we2 = i5.isInteractive, Le2 = void 0 === we2 ? oe.isInteractive : we2, Ce2 = i5.tooltip, We2 = void 0 === Ce2 ? oe.tooltip : Ce2, Me2 = i5.onClick, Be2 = i5.onMouseEnter, Re2 = i5.onMouseLeave, Oe2 = i5.legends, Ve2 = i5.pixelRatio, Te2 = void 0 === Ve2 ? oe.pixelRatio : Ve2, He2 = i5.role, Pe2 = i5.forwardedRef, Ee2 = i5.enableTotals, ze2 = void 0 === Ee2 ? oe.enableTotals : Ee2, De2 = i5.totalsOffset, Ae2 = void 0 === De2 ? oe.totalsOffset : De2, Xe2 = (0, import_react3.useRef)(null), Ye3 = M(), Ge2 = cn(f, g2, h), Ne = Ge2.margin, je = Ge2.innerWidth, Ke = Ge2.innerHeight, _e = Ge2.outerWidth, qe = Ge2.outerHeight, Je = Ie({ indexBy: d2, label: ie2, tooltipLabel: Se2, valueFormat: ke2, colors: ce2, colorBy: se2, borderColor: me2, labelTextColor: ue2, groupMode: v2, layout: p2, data: l2, keys: u, margin: Ne, width: je, height: Ke, padding: w4, innerPadding: L4, valueScale: y, indexScale: x2, enableLabel: ae2, labelSkipWidth: le2, labelSkipHeight: de2, legends: Oe2, legendLabel: xe2, totalsOffset: Ae2 }), Qe = Je.bars, Ue = Je.barsWithValue, Ze = Je.xScale, $e = Je.yScale, et = Je.getLabel, tt = Je.getTooltipLabel, at = Je.getBorderColor, it = Je.getLabelColor, nt = Je.shouldRenderBarLabel, lt = Je.legendsWithData, rt = Je.barTotals, ot = Je.getColor, dt = z(), ut2 = dt.showTooltipFromEvent, st = dt.hideTooltip, ct2 = j2({ annotations: O2({ data: Qe, annotations: ye2, getPosition: function(e5) {
    return { x: e5.x, y: e5.y };
  }, getDimensions: function(e5) {
    var t5 = e5.width, a4 = e5.height;
    return { width: t5, height: a4, size: Math.max(t5, a4) };
  } }) }), ht2 = (0, import_react3.useMemo)(function() {
    return { borderRadius: be2, borderWidth: ve2, isInteractive: Le2, isFocusable: false, labelSkipWidth: le2, labelSkipHeight: de2, margin: Ne, width: f, height: g2, innerWidth: je, innerHeight: Ke, bars: Qe, legendData: lt, enableLabel: ae2, xScale: Ze, yScale: $e, tooltip: We2, getTooltipLabel: tt, onClick: Me2, onMouseEnter: Be2, onMouseLeave: Re2, getColor: ot };
  }, [be2, ve2, Le2, le2, de2, Ne, f, g2, je, Ke, Qe, lt, ae2, Ze, $e, We2, tt, Me2, Be2, Re2, ot]), ft2 = hn(ke2), bt = he(p2, null != (n5 = null == y ? void 0 : y.reverse) && n5, _2, J3);
  (0, import_react3.useEffect)(function() {
    if (Xe2.current) {
      Xe2.current.width = _e * Te2, Xe2.current.height = qe * Te2;
      var e5 = Xe2.current.getContext("2d");
      e5.scale(Te2, Te2), e5.fillStyle = Ye3.background, e5.fillRect(0, 0, _e, qe), e5.translate(Ne.left, Ne.top), Z3.forEach(function(t5) {
        "grid" === t5 ? "number" == typeof Ye3.grid.line.strokeWidth && Ye3.grid.line.strokeWidth > 0 && (e5.lineWidth = Ye3.grid.line.strokeWidth, e5.strokeStyle = Ye3.grid.line.stroke, F && q(e5, { width: je, height: Ke, scale: Ze, axis: "x", values: Y3 }), X3 && q(e5, { width: je, height: Ke, scale: $e, axis: "y", values: j3 })) : "axes" === t5 ? W2(e5, { xScale: Ze, yScale: $e, width: je, height: Ke, top: C3, right: W4, bottom: R4, left: H2, theme: Ye3 }) : "bars" === t5 ? (a(e5, Ye3.text), Ue.forEach(function(t6) {
          ee2(e5, Q2({ bar: t6, borderColor: at(t6), borderRadius: be2, borderWidth: ve2, label: et(t6.data), shouldRenderLabel: nt(t6), labelStyle: Q2({}, Ye3.labels.text, { fill: it(t6) }) }, bt(t6.width, t6.height)));
        })) : "legends" === t5 ? lt.forEach(function(t6) {
          var a4 = t6[0], i6 = t6[1];
          L(e5, Q2({}, a4, { data: i6, containerWidth: je, containerHeight: Ke, theme: Ye3 }));
        }) : "annotations" === t5 ? J(e5, { annotations: ct2, theme: Ye3 }) : "totals" === t5 && ze2 ? function(e6, t6, a4, i6) {
          void 0 === i6 && (i6 = oe.layout), a(e6, a4.labels.text), e6.textBaseline = "vertical" === i6 ? "alphabetic" : "middle", e6.textAlign = "vertical" === i6 ? "center" : "start", t6.forEach(function(t7) {
            d(e6, a4.labels.text, t7.formattedValue, t7.x, t7.y);
          });
        }(e5, rt, Ye3, p2) : "function" == typeof t5 && t5(e5, ht2);
      }), e5.save();
    }
  }, [R4, H2, W4, C3, Ue, be2, ve2, ct2, F, X3, at, et, it, Y3, j3, v2, g2, Ke, je, ht2, Z3, p2, lt, Ne.left, Ne.top, qe, _e, Te2, ee2, Ze, $e, nt, Ye3, f, rt, ze2, ft2, bt]);
  var gt2 = (0, import_react3.useCallback)(function(e5) {
    if (Qe && Xe2.current) {
      var a4 = kn(Xe2.current, e5), i6 = a4[0], n6 = a4[1], l3 = Fe(Qe, Ne, i6, n6);
      void 0 !== l3 ? (ut2((0, import_react3.createElement)(We2, Q2({}, l3.data, { color: l3.color, label: l3.label, value: Number(l3.data.value) })), e5), "mouseenter" === e5.type && (null == Be2 || Be2(l3.data, e5))) : st();
    }
  }, [st, Ne, Be2, Qe, ut2, We2]), vt = (0, import_react3.useCallback)(function(e5) {
    if (Qe && Xe2.current) {
      st();
      var t5 = kn(Xe2.current, e5), a4 = t5[0], i6 = t5[1], n6 = Fe(Qe, Ne, a4, i6);
      n6 && (null == Re2 || Re2(n6.data, e5));
    }
  }, [st, Ne, Re2, Qe]), mt = (0, import_react3.useCallback)(function(e5) {
    if (Qe && Xe2.current) {
      var t5 = kn(Xe2.current, e5), a4 = t5[0], i6 = t5[1], n6 = Fe(Qe, Ne, a4, i6);
      void 0 !== n6 && (null == Me2 || Me2(Q2({}, n6.data, { color: n6.color }), e5));
    }
  }, [Ne, Me2, Qe]);
  return (0, import_jsx_runtime3.jsx)("canvas", { ref: Rn(Xe2, Pe2), width: _e * Te2, height: qe * Te2, style: { width: _e, height: qe, cursor: Le2 ? "auto" : "normal" }, onMouseEnter: Le2 ? gt2 : void 0, onMouseMove: Le2 ? gt2 : void 0, onMouseLeave: Le2 ? vt : void 0, onClick: Le2 ? mt : void 0, role: He2 });
};
var De = (0, import_react3.forwardRef)(function(e5, t5) {
  var a4 = e5.isInteractive, i5 = e5.renderWrapper, n5 = e5.theme, l2 = U(e5, Ee);
  return (0, import_jsx_runtime3.jsx)(Fr, { isInteractive: a4, renderWrapper: i5, theme: n5, animate: false, children: (0, import_jsx_runtime3.jsx)(ze, Q2({}, l2, { isInteractive: a4, forwardedRef: t5 })) });
});
var Ae = ["defaultWidth", "defaultHeight", "onResize", "debounceResize"];
var Xe = (0, import_react3.forwardRef)(function(e5, t5) {
  var a4 = e5.defaultWidth, i5 = e5.defaultHeight, n5 = e5.onResize, l2 = e5.debounceResize, r4 = U(e5, Ae);
  return (0, import_jsx_runtime3.jsx)($r, { defaultWidth: a4, defaultHeight: i5, onResize: n5, debounceResize: l2, children: function(e6) {
    var a5 = e6.width, i6 = e6.height;
    return (0, import_jsx_runtime3.jsx)(Pe, Q2({}, r4, { width: a5, height: i6, ref: t5 }));
  } });
});
var Ye2 = ["defaultWidth", "defaultHeight", "onResize", "debounceResize"];
var Ge = (0, import_react3.forwardRef)(function(e5, t5) {
  var a4 = e5.defaultWidth, i5 = e5.defaultHeight, n5 = e5.onResize, l2 = e5.debounceResize, r4 = U(e5, Ye2);
  return (0, import_jsx_runtime3.jsx)($r, { defaultWidth: a4, defaultHeight: i5, onResize: n5, debounceResize: l2, children: function(e6) {
    var a5 = e6.width, i6 = e6.height;
    return (0, import_jsx_runtime3.jsx)(De, Q2({}, r4, { width: a5, height: i6, ref: t5 }));
  } });
});
export {
  Pe as Bar,
  De as BarCanvas,
  ae as BarItem,
  ne as BarTooltip,
  Ve as BarTotals,
  Xe as ResponsiveBar,
  Ge as ResponsiveBarCanvas,
  oe as canvasDefaultProps,
  le as commonDefaultProps,
  re as svgDefaultProps
};
//# sourceMappingURL=@nivo_bar.js.map
